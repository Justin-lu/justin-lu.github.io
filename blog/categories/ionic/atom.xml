<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ionic | Hi I'm Justin-lu]]></title>
  <link href="http://justin-lu.github.io/blog/categories/ionic/atom.xml" rel="self"/>
  <link href="http://justin-lu.github.io/"/>
  <updated>2015-08-19T20:52:09+08:00</updated>
  <id>http://justin-lu.github.io/</id>
  <author>
    <name><![CDATA[Justin-lu]]></name>
    <email><![CDATA[gdjyluxiaoyong@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Building Mobile Applications with Rails and Ionic]]></title>
    <link href="http://justin-lu.github.io/blog/2015/07/21/building-mobile-applications-with-rails-and-ionic/"/>
    <updated>2015-07-21T21:52:21+08:00</updated>
    <id>http://justin-lu.github.io/blog/2015/07/21/building-mobile-applications-with-rails-and-ionic</id>
    <content type="html"><![CDATA[<p>本文介绍如何在rails上面开发ionic.</p>

<!-- More -->


<h1>Rails 关键 Gem 介绍</h1>

<h2><a href="https://github.com/intridea/grape">grape</a></h2>

<blockquote><p>An opinionated micro-framework for creating REST-like APIs in Ruby</p></blockquote>

<ol>
<li>非常轻量，可以脱离Rails，直接运行在Rack服务器之上，速度非常快；</li>
<li>完全符合REST风格；</li>
<li>大量DSL简化API的编写；</li>
<li>提供简单的版本控制；</li>
<li>文件目录结构：</li>
</ol>


<pre><code>├── services
|   ├── api
|   |   ├── entities
|   |   ├── helpers
|   |   |   ├── api_strong_parameters.rb
|   |   |   ├── authorization_helper.rb
|   |   |   └── response_helper.rb
|   |   └── v1
|   |       ├── model.rb
|   |       └── ...
|   ├── api.rb
</code></pre>

<pre><code>6. 添加配置至application.rb
</code></pre>

<pre><code class="ruby">config.paths.add File.join('app', 'api'), glob: File.join('**', '*.rb')
config.autoload_paths += Dir["#{config.root}/app/services/*"]
</code></pre>

<h2><a href="https://github.com/intridea/grape-entity">grape-entity</a></h2>

<blockquote><p>Entities - a simple Facade to use with your models and API - extracted from Grape.</p></blockquote>

<pre><code>1. 自定义放回的内容
2. 嵌套返回数据
3. ...
</code></pre>

<h2><a href="https://github.com/BrandyMint/grape-swagger-rails">grape-swagger-rails</a></h2>

<blockquote><p>Integration swagger to grape in rails</p></blockquote>

<pre><code>1. API在线测试工具
</code></pre>

<h2><a href="https://github.com/cyu/rack-cors">rack-cors</a></h2>

<blockquote><p>Rack Middleware for handling Cross-Origin Resource Sharing (CORS), which makes cross-origin AJAX possible.</p></blockquote>

<pre><code>1. 配置服务端允许跨域请求
2. 添加配置至application.rb,以允许所有请求的跨域操作
</code></pre>

<pre><code class="ruby">config.middleware.insert_before 0, "Rack::Cors", :debug =&gt; true,:logger =&gt; (-&gt; { Rails.logger }) do
    allow do
        origins '*'
        resource '*',
        :headers =&gt; :any,
        :methods =&gt; [:get, :post, :delete, :put, :options, :head],
        :max_age =&gt; 0
    end
end
</code></pre>

<h2><a href="https://github.com/jpush/jpush-api-ruby-client">jpush</a></h2>

<blockquote><p>  极光推送官方支持的 Ruby 版本服务器端 SDK</p></blockquote>

<pre><code>1. 通过配置app_key 和 app_secret 即可发推送通知
2. demo 代码
</code></pre>

<pre><code class="ruby">class PushNotifier
  class &lt;&lt; self
    def client
      return @client if @clien
      jpush_configs = Rails.application.secrets['jpush']
      @client = JPush::JPushClient.new *jpush_configs.values_at('app_key', 'app_secret')
    end
    def push(message, receiver_credential_ids, extras = {})
      # See how to define audience for pushing message, visit:
      # https://github.com/jpush/jpush-api-ruby-client/blob/master/example/push_example.rb
      receiver_credential_ids = [*receiver_credential_ids]
      payload = JPush::PushPayload.build(
        platform: JPush::Platform.all,
        audience: JPush::Audience.build(:_alias=&gt; receiver_credential_ids),
        notification: JPush::Notification.build(
          alert: message,
          ios: JPush::IOSNotification.build(
            alert: message,
            badge: "+1",
            sound: "happy",
            extras: extras
          ),
          android: JPush::AndroidNotification.build(
            alert: message,
            builder_id: 1,
            extras: extras
          )
        ),
        message: JPush::Message.build(
          msg_content: "message content test",
          title: "schoolmatch",
          content_type: "message content type test",
          extras: extras
        ),
        options:JPush::Options.build(
          sendno: 1,
          apns_production: Rails.env.production?
        )
      )
      result = client.sendPush(payload)
      Rails.logger.debug "Pushed message: #{result}"
      result
    end
    def debug?
      %w(development test staging).include? Rails.env
    end
  end
end
# usage: PushNotifier.push('test', 1)
</code></pre>

<pre><code>3. 注意`badge: "+1"`配置，该配置是jpush通过维护用户未读消息数，每次推送时，都会自动在当前消息数上做加1操作
</code></pre>

<h2><a href="https://stripe.com/">stripe</a></h2>

<blockquote><p>关于stripe的集成，清参考Marting大神的 <a href="https://ruby-china.org/topics/24897">blog</a></p></blockquote>

<h2><a href="https://github.com/saberma/china_sms">china_sms</a></h2>

<blockquote><p>中国各个短信平台 Ruby 接口，现支持云片网、推立方、亿美软通、短信宝、畅友网络</p></blockquote>

<pre><code>1. 在这里我们使用[云片网](yunpian.com)进行短信验证
2. 添加secret_key
3. 在云片网后台添加服务器IP白名单，签名，模板，等待审核
4. 审核通过，可在Rails Console里面发送短信
  demo code
</code></pre>

<pre><code class="ruby">ChinaSMS.use :yunpian, password: Rails.application.secrets.china_sms["password"]
ChinaSMS.class_eval do
  def self.debug
    Rails.env.development? || Rails.env.test?
  end
  def self.send_to(phone, message, debug = false)
    if debug || self.debug
      Rails.logger.debug(message)
    else
      # use sidekiq to send sms asynchronously
      delay.to(phone, message)
    end
  end
end
# "【留学助手】#{3721}（短信验证码，有效期3分钟，请尽快使用）" 该模板必须审核通过
# usage: ChinaSMS.send_to 15820700248, "【留学助手】#{3721}（短信验证码，有效期3分钟，请尽快使用）"
</code></pre>

<pre><code>5.在这里，为了配合验证码验证需求，需要在相应model上添加`verification_code`、`verification_expire_at`等字段
</code></pre>

<h1>Iionic</h1>

<h2>Ionic简单介绍</h2>

<ol>
<li>H5 navative app(HTML,CSS,Javascript)</li>
<li>Cordova/PhoneGap + AngularJs + AngularJs

<h2>命令行工具</h2></li>
</ol>


<pre><code class="sh">  alias 'ionic-serve'='ionic serve'
  alias 'ionic-build-ios'='ionic build ios'
  alias 'ionic-run-ios'='ionic run ios'
  alias 'ionic-emulate-ios'='ionic emulate ios --livereload'
  alias 'ionic-update-ios'='ionic platform update ios'
</code></pre>

<h2>构建工具</h2>

<p>  图形化 ionic APP 构建工具 <a href="https://creator.ionic.io/">Ionic Creator</a>，只需要拖拽就能创建基于 ionic 的 APP了</p>

<h2>目录结构</h2>

<p>简单介绍angular的目录结构
<code>
├── www
|   ├── js
|   |   ├── app.js
|   |   ├── controllers.js
|   |   ├── directives.js
|   |   ├── helper.js
|   |   ├── routes.js
|   |   ├── services.js
|   |   └── translations.js
|   ├── css
|   ├── templates
|   ├── img
|   ├── lib
|   └── index.html
</code></p>

<h2>IOS开发证书配置简单介绍</h2>

<ol>
<li>创建App Id</li>
<li>创建 Apns证书</li>
<li>创建 Provisioning Profile 证书</li>
<li>配置Xcode
注意：有时候Provisioning Profile证书在xcode没有生效，重启xcode即可
图文链接清参考：</li>
<li><a href="http://docs.jpush.io/client/ios_tutorials/#ios_1">jpush 官网</a></li>
<li><a href="http://blog.fir.im/how-to-build-adhoc-ipa/">fir 官网</a></li>
</ol>


<h2>调试技巧</h2>

<ol>
<li>Debug using Chrome <a href="https://chrome.google.com/webstore/detail/angularjs-batarang/ighdmehidhipcmcojjgiloacoafjmpfk?hl=en">AngularJS Batarang</a></li>
<li>Debug Using Safari</li>
<li>Using Xcode</li>
<li><p>Debug with Ionic CLI
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">alias</span> <span class="p">&amp;</span>lsquo<span class="p">;</span>ionic-emulate<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">=</span><span class="p">&amp;</span>lsquo<span class="p">;</span>ionic emulate ios -l -c -s<span class="p">&amp;</span>rsquo<span class="p">;</span>
</span><span class='line'>ionic  <span class="o">[</span>run<span class="p">|</span>emulate<span class="o">]</span> &lt;platform&gt; <span class="o">[</span>options<span class="o">]</span>
</span><span class='line'> <span class="o">[</span><span class="p">&amp;</span>ndash<span class="p">;</span>livereload<span class="p">|</span>-l<span class="o">]</span> <span class="p">&amp;</span>hellip<span class="p">;</span>. Live Reload app dev files from the device
</span><span class='line'> <span class="o">[</span><span class="p">&amp;</span>ndash<span class="p">;</span>consolelogs<span class="p">|</span>-c<span class="o">]</span> <span class="p">&amp;</span>hellip<span class="p">;</span> Print app console logs to Ionic CLI
</span><span class='line'> <span class="o">[</span><span class="p">&amp;</span>ndash<span class="p">;</span>serverlogs<span class="p">|</span>-s<span class="o">]</span> <span class="p">&amp;</span>hellip<span class="p">;</span>. Print dev server logs to Ionic CLI&lt;/p&gt;&lt;/li&gt;
</span><span class='line'>&lt;li&gt;&lt;p&gt;restart or r to restart the client app from the root&lt;/p&gt;&lt;/li&gt;
</span><span class='line'>&lt;li&gt;goto or g and a url to have the app navigate to the given url&lt;/li&gt;
</span><span class='line'>&lt;li&gt;consolelogs or c to <span class="nb">enable</span>/disable console log output&lt;/li&gt;
</span><span class='line'>&lt;li&gt;serverlogs or s to <span class="nb">enable</span>/disable server log output&lt;/li&gt;
</span><span class='line'>&lt;li&gt;quit or q to shutdown the server and <span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure>

<h2>性能优化</h2></li>
<li>整合 Crosswalk 至 Cordova（一个Web运行环境），替换自带的 Webview。
具体做法，可以参考 ionic 上的链接： <a href="http://forum.ionicframework.com/t/crosswalk-build/5778">Crosswalk Build</a></li>
<li>关闭页面切换动画，即 animation=&ldquo;no-animation&rdquo;</li>
<li>读取模板的时候，显示“加载中”圈圈，避免出现无响应的错觉</li>
<li>使用 <a href="https://github.com/Pasvaz/bindonce">Pasvaz/bindonce</a>，避免 Angular.js 对静态内容绑定所带来的性能消耗</li>
</ol>


<h2>Ionic能做什么？</h2>

<h3>多语言支持</h3>

<pre><code class="javascript">translations = {
  en: {
    students: 'Students',
  },
  zh: {
    students: '同学',
  }
};
app.config(function ($translateProvider) {
  //Get system language
  var systemLang = navigator.language || navigator.userLanguage;
  for(lang in translations){
    $translateProvider.translations(lang, translations[lang]);
  }
  //Set app language
  var appLang = helper.matchLanguageString(systemLang);
  $translateProvider.preferredLanguage(appLang);
});
</code></pre>

<h3>消息推送</h3>

<pre><code class="javascript">angular.module('xx.services', [])
  .factory('Push', function() {
    var push;
    return {
      setAlias: function(alias) {
        if (push) {
          console.log('jpush: set alias', alias);
          plugins.jPushPlugin.setAlias(alias);
        }
      },
      init: function(notificationCallback) {
        console.log('jpush: start init-----------------------');
        push = window.plugins &amp;&amp; window.plugins.jPushPlugin;
        if (push) {
          console.log('jpush: init');
          plugins.jPushPlugin.init();
          plugins.jPushPlugin.setDebugMode(true);
          plugins.jPushPlugin.openNotificationInAndroidCallback = notificationCallback;
          plugins.jPushPlugin.receiveNotificationIniOSCallback = notificationCallback;
          plugins.jPushPlugin.receiveMessageIniOSCallback = notificationCallback;
        }
      }
    };
  })

Push.init(notificationCallback);
var notificationCallback = function(data){
    var notification = angular.fromJson(data);
    //app 是否处于正在运行状
    var isActive = notification.notification;
    // here add your code
}
</code></pre>

<h3><a href="http://ngcordova.com/">ngcordova</a> <a href="http://ngcordova.com/docs/plugins/">Plugin</a></h3>

<blockquote><p>  调用手机摄像头
  IOS指纹识别
  OAuth
  获取地理位置</p></blockquote>

<h2>如何与Rails结合</h2>

<ul>
<li>Rails 负责提供REST API</li>
<li>Ionic 通过ng-resource调用REST API</li>
</ul>


<h2>测试与发布</h2>

<ul>
<li>Android 打包</li>
<li>Ios 打包</li>
<li>发布测试版本 <a href="http://fir.im/">fir.im</a></li>
<li>生成截图 <a href="https://launchkit.io/screenshots/onboard/add-screenshot?layout=below">screenshots</a></li>
<li>提交到 app store</li>
</ul>


<h2>什么时候用Ionic</h2>

<ul>
<li><p>用Ionic开发的优点和缺点</p>

<ul>
<li>优点: 一次开发，多个平台，开发效率高</li>
<li>缺点：
1.对开发人员的要求很高，如果需要编译成native app需要开发人员了解 web、ios、andriod 三种开发技术
2.性能问题
3.不支持较低Android版本（4.1）</li>
</ul>
</li>
<li><p>哪些应用适合用Ionic来开发:</p>

<ul>
<li>不属于游戏之类的APP类型；</li>
<li>想低成本、快速迭代地开发 Android、iOS 平台上的应用；</li>
<li>目标终端的设备性能不算低；</li>
<li><a href="http://ionichina.com/showcase">国内例子</a></li>
<li><a href="http://showcase.ionicframework.com">国外例子</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google map with ionic]]></title>
    <link href="http://justin-lu.github.io/blog/2015/07/06/google-map-with-ionic/"/>
    <updated>2015-07-06T16:03:52+08:00</updated>
    <id>http://justin-lu.github.io/blog/2015/07/06/google-map-with-ionic</id>
    <content type="html"><![CDATA[<p>本文介绍如何在ionic添加google map.</p>

<!-- More -->


<p>初始化ionic项目</p>

<pre><code class="sh">  ionic start map blank --sass --id com.beansmile.maps
  cd map
  npm install
  gulp sass
</code></pre>

<p>添加以下代码到ionic.project</p>

<pre><code class="javascript">  "gulpStartupTasks": ["sass", "watch"]
</code></pre>

<p>个人建议在初始化ionic项目的时候，<code>id</code>参数是必须的，生成的id将做为ios app 的<code>bundle id</code>和android app的<code>package name</code>
&ndash;sass 参数默认启动sass功能,也可以在以后添加，详见<a href="http://ionicframework.com/docs/cli/sass.html">Using Sass</a></p>

<p>添加定位插件geolocation</p>

<pre><code class="sh">  ionic plugin add cordova-plugin-geolocation
</code></pre>

<p>查看<a href="https://developers.google.com/maps/documentation/javascript/tutorial">Google Maps Javascript SKD</a>并到<a href="https://code.google.com/apis/console/b/0/?pli=1">Google API Console</a>创建一个Google Maps application.</p>

<p>当你拿到你的<code>google api key</code>后，添加到<code>www/index.html</code></p>

<pre><code class="javascript">&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width"&gt;
    &lt;title&gt;&lt;/title&gt;

    &lt;!-- IF using Sass (run gulp sass first), then uncomment below and remove the CSS includes above --&gt;
    &lt;link href="css/ionic.app.css" rel="stylesheet"&gt;

    &lt;!-- ionic/angularjs js --&gt;
    &lt;script src="lib/ionic/js/ionic.bundle.js"&gt;&lt;/script&gt;

    &lt;script src="https://maps.googleapis.com/maps/api/js?key=[YOU KEY HERE]&amp;sensor=true"&gt;&lt;/script&gt;

    &lt;!-- cordova script (this will be a 404 during development) --&gt;
    &lt;script src="cordova.js"&gt;&lt;/script&gt;

    &lt;!-- your app's js --&gt;
    &lt;script src="js/app.js"&gt;&lt;/script&gt;
    &lt;script src="js/controllers.js"&gt;&lt;/script&gt;
    &lt;script src="js/directives.js"&gt;&lt;/script&gt;
  &lt;/head&gt;

  &lt;body ng-app="starter" ng-controller="MapCtrl"&gt;
    &lt;ion-header-bar class="bar-stable"&gt;
      &lt;h1 class="title"&gt;Map&lt;/h1&gt;
    &lt;/ion-header-bar&gt;

    &lt;ion-content scroll="false"&gt;
      &lt;a class="button button-icon icon ion-location map-icon-location active" ng-click="centerOnMe()"&gt;&lt;/a&gt;
      &lt;a class="button button-icon icon ion-navicon map-icon-menu" ng-click="direction()"&gt;&lt;/a&gt;
      &lt;map on-create="mapCreated(map)"&gt;&lt;/map&gt;
    &lt;/ion-content&gt;

    &lt;ion-footer-bar class="bar-stable"&gt;
        &lt;a class="button button-icon icon ion-woman item-button-left"&gt;&lt;/a&gt;
        &lt;a class="button button-icon icon ion-chevron-right item-button-right"&gt;&lt;/a&gt;
      &lt;/a&gt;
    &lt;/ion-footer-bar&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>添加样式</p>

<pre><code class="css">map {
  display: block;
  width: 100%;
  height: 100%;
}
.scroll {
  height: 100%;
}

.map-icon-location{
  background-color: #fff;
  width: 47px;
  border-radius: 47px;
  margin-top: 50px;
  margin-left: 10px;
  position: fixed;
  z-index: 10000;
  box-shadow: 1px 1px 3px 2px #C2BDBD;
}
.map-icon-location.active, .map-icon-menu.active {
  background-color: #49AEF8 !important;
  opacity: 1 !important;
  color: #fff;
}

.map-icon-menu {
  background-color: #fff;
  width: 47px;
  border-radius: 47px;
  margin-top: 100px;
  margin-left: 10px;
  position: fixed;
  z-index: 10000;
  box-shadow: 1px 1px 3px 2px #C2BDBD;
}
</code></pre>

<p>添加map的directives</p>

<pre><code class="javascript">angular.module('starter.directives', [])

.directive('map', function() {
  return {
    restrict: 'E',
    scope: {
      onCreate: '&amp;'
    },
    link: function ($scope, $element, $attr) {
      function initialize() {
        var mapOptions = {
          center: new google.maps.LatLng(43.07493, -89.381388),
          zoom: 16,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var map = new google.maps.Map($element[0], mapOptions);
        $scope.onCreate({map: map});

        // Stop the side bar from dragging when mousedown/tapdown on the map
        google.maps.event.addDomListener($element[0], 'mousedown', function (e) {
          e.preventDefault();
          return false;
        });
      }

      if (document.readyState === "complete") {
        initialize();
      } else {
        google.maps.event.addDomListener(window, 'load', initialize);
      }
    }
  }
});
</code></pre>

<p>添加对于的controller.js</p>

<pre><code class="javascript">angular.module('starter.controllers', [])

.controller('MapCtrl', function($scope, $ionicLoading) {
  $scope.mapCreated = function(map) {
    $scope.map = map;
  };

  $scope.direction = function(){
    if (!$scope.map) {
      return;
    }

    $scope.loading = $ionicLoading.show({
      template: 'Getting current location...',
      showBackdrop: false
    });

    navigator.geolocation.getCurrentPosition(function (pos) {
      console.log('Got pos', pos);
      center = new google.maps.LatLng(37.772323, -122.214897);
      target = new google.maps.LatLng(37.771923, -122.219339);

      $scope.map.setCenter(center);

      var directionsDisplay = new google.maps.DirectionsRenderer();
      var directionsService = new google.maps.DirectionsService();

      directionsDisplay.setMap($scope.map);


      var request = {
          origin:center,
          destination:target,
          travelMode: google.maps.TravelMode.DRIVING
      };
      directionsService.route(request, function(response, status) {
        if (status == google.maps.DirectionsStatus.OK) {
          directionsDisplay.setDirections(response);
        }
      });

      $ionicLoading.hide();
    }, function (error) {
      alert('Unable to get location: ' + error.message);
    });
  }

  $scope.centerOnMe = function () {
    console.log("Centering");
    if (!$scope.map) {
      return;
    }

    $scope.loading = $ionicLoading.show({
      template: 'Getting current location...',
      showBackdrop: false
    });

    navigator.geolocation.getCurrentPosition(function (pos) {
      console.log('Got pos', pos);
      center = new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude);
      $scope.map.setCenter(center);
      var marker = new google.maps.Marker({
        position: center,
        map: $scope.map,
        title: 'Hello World!'
      });
      $ionicLoading.hide();
    }, function (error) {
      alert('Unable to get location: ' + error.message);
    });
  };
});
</code></pre>

<p>打开app.js，注入controllers directives</p>

<pre><code class="javascript">  angular.module('starter', ['ionic','starter.controllers', 'starter.directives'])
</code></pre>

<p>以上根据google api, 添加了定位功能;两个地点的路线规划功能,为了演示方便，A地点和B地点的经纬度是固定的，可以随意更改。</p>

<p>最后，执行以下命令，即可在你的手机使用这个app了。</p>

<pre><code class="sh">  ionic build ios
  ionic run ios --devise
</code></pre>

<p>更多google map api，请看 <a href="https://developers.google.com/maps/documentation/javascript/examples/">example</a></p>

<p>附上效果图一张</p>

<p><img src="/images/blog/google-map.jpg" alt="google map" /></p>
]]></content>
  </entry>
  
</feed>
