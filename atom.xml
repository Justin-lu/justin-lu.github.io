<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hi I'm Justin-lu]]></title>
  <link href="http://justin-lu.github.io/atom.xml" rel="self"/>
  <link href="http://justin-lu.github.io/"/>
  <updated>2016-03-27T21:56:42+08:00</updated>
  <id>http://justin-lu.github.io/</id>
  <author>
    <name><![CDATA[Justin-lu]]></name>
    <email><![CDATA[gdjyluxiaoyong@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CentOS 上使用 Nginx Passenger 部署 Ruby on Rails]]></title>
    <link href="http://justin-lu.github.io/blog/2016/03/15/centos-shang-shi-yong-nginx-passenger-bu-shu-ruby-on-rails/"/>
    <updated>2016-03-15T20:04:57+08:00</updated>
    <id>http://justin-lu.github.io/blog/2016/03/15/centos-shang-shi-yong-nginx-passenger-bu-shu-ruby-on-rails</id>
    <content type="html"><![CDATA[<p>本教程将会涉及以下工具：</p>

<ul>
<li>Centos 7</li>
<li>[[RVM]]</li>
<li>Ruby 2.2.2</li>
<li>Rails 4.0.3</li>
<li>Passenger 4.0+</li>
<li>Nginx（由 Passenger 编译）</li>
</ul>


<!-- More -->


<h2>创建帐号</h2>

<p>假设你已经用 root 帐号通过 SSH 登陆服务器, 没有登录的可以通过</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ssh root@ip
</span></code></pre></td></tr></table></div></figure>


<p>出于安全考虑，不要使用 root 帐号运行 web 应用。这里新建一个专门用于部署的用户，例如 deploy 或者其它你喜欢的名字。运行以下命令创建用户：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># useradd -m -s /bin/bash deploy</span>
</span></code></pre></td></tr></table></div></figure>


<p>将用户加入 sudo 群组，以便使用 sudo 命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># adduser deploy sudo</span>
</span></code></pre></td></tr></table></div></figure>


<p>为 deploy 用户设置密码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># passwd deploy</span>
</span></code></pre></td></tr></table></div></figure>


<p>为deploy用户添加管理员权限</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo <span class="nb">echo</span> <span class="s2">&quot;$USER ALL=(ALL:ALL) ALL&quot;</span> &gt;&gt; /etc/sudoers
</span></code></pre></td></tr></table></div></figure>


<p>退出当前 SSH 链接，用 deploy 帐号重新登陆。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ssh deploy@ip
</span></code></pre></td></tr></table></div></figure>


<h2>安装 RVM 和 Ruby</h2>

<p>更新 yum，并安装 curl：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo yum update
</span><span class='line'><span class="nv">$ </span>sudo yum install curl
</span></code></pre></td></tr></table></div></figure>


<p>然后安装 RVM：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
</span><span class='line'><span class="nv">$ </span><span class="se">\c</span>url -sSL https://get.rvm.io <span class="p">|</span> bash -s stable
</span><span class='line'><span class="nv">$ </span>rvm requirements
</span></code></pre></td></tr></table></div></figure>


<p>RVM 安装完毕后，重新登陆 SSH，让 RVM 配置生效。然后安装 Ruby 2.1.2：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rvm use --install --default 2.2.2
</span><span class='line'><span class="nv">$ </span>rvm use 2.2.2@deploy --create --default
</span><span class='line'><span class="nv">$ </span>gem install bundle
</span></code></pre></td></tr></table></div></figure>


<p>安装完毕后，确认目前的 Ruby 版本：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ruby -v
</span></code></pre></td></tr></table></div></figure>


<p>应该看到 <code>ruby 2.2.2p95 (2015-04-13 revision 50295) [x86_64-linux]</code> 字样。</p>

<h2>安装 Passenger</h2>

<p><a href="https://www.phusionpassenger.com/">Passenger</a> 是一个 app server，支持基于 Rack 框架的 Ruby app（包括 Rails）。Passenger 的特点是需要作为模块编译到 Nginx 中，优点是配置简单，不需要自己写启动脚本。</p>

<p>安装 Passenger 最简单的方法是通过 yum 安装，首先导入 Passenger 的密钥（<a href="https://www.phusionpassenger.com/library/install/nginx/install/oss/el7/">官方文档</a>）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 安装 EPEL and 和其他依赖</span>
</span><span class='line'><span class="nv">$ </span>sudo yum install -y epel-release pygpgme curl
</span><span class='line'>
</span><span class='line'><span class="c"># 添加el7仓库</span>
</span><span class='line'><span class="nv">$ </span>sudo curl --fail -sSLo /etc/yum.repos.d/passenger.repo https://oss-binaries.phusionpassenger.com/yum/definitions/el-passenger.repo
</span><span class='line'>
</span><span class='line'><span class="c"># 安装Passenger 和 Nginx， 由于万恶的墙，有可能失败，多试几次就可以</span>
</span><span class='line'><span class="nv">$ </span>sudo yum install -y nginx passenger
</span></code></pre></td></tr></table></div></figure>


<p>现在修改 nginx 配置，编辑 <code>/etc/nginx/conf.d/passenger.conf</code>，找到这三行注释：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#passenger_root /usr/share/ruby/vendor_ruby/phusion_passenger/locations.ini;</span>
</span><span class='line'><span class="c">#passenger_ruby /usr/bin/ruby;</span>
</span><span class='line'><span class="c">#passenger_instance_registry_dir /var/run/passenger-instreg;</span>
</span></code></pre></td></tr></table></div></figure>


<p>将它修改为：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>passenger_root /usr/share/ruby/vendor_ruby/phusion_passenger/locations.ini<span class="p">;</span>
</span><span class='line'>passenger_ruby /usr/bin/ruby<span class="p">;</span>
</span><span class='line'>passenger_instance_registry_dir /var/run/passenger-instreg<span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>重启Nginx:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo service nginx restart
</span></code></pre></td></tr></table></div></figure>


<p>检查是否安装成功</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo passenger-config validate-install
</span></code></pre></td></tr></table></div></figure>


<p>查看nginx和passgenr是否运行成功</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo passenger-memory-stats
</span></code></pre></td></tr></table></div></figure>


<p>可以看到这个，说明已经成功运行</p>

<p><img src="http://ww1.sinaimg.cn/large/785cd1e3gw1f1xto1spynj20w40hcwhy.jpg" alt="" /></p>

<h2>安装Nodejs</h2>

<p><a href="https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-a-centos-7-server">https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-a-centos-7-server</a></p>

<h2>部署<code>Rails</code>项目</h2>

<h3>新建<code>Rails</code>项目</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">rails</span> <span class="kp">new</span> <span class="n">app</span>
</span><span class='line'><span class="err">$</span> <span class="n">cd</span> <span class="n">app</span>
</span><span class='line'><span class="err">$</span> <span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<h3>打开<code>Gemfile</code>文件，在<code>Gemfile</code>的<code>development</code>和<code>test</code>group 添加<code>capistrano</code>和<code>rvm-capistrano</code></h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span class="ss">:test</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># Use Capistrano for deployment</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;capistrano&#39;</span><span class="p">,</span> <span class="s2">&quot;~&gt; 2.15.5&quot;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;rvm-capistrano&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.4.1&#39;</span><span class="p">,</span> <span class="ss">:require</span> <span class="o">=&gt;</span> <span class="kp">false</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>生成<code>cap</code>文件,在终端运行，会自动生成<code>Capfile</code>和<code>config/deploy.rb</code></h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>capify .
</span></code></pre></td></tr></table></div></figure>


<h3>修改<code>deploy</code>文件，配置项就不逐一介绍了，可以阅读 Capistrano 的文档 2.x Getting Started。主要是修改 :rvm_ruby_string 和 :repository 两个，其它再按需修改。</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rvm/capistrano&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span> <span class="ss">:rvm_type</span><span class="p">,</span> <span class="ss">:user</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># repo details</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:scm</span><span class="p">,</span> <span class="ss">:git</span>
</span><span class='line'><span class="c1"># need to clean shared/cached-copy if changed repository</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:repository</span><span class="p">,</span> <span class="s2">&quot;your repository url&quot;</span>
</span><span class='line'><span class="c1"># set :branch, &quot;master&quot;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:git_enable_submodules</span><span class="p">,</span> <span class="mi">1</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># bundler bootstrap</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;bundler/capistrano&#39;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:bundle_without</span><span class="p">,</span> <span class="o">[</span><span class="ss">:darwin</span><span class="p">,</span> <span class="ss">:development</span><span class="p">,</span> <span class="ss">:test</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Multi stage</span>
</span><span class='line'><span class="c1"># https://github.com/capistrano/capistrano/wiki/2.x-Multistage-Extension</span>
</span><span class='line'><span class="c1"># https://github.com/VinceMD/Scem/wiki/Deploying-on-production</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:stages</span><span class="p">,</span> <span class="sx">%w(production)</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:default_stage</span><span class="p">,</span> <span class="s2">&quot;production&quot;</span> <span class="c1"># require config/deploy/staging.rb</span>
</span><span class='line'><span class="c1"># set :default_stage, &quot;production&quot; # require config/deploy/production.rb</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;capistrano/ext/multistage&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># server details</span>
</span><span class='line'><span class="n">default_run_options</span><span class="o">[</span><span class="ss">:pty</span><span class="o">]</span> <span class="o">=</span> <span class="kp">true</span> <span class="c1"># apparently helps with passphrase prompting</span>
</span><span class='line'><span class="n">ssh_options</span><span class="o">[</span><span class="ss">:forward_agent</span><span class="o">]</span> <span class="o">=</span> <span class="kp">true</span> <span class="c1"># tells cap to use my local private key</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:deploy_via</span><span class="p">,</span> <span class="ss">:remote_cache</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:use_sudo</span><span class="p">,</span> <span class="kp">false</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># integrate whenever</span>
</span><span class='line'><span class="c1"># when using bundler</span>
</span><span class='line'><span class="c1"># set :whenever_command, &quot;bundle exec whenever&quot;</span>
</span><span class='line'><span class="c1"># when using different environments</span>
</span><span class='line'><span class="c1"># set :whenever_environment, defer { stage }</span>
</span><span class='line'><span class="c1"># set :whenever_identifier, defer { &quot;#{fetch(:application)}-#{fetch(:rails_env)}&quot; }</span>
</span><span class='line'><span class="c1"># require &quot;whenever/capistrano&quot;</span>
</span><span class='line'><span class="c1"># https://github.com/javan/whenever/blob/master/lib/whenever/capistrano.rb</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># tasks</span>
</span><span class='line'><span class="n">namespace</span> <span class="ss">:deploy</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:start</span><span class="p">,</span> <span class="ss">:roles</span> <span class="o">=&gt;</span> <span class="ss">:app</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">run</span> <span class="s2">&quot;touch </span><span class="si">#{</span><span class="n">current_path</span><span class="si">}</span><span class="s2">/tmp/restart.txt&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:stop</span><span class="p">,</span> <span class="ss">:roles</span> <span class="o">=&gt;</span> <span class="ss">:app</span> <span class="k">do</span>
</span><span class='line'>    <span class="c1"># Do nothing.</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;Restart Application&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:restart</span><span class="p">,</span> <span class="ss">:roles</span> <span class="o">=&gt;</span> <span class="ss">:app</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">run</span> <span class="s2">&quot;touch </span><span class="si">#{</span><span class="n">current_path</span><span class="si">}</span><span class="s2">/tmp/restart.txt&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;Symlink shared resources on each release&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:symlink_shared</span><span class="p">,</span> <span class="ss">:roles</span> <span class="o">=&gt;</span> <span class="ss">:app</span> <span class="k">do</span>
</span><span class='line'>    <span class="sx">%w{database settings.local}</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>      <span class="n">run</span> <span class="s2">&quot;ln -nfs </span><span class="si">#{</span><span class="n">shared_path</span><span class="si">}</span><span class="s2">/config/</span><span class="si">#{</span><span class="n">file</span><span class="si">}</span><span class="s2">.yml </span><span class="si">#{</span><span class="n">release_path</span><span class="si">}</span><span class="s2">/config/</span><span class="si">#{</span><span class="n">file</span><span class="si">}</span><span class="s2">.yml&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># link dirs in public/</span>
</span><span class='line'>    <span class="sx">%w{uploads}</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">dir</span><span class="o">|</span>
</span><span class='line'>      <span class="n">run</span> <span class="s2">&quot;mkdir -p </span><span class="si">#{</span><span class="n">shared_path</span><span class="si">}</span><span class="s2">/public/</span><span class="si">#{</span><span class="n">dir</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="n">run</span> <span class="s2">&quot;ln -nfs </span><span class="si">#{</span><span class="n">shared_path</span><span class="si">}</span><span class="s2">/public/</span><span class="si">#{</span><span class="n">dir</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">release_path</span><span class="si">}</span><span class="s2">/public/</span><span class="si">#{</span><span class="n">dir</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;Initialize configuration using example files provided in the distribution&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:upload_config</span> <span class="k">do</span>
</span><span class='line'>    <span class="sx">%w{config}</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">dir</span><span class="o">|</span>
</span><span class='line'>      <span class="n">run</span> <span class="s2">&quot;mkdir -p </span><span class="si">#{</span><span class="n">shared_path</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">dir</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="no">Dir</span><span class="o">[</span><span class="s2">&quot;config/*.yml.example&quot;</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>      <span class="n">top</span><span class="o">.</span><span class="n">upload</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="n">file</span><span class="p">),</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">shared_path</span><span class="si">}</span><span class="s2">/config/</span><span class="si">#{</span><span class="no">File</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="s1">&#39;.example&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">desc</span> <span class="s1">&#39;Visit the app&#39;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:visit_web</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;open </span><span class="si">#{</span><span class="n">app_url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">after</span> <span class="s1">&#39;deploy:setup&#39;</span><span class="p">,</span> <span class="s1">&#39;deploy:upload_config&#39;</span>
</span><span class='line'><span class="n">after</span> <span class="s1">&#39;deploy:update_code&#39;</span><span class="p">,</span> <span class="s1">&#39;deploy:symlink_shared&#39;</span>
</span><span class='line'><span class="n">after</span> <span class="s1">&#39;deploy:restart&#39;</span><span class="p">,</span> <span class="s1">&#39;deploy:visit_web&#39;</span>
</span><span class='line'><span class="n">after</span> <span class="s1">&#39;deploy:migrations&#39;</span><span class="p">,</span> <span class="s1">&#39;deploy:cleanup&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">set</span> <span class="ss">:keep_releases</span><span class="p">,</span> <span class="mi">7</span> <span class="c1"># number for keeping old releases</span>
</span><span class='line'><span class="n">after</span> <span class="s1">&#39;deploy&#39;</span><span class="p">,</span> <span class="s1">&#39;deploy:cleanup&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">namespace</span> <span class="ss">:db</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;Create db for current env&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:create</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">run</span> <span class="s2">&quot;cd </span><span class="si">#{</span><span class="n">current_path</span><span class="si">}</span><span class="s2">; bundle exec rake db:create RAILS_ENV=</span><span class="si">#{</span><span class="n">rails_env</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;could be able to run `cap deploy:migrate` now&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;Populates the Production Database&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:seed</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n\n</span><span class="s2">=== Populating the Production Database! ===</span><span class="se">\n\n</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">run</span> <span class="s2">&quot;cd </span><span class="si">#{</span><span class="n">current_path</span><span class="si">}</span><span class="s2">; bundle exec rake db:seed RAILS_ENV=</span><span class="si">#{</span><span class="n">rails_env</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># http://guides.rubyonrails.org/asset_pipeline.html#precompiling-assets</span>
</span><span class='line'><span class="c1"># https://github.com/capistrano/capistrano/blob/master/lib/capistrano/recipes/deploy/assets.rb</span>
</span><span class='line'><span class="nb">load</span> <span class="s1">&#39;deploy/assets&#39;</span> <span class="k">unless</span> <span class="p">(</span><span class="no">ARGV</span><span class="o">.</span><span class="n">join</span> <span class="o">==</span> <span class="s2">&quot;deploy:update&quot;</span> <span class="o">||</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">last</span> <span class="o">==</span> <span class="s1">&#39;deploy:update&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># then we got these tasks:</span>
</span><span class='line'><span class="c1"># cap deploy:assets:clean      # Run the asset clean rake task.</span>
</span><span class='line'><span class="c1"># cap deploy:assets:precompile # Run the asset precompilation rake task.</span>
</span><span class='line'><span class="n">namespace</span> <span class="ss">:remote</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;Open the rails console on one of the remote servers&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:console</span><span class="p">,</span> <span class="ss">:roles</span> <span class="o">=&gt;</span> <span class="ss">:app</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">hostname</span> <span class="o">=</span> <span class="n">find_servers_for_task</span><span class="p">(</span><span class="n">current_task</span><span class="p">)</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>    <span class="n">command</span> <span class="o">=</span> <span class="s2">&quot;cd </span><span class="si">#{</span><span class="n">current_path</span><span class="si">}</span><span class="s2"> &amp;&amp; bundle exec rails console </span><span class="si">#{</span><span class="n">fetch</span><span class="p">(</span><span class="ss">:rails_env</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">fetch</span><span class="p">(</span><span class="ss">:rvm_ruby_string</span><span class="p">)</span>
</span><span class='line'>      <span class="c1"># set rvm shell and get ride of &quot;&#39;&quot;</span>
</span><span class='line'>      <span class="c1"># https://github.com/wayneeseguin/rvm/blob/master/lib/rvm/capistrano.rb</span>
</span><span class='line'>      <span class="n">rvm_shell</span> <span class="o">=</span> <span class="sx">%{rvm_path=$HOME/.rvm $HOME/.rvm/bin/rvm-shell &quot;</span><span class="si">#{</span><span class="n">fetch</span><span class="p">(</span><span class="ss">:rvm_ruby_string</span><span class="p">)</span><span class="si">}</span><span class="sx">&quot;}</span>
</span><span class='line'>      <span class="n">command</span> <span class="o">=</span> <span class="sx">%{</span><span class="si">#{</span><span class="n">rvm_shell</span><span class="si">}</span><span class="sx"> -c &quot;</span><span class="si">#{</span><span class="n">command</span><span class="si">}</span><span class="sx">&quot;}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">command</span> <span class="o">=</span> <span class="sx">%{source ~/.profile &amp;&amp; &quot;</span><span class="si">#{</span><span class="n">command</span><span class="si">}</span><span class="sx">&quot;}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="nb">exec</span> <span class="sx">%{ssh -l </span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="sx"> </span><span class="si">#{</span><span class="n">hostname</span><span class="si">}</span><span class="sx"> -t &#39;</span><span class="si">#{</span><span class="n">command</span><span class="si">}</span><span class="sx">&#39;}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;run rake task. e.g.: `cap remote:rake db:version`&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:rake</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">ARGV</span><span class="o">.</span><span class="n">values_at</span><span class="p">(</span><span class="no">Range</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">ARGV</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="s1">&#39;remote:rake&#39;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">rake_task</span><span class="o">|</span>
</span><span class='line'>      <span class="n">top</span><span class="o">.</span><span class="n">run</span> <span class="s2">&quot;cd </span><span class="si">#{</span><span class="n">current_path</span><span class="si">}</span><span class="s2"> &amp;&amp; RAILS_ENV=</span><span class="si">#{</span><span class="n">rails_env</span><span class="si">}</span><span class="s2"> bundle exec rake </span><span class="si">#{</span><span class="n">rake_task</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="nb">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;run remote command. e.g.: `cap remote:run &#39;tail -n 10 log/production.log&#39;`&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:run</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">command</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">values_at</span><span class="p">(</span><span class="no">Range</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">ARGV</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="s1">&#39;remote:run&#39;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>    <span class="n">top</span><span class="o">.</span><span class="n">run</span> <span class="s2">&quot;cd </span><span class="si">#{</span><span class="n">current_path</span><span class="si">}</span><span class="s2">; RAILS_ENV=</span><span class="si">#{</span><span class="n">rails_env</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">command</span><span class="o">*</span><span class="s1">&#39; &#39;</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">desc</span> <span class="s1">&#39;run specified rails code on server. e.g.: `cap remote:runner p User.all` or `cap remote:runner &quot;User.all.each{ |u| p u }&quot;`&#39;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:runner</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">command</span><span class="o">=</span><span class="no">ARGV</span><span class="o">.</span><span class="n">values_at</span><span class="p">(</span><span class="no">Range</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">ARGV</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="s1">&#39;remote:runner&#39;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>    <span class="n">top</span><span class="o">.</span><span class="n">run</span> <span class="s2">&quot;cd </span><span class="si">#{</span><span class="n">current_path</span><span class="si">}</span><span class="s2">; RAILS_ENV=</span><span class="si">#{</span><span class="n">rails_env</span><span class="si">}</span><span class="s2"> bundle exec rails runner &#39;</span><span class="si">#{</span><span class="n">command</span><span class="o">*</span><span class="s1">&#39; &#39;</span><span class="si">}</span><span class="s2">&#39;&quot;</span>
</span><span class='line'>    <span class="nb">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;tail log on remote server&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:tail_log</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">top</span><span class="o">.</span><span class="n">run</span> <span class="s2">&quot;tail -f </span><span class="si">#{</span><span class="n">current_path</span><span class="si">}</span><span class="s2">/log/</span><span class="si">#{</span><span class="n">rails_env</span><span class="si">}</span><span class="s2">.log&quot;</span> <span class="k">do</span> <span class="o">|</span><span class="n">channel</span><span class="p">,</span> <span class="n">stream</span><span class="p">,</span> <span class="n">data</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">data</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="k">break</span> <span class="k">if</span> <span class="n">stream</span> <span class="o">==</span> <span class="ss">:err</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="nb">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">namespace</span> <span class="ss">:update</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;Dump remote database into tmp/, download file to local machine, import into local database&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:database</span> <span class="k">do</span>
</span><span class='line'>    <span class="c1"># config</span>
</span><span class='line'>    <span class="n">remote_db_yml_path</span>          <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">shared_path</span><span class="si">}</span><span class="s2">/config/database.yml&quot;</span>
</span><span class='line'>    <span class="n">remote_db_yml_on_local_path</span> <span class="o">=</span> <span class="s2">&quot;tmp/database_</span><span class="si">#{</span><span class="n">rails_env</span><span class="si">}</span><span class="s2">.yml&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># First lets get the remote database config file so that we can read in the database settings</span>
</span><span class='line'>    <span class="n">get</span> <span class="n">remote_db_yml_path</span><span class="p">,</span> <span class="n">remote_db_yml_on_local_path</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># load the remote settings within the database file</span>
</span><span class='line'>    <span class="n">remote_settings</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">::</span><span class="n">load_file</span><span class="p">(</span><span class="n">remote_db_yml_on_local_path</span><span class="p">)</span><span class="o">[</span><span class="n">rails_env</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">remote_sql_file_path</span>        <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">current_path</span><span class="si">}</span><span class="s2">/tmp/</span><span class="si">#{</span><span class="n">rails_env</span><span class="si">}</span><span class="s2">-</span><span class="si">#{</span><span class="n">remote_settings</span><span class="o">[</span><span class="s2">&quot;database&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">-dump.sql&quot;</span>
</span><span class='line'>    <span class="n">remote_sql_gz_file_path</span>     <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">remote_sql_file_path</span><span class="si">}</span><span class="s2">.gz&quot;</span>
</span><span class='line'>    <span class="n">local_sql_file_path</span>         <span class="o">=</span> <span class="s2">&quot;tmp/</span><span class="si">#{</span><span class="n">rails_env</span><span class="si">}</span><span class="s2">-</span><span class="si">#{</span><span class="n">remote_settings</span><span class="o">[</span><span class="s2">&quot;database&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">-</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y-%m-%d_%H:%M:%S&quot;</span><span class="p">)</span><span class="si">}</span><span class="s2">.sql&quot;</span>
</span><span class='line'>    <span class="n">local_sql_gz_file_path</span>      <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">local_sql_file_path</span><span class="si">}</span><span class="s2">.gz&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># we also need the local settings so that we can import the fresh database properly</span>
</span><span class='line'>    <span class="n">local_settings</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">::</span><span class="n">load_file</span><span class="p">(</span><span class="s2">&quot;config/database.yml&quot;</span><span class="p">)</span><span class="o">[</span><span class="n">rails_env</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># dump the remote database and store it in the current path&#39;s tmp directory.</span>
</span><span class='line'>    <span class="n">run</span> <span class="s2">&quot;mysqldump -u&#39;</span><span class="si">#{</span><span class="n">remote_settings</span><span class="o">[</span><span class="s2">&quot;username&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">&#39; -p&#39;</span><span class="si">#{</span><span class="n">remote_settings</span><span class="o">[</span><span class="s2">&quot;password&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">&#39; </span><span class="si">#{</span><span class="s2">&quot;-h &#39;</span><span class="si">#{</span><span class="n">remote_settings</span><span class="o">[</span><span class="s2">&quot;host&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">&#39;&quot;</span> <span class="k">if</span> <span class="n">remote_settings</span><span class="o">[</span><span class="s2">&quot;host&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2"> &#39;</span><span class="si">#{</span><span class="n">remote_settings</span><span class="o">[</span><span class="s2">&quot;database&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">&#39; &gt; </span><span class="si">#{</span><span class="n">remote_sql_file_path</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># gzip db</span>
</span><span class='line'>    <span class="n">run</span> <span class="s2">&quot;gzip -f </span><span class="si">#{</span><span class="n">remote_sql_file_path</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># download gz file to local</span>
</span><span class='line'>    <span class="n">get</span> <span class="n">remote_sql_gz_file_path</span><span class="p">,</span> <span class="n">local_sql_gz_file_path</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># unzip sql</span>
</span><span class='line'>    <span class="n">run_locally</span> <span class="s2">&quot;gunzip </span><span class="si">#{</span><span class="n">local_sql_gz_file_path</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># import db to local db</span>
</span><span class='line'>    <span class="c1"># may need to run `RAILS_ENV=production rake db:create` on local first</span>
</span><span class='line'>    <span class="n">run_locally</span><span class="p">(</span><span class="s2">&quot;mysql -u</span><span class="si">#{</span><span class="n">local_settings</span><span class="o">[</span><span class="s2">&quot;username&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="s2">&quot;-p</span><span class="si">#{</span><span class="n">local_settings</span><span class="o">[</span><span class="s2">&quot;password&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">if</span> <span class="n">local_settings</span><span class="o">[</span><span class="s2">&quot;password&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">local_settings</span><span class="o">[</span><span class="s2">&quot;database&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2"> &lt; </span><span class="si">#{</span><span class="n">local_sql_file_path</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># now that we have the upated production dump file we should use the local settings to import this db.</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">desc</span> <span class="s2">&quot;Mirrors the remote shared public directory with your local copy, doesn&#39;t download symlinks&quot;</span>
</span><span class='line'>  <span class="n">task</span> <span class="ss">:shared_assets</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">run_locally</span> <span class="s2">&quot;if [ -e public/uploads ]; then mv public/uploads public/uploads_back; fi&quot;</span>
</span><span class='line'>    <span class="c1"># using rsync so that it only copies what it needs</span>
</span><span class='line'>    <span class="n">run_locally</span><span class="p">(</span><span class="s2">&quot;rsync --recursive --times --rsh=ssh --compress --human-readable --progress </span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">@</span><span class="si">#{</span><span class="n">app_server</span><span class="si">}</span><span class="s2">:</span><span class="si">#{</span><span class="n">shared_path</span><span class="si">}</span><span class="s2">/system/ public/system/&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">run_locally</span><span class="p">(</span><span class="s2">&quot;rsync --recursive --times --rsh=ssh --compress --human-readable --progress </span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">@</span><span class="si">#{</span><span class="n">app_server</span><span class="si">}</span><span class="s2">:</span><span class="si">#{</span><span class="n">shared_path</span><span class="si">}</span><span class="s2">/public/uploads/ public/uploads/&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">namespace</span> <span class="ss">:remote</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">desc</span> <span class="s2">&quot;update the remote database with the local database&quot;</span>
</span><span class='line'>    <span class="n">task</span> <span class="ss">:database</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">input</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>      <span class="c1"># STDOUT.puts &quot;Are you SURE to update the databse of remote?(YES)&quot;</span>
</span><span class='line'>      <span class="c1"># confirmation = STDIN.gets.chomp</span>
</span><span class='line'>      <span class="n">confirmation</span> <span class="o">=</span> <span class="no">Capistrano</span><span class="o">::</span><span class="no">CLI</span><span class="o">.</span><span class="n">ui</span><span class="o">.</span><span class="n">ask</span><span class="p">(</span><span class="s2">&quot;Are you SURE to update the databse of remote?(YES)&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">abort</span> <span class="s2">&quot;Interrupt..&quot;</span> <span class="k">unless</span> <span class="n">confirmation</span> <span class="o">==</span> <span class="s2">&quot;YES&quot;</span>
</span><span class='line'>      <span class="c1"># config database.yml on both sides</span>
</span><span class='line'>      <span class="n">remote_db_yml_path</span>          <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">shared_path</span><span class="si">}</span><span class="s2">/config/database.yml&quot;</span>
</span><span class='line'>      <span class="n">remote_db_yml_on_local_path</span> <span class="o">=</span> <span class="s2">&quot;tmp/database_</span><span class="si">#{</span><span class="n">rails_env</span><span class="si">}</span><span class="s2">.yml&quot;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># First get the local database config to remote</span>
</span><span class='line'>      <span class="n">get</span> <span class="n">remote_db_yml_path</span><span class="p">,</span> <span class="n">remote_db_yml_on_local_path</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># load the local settings within the database file</span>
</span><span class='line'>      <span class="n">local_settings</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">::</span><span class="n">load_file</span><span class="p">(</span><span class="s2">&quot;config/database.yml&quot;</span><span class="p">)</span><span class="o">[</span><span class="n">rails_env</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># set the sql path on both sides</span>
</span><span class='line'>      <span class="n">local_sql_file_path</span> <span class="o">=</span> <span class="s2">&quot;tmp/</span><span class="si">#{</span><span class="n">rails_env</span><span class="si">}</span><span class="s2">-</span><span class="si">#{</span><span class="n">local_settings</span><span class="o">[</span><span class="s1">&#39;database&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">-dump.sql&quot;</span>
</span><span class='line'>      <span class="n">local_sql_gz_file_path</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">local_sql_file_path</span><span class="si">}</span><span class="s2">.gz&quot;</span>
</span><span class='line'>      <span class="n">remote_sql_file_path</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">current_path</span><span class="si">}</span><span class="s2">/tmp/</span><span class="si">#{</span><span class="n">rails_env</span><span class="si">}</span><span class="s2">-</span><span class="si">#{</span><span class="n">local_settings</span><span class="o">[</span><span class="s1">&#39;database&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">-</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y-%m-%d_%H:%M:%S&quot;</span><span class="p">)</span><span class="si">}</span><span class="s2">.sql&quot;</span>
</span><span class='line'>      <span class="n">remote_sql_gz_file_path</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">remote_sql_file_path</span><span class="si">}</span><span class="s2">.gz&quot;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># we also need the remote settings so that we can import the fresh dataabse properly</span>
</span><span class='line'>      <span class="n">remote_settings</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">::</span><span class="n">load_file</span><span class="p">(</span><span class="n">remote_db_yml_on_local_path</span><span class="p">)</span><span class="o">[</span><span class="n">rails_env</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># dump the local database and store it in the tmp dir</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">local_settings</span><span class="o">[</span><span class="s1">&#39;adapter&#39;</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;postgresql&#39;</span>
</span><span class='line'>        <span class="n">run_locally</span> <span class="s2">&quot;PGPASSWORD=&#39;</span><span class="si">#{</span><span class="n">local_settings</span><span class="o">[</span><span class="s1">&#39;password&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&#39; pg_dump  -U </span><span class="si">#{</span><span class="n">local_settings</span><span class="o">[</span><span class="s2">&quot;username&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="s2">&quot;-h &#39;</span><span class="si">#{</span><span class="n">local_settings</span><span class="o">[</span><span class="s2">&quot;host&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">&#39;&quot;</span> <span class="k">if</span> <span class="n">local_settings</span><span class="o">[</span><span class="s2">&quot;host&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2"> -c -O &#39;</span><span class="si">#{</span><span class="n">local_settings</span><span class="o">[</span><span class="s2">&quot;database&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">&#39; &gt; </span><span class="si">#{</span><span class="n">local_sql_file_path</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="k">elsif</span> <span class="n">local_settings</span><span class="o">[</span><span class="s1">&#39;adapter&#39;</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;mysql2&#39;</span>
</span><span class='line'>        <span class="n">run_locally</span> <span class="s2">&quot;mysqldump -u&#39;</span><span class="si">#{</span><span class="n">local_settings</span><span class="o">[</span><span class="s2">&quot;username&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">&#39; </span><span class="si">#{</span><span class="s2">&quot;-p</span><span class="si">#{</span><span class="n">local_settings</span><span class="o">[</span><span class="s2">&quot;password&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">if</span> <span class="n">local_settings</span><span class="o">[</span><span class="s2">&quot;password&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="s2">&quot;-h &#39;</span><span class="si">#{</span><span class="n">local_settings</span><span class="o">[</span><span class="s2">&quot;host&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">&#39;&quot;</span> <span class="k">if</span> <span class="n">local_settings</span><span class="o">[</span><span class="s2">&quot;host&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2"> &#39;</span><span class="si">#{</span><span class="n">local_settings</span><span class="o">[</span><span class="s2">&quot;database&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">&#39; &gt; </span><span class="si">#{</span><span class="n">local_sql_file_path</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="k">raise</span> <span class="s2">&quot;not supports </span><span class="si">#{</span><span class="n">local_settings</span><span class="o">[</span><span class="s1">&#39;adapter&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># gzip db</span>
</span><span class='line'>      <span class="n">run_locally</span> <span class="s2">&quot;gzip -f </span><span class="si">#{</span><span class="n">local_sql_file_path</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># send the gz file to remote</span>
</span><span class='line'>      <span class="n">upload</span> <span class="n">local_sql_gz_file_path</span><span class="p">,</span> <span class="n">remote_sql_gz_file_path</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># unzip sql</span>
</span><span class='line'>      <span class="n">run</span> <span class="s2">&quot;gunzip </span><span class="si">#{</span><span class="n">remote_sql_gz_file_path</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># import db to remote db</span>
</span><span class='line'>      <span class="c1"># may need to run `RAILS_ENV=production rake db:create` on remote first</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">local_settings</span><span class="o">[</span><span class="s1">&#39;adapter&#39;</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;postgresql&#39;</span>
</span><span class='line'>        <span class="n">run</span> <span class="s2">&quot;PGPASSWORD=&#39;</span><span class="si">#{</span><span class="n">remote_settings</span><span class="o">[</span><span class="s1">&#39;password&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&#39; psql -U </span><span class="si">#{</span><span class="n">remote_settings</span><span class="o">[</span><span class="s1">&#39;username&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2"> -d </span><span class="si">#{</span><span class="n">remote_settings</span><span class="o">[</span><span class="s2">&quot;database&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2"> -f </span><span class="si">#{</span><span class="n">remote_sql_file_path</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="k">elsif</span> <span class="n">local_settings</span><span class="o">[</span><span class="s1">&#39;adapter&#39;</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;mysql2&#39;</span>
</span><span class='line'>        <span class="n">run</span> <span class="s2">&quot;mysql -u</span><span class="si">#{</span><span class="n">remote_settings</span><span class="o">[</span><span class="s2">&quot;username&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="s2">&quot;-p</span><span class="si">#{</span><span class="n">remote_settings</span><span class="o">[</span><span class="s2">&quot;password&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">if</span> <span class="n">remote_settings</span><span class="o">[</span><span class="s2">&quot;password&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">remote_settings</span><span class="o">[</span><span class="s2">&quot;database&quot;</span><span class="o">]</span><span class="si">}</span><span class="s2"> &lt; </span><span class="si">#{</span><span class="n">remote_sql_file_path</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="k">raise</span> <span class="s2">&quot;not supports </span><span class="si">#{</span><span class="n">local_settings</span><span class="o">[</span><span class="s1">&#39;adapter&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># now that we have the updated production dump file we should use the remote settings to import this db</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">desc</span> <span class="s2">&quot;Mirrors the local shared public directory with the remote copy, doesn&#39;t download symlinks&quot;</span>
</span><span class='line'>    <span class="n">task</span> <span class="ss">:shared_assets</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">run</span> <span class="s2">&quot;cp -R </span><span class="si">#{</span><span class="n">shared_path</span><span class="si">}</span><span class="s2">/system </span><span class="si">#{</span><span class="n">shared_path</span><span class="si">}</span><span class="s2">/system_back&quot;</span>
</span><span class='line'>      <span class="n">run</span> <span class="s2">&quot;cp -R </span><span class="si">#{</span><span class="n">shared_path</span><span class="si">}</span><span class="s2">/public/uploads/ </span><span class="si">#{</span><span class="n">shared_path</span><span class="si">}</span><span class="s2">/public/uploads_back&quot;</span>
</span><span class='line'>      <span class="n">run_locally</span><span class="p">(</span><span class="s2">&quot;rsync --recursive --times --rsh=ssh --compress --human-readable --progress public/system </span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">@</span><span class="si">#{</span><span class="n">app_server</span><span class="si">}</span><span class="s2">:</span><span class="si">#{</span><span class="n">shared_path</span><span class="si">}</span><span class="s2">/&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">run_locally</span><span class="p">(</span><span class="s2">&quot;rsync --recursive --times --rsh=ssh --compress --human-readable --progress public/uploads/ </span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">@</span><span class="si">#{</span><span class="n">app_server</span><span class="si">}</span><span class="s2">:</span><span class="si">#{</span><span class="n">shared_path</span><span class="si">}</span><span class="s2">/public/uploads&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>添加<code>deploy/production.rb</code>,并填写以下内容</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/deploy/production.rb</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:app_server</span><span class="p">,</span> <span class="s2">&quot;服务器地址&quot;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:app_url</span><span class="p">,</span> <span class="s2">&quot;服务器网址&quot;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:application</span><span class="p">,</span> <span class="n">app_server</span>
</span><span class='line'><span class="n">role</span> <span class="ss">:web</span><span class="p">,</span> <span class="n">app_server</span>
</span><span class='line'><span class="n">role</span> <span class="ss">:app</span><span class="p">,</span> <span class="n">app_server</span>
</span><span class='line'><span class="n">role</span> <span class="ss">:db</span><span class="p">,</span>  <span class="n">app_server</span><span class="p">,</span> <span class="ss">:primary</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:deploy_to</span><span class="p">,</span> <span class="s2">&quot;/var/www/xxx&quot;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:user</span><span class="p">,</span> <span class="s2">&quot;deploy&quot;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:rvm_ruby_string</span><span class="p">,</span> <span class="s2">&quot;ruby-2.2.2&quot;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:branch</span><span class="p">,</span> <span class="s2">&quot;master&quot;</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:rails_env</span><span class="p">,</span> <span class="s2">&quot;productiono&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>添加<code>database.yml.example</code></h3>

<p><code>config/database.yml</code>文件是不应该被提交到代码库的，我们需要用 config/database.yml.example 来做样本，在部署的时候它会被上传到服务器的 /path_to_your_site/shared/config/ 目录里，然后 SSH 到服务器上修改 username, password, socket 等值（上传的动作是在测试部署里说明）。尤其注意 MySQL socket 的路径在 Mac OS 和 Ubuntu 系统上是不同的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># SQLite version 3.x</span>
</span><span class='line'><span class="c1">#   gem install sqlite3</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1">#   Ensure the SQLite 3 gem is defined in your Gemfile</span>
</span><span class='line'><span class="c1">#   gem &#39;sqlite3&#39;</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="ss">default</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">default</span>
</span><span class='line'>  <span class="ss">adapter</span><span class="p">:</span> <span class="n">sqlite3</span>
</span><span class='line'>  <span class="ss">pool</span><span class="p">:</span> <span class="mi">5</span>
</span><span class='line'>  <span class="ss">timeout</span><span class="p">:</span> <span class="mi">5000</span>
</span><span class='line'>
</span><span class='line'><span class="ss">development</span><span class="p">:</span>
</span><span class='line'>  <span class="o">&lt;&lt;</span><span class="p">:</span> <span class="o">*</span><span class="n">default</span>
</span><span class='line'>  <span class="ss">database</span><span class="p">:</span> <span class="n">db</span><span class="o">/</span><span class="n">development</span><span class="o">.</span><span class="n">sqlite3</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Warning: The database defined as &quot;test&quot; will be erased and</span>
</span><span class='line'><span class="c1"># re-generated from your development database when you run &quot;rake&quot;.</span>
</span><span class='line'><span class="c1"># Do not set this db to the same as development or production.</span>
</span><span class='line'><span class="nb">test</span><span class="p">:</span>
</span><span class='line'>  <span class="o">&lt;&lt;</span><span class="p">:</span> <span class="o">*</span><span class="n">default</span>
</span><span class='line'>  <span class="ss">database</span><span class="p">:</span> <span class="n">db</span><span class="o">/</span><span class="nb">test</span><span class="o">.</span><span class="n">sqlite3</span>
</span><span class='line'>
</span><span class='line'><span class="ss">production</span><span class="p">:</span>
</span><span class='line'>  <span class="o">&lt;&lt;</span><span class="p">:</span> <span class="o">*</span><span class="n">default</span>
</span><span class='line'>  <span class="ss">database</span><span class="p">:</span> <span class="n">db</span><span class="o">/</span><span class="n">production</span><span class="o">.</span><span class="n">sqlite3</span>
</span></code></pre></td></tr></table></div></figure>


<h3>为<code>production</code>添加<code>secret_key_base</code></h3>

<p>编辑 config/secrets.yml 文件，添加：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">production</span><span class="p">:</span>
</span><span class='line'>  <span class="ss">secret_key_base</span><span class="p">:</span> <span class="n">a1feaf0cb8501bb41952bbd1df3641ca0c4eed5beb19fcb69bbaaf30b5e11d58872092a84951679f7df622dda2d6bd1b21f98bd2a24b99e096095f003e4ccf90</span>
</span></code></pre></td></tr></table></div></figure>


<p>128位的随机字符串可用 rake secret 命令生成。</p>

<h3>在你的github或者gitlab添加ssh key</h3>

<p>你可以按如下命令来生成sshkey</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ssh-keygen -t rsa -C <span class="s2">&quot;xxxxx@xxxxx.com&quot;</span>
</span><span class='line'>cat ~/.ssh/id_rsa.pub
</span></code></pre></td></tr></table></div></figure>


<h3>初始化<code>cap</code></h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>cap deploy:setup
</span><span class='line'>cap deploy:check
</span><span class='line'>cap deploy:update
</span><span class='line'>cap db:create
</span><span class='line'>cap deploy:migrate
</span></code></pre></td></tr></table></div></figure>


<h3>以后就可以通过跑以下命令，部署你的应用了</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>cap deploy:migrations 或者 cap deploy
</span></code></pre></td></tr></table></div></figure>


<h3>修改 Nginx 配置</h3>

<p>删除原有的默认网站配置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rm /etc/nginx/sites-enabled/default
</span></code></pre></td></tr></table></div></figure>


<p>新建网站配置：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>touch /etc/nginx/sites-enabled/example.com.conf
</span></code></pre></td></tr></table></div></figure>


<p>编辑<code>/etc/nginx/sites-enabled/example.com.conf</code>，写入以下内容：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>server <span class="o">{</span>
</span><span class='line'>    listen <span class="m">80</span> default<span class="p">;</span>
</span><span class='line'>    server_name example.com<span class="p">;</span> <span class="c"># 这里填写你真实域名</span>
</span><span class='line'>    root /var/www/example.com/current/public<span class="p">;</span>
</span><span class='line'>    passenger_enabled on<span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>重启Nginx</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo service nginx restart
</span></code></pre></td></tr></table></div></figure>


<h2>完成</h2>

<p>在浏览器打开服务器的 IP 地址或域名，可以看到Nginx已经启动</p>

<p>ref: <a href="http://stackoverflow.com/questions/17413526/nginx-missing-sites-available-directory">http://stackoverflow.com/questions/17413526/nginx-missing-sites-available-directory</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[详解JS类概念的实现]]></title>
    <link href="http://justin-lu.github.io/blog/2016/02/27/xiang-jie-jslei-gai-nian-de-shi-xian/"/>
    <updated>2016-02-27T21:50:35+08:00</updated>
    <id>http://justin-lu.github.io/blog/2016/02/27/xiang-jie-jslei-gai-nian-de-shi-xian</id>
    <content type="html"><![CDATA[<p>众所周知，JS并没有类(class)的概念,虽然说ES6开始有了类的概念，但是，这并不是说JS有了像Ruby、Java这些基于类的面向对象语言一样，有了全新的继承模型。ES6中的类，仅仅只是基于现有的原型继承的一种语法糖，下面我们好好分析一下，具体是如何实现的</p>

<!-- More -->


<h2><a href="https://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1">面向对象思想</a></h2>

<p>在讲正题之前，我们先来讨论一下各种面试题都可能出现的一个问题，什么是<code>面向对象编程（OOP）</code>?</p>

<ul>
<li>类：定义某一事物的抽象特点，包含属性和方法，举个栗子，<code>狗</code>这个类包含狗的一些基础特征，如毛皮颜色，吠叫等能力。</li>
<li>对象：类的一个实例，还是举个栗子，小明家的白色的狗和小红家红色的狗。</li>
<li>属性：对象的特征，比如刚提到的狗皮毛的颜色。</li>
<li>方法：对象的行为，比如刚才提到的狗的吠叫能力。</li>
<li>封装性：通过限制只有特定类的对象可以访问特定类的成员，一般包含<code>public</code> <code>protected</code> <code>private</code> 三种，不同语言的实现不同。</li>
<li>继承性：一个类会有<code>子类</code>,这个<code>子类</code>是更具体化的一个抽象，它包含<code>父类</code>的一些属性和方法，并且有可能有不同于<code>父类</code>的属性和方法。</li>
<li>多态性：多意为‘许多’，态意为‘形态’。不同类可以定义相同的方法或属性。</li>
<li>抽象性：复杂现实问题转化为类定义的途径，包括以上所有内容。</li>
</ul>


<h2>如何实现对象（类）的定义</h2>

<p>由于JS并没有<code>类(class)</code>的概念，更多的时候我们把它叫做<code>对象（function）</code>，然后把<code>对象</code>叫做<code>实例(instance)</code>，跟团队里面的人讨论OOP的时候，经常会有概念上的一些误解，特此说明一下。</p>

<h3>构造函数：一个指明了对象类型的函数，通常我们可以通过构造函数类创建</h3>

<p>在js里面，我们通常都是通过构造函数来创建<code>对象(class)</code>,然后通过<code>new</code>这个关键字来实例化一个对象，如:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">Dog</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">d1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Dog</span><span class="p">(</span><span class="s2">&quot;dodo&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nx">d1</span><span class="p">.</span><span class="nx">constructor</span>
</span><span class='line'><span class="c1">// Dog(name){</span>
</span><span class='line'><span class="c1">//  this.name = name;</span>
</span><span class='line'><span class="c1">// }</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">d2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Dog</span><span class="p">(</span><span class="s1">&#39;do2do&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>为什么通过<code>构造函数</code>可以实现<code>对象（class）</code>属性的定义呢？首先，我们必须理解这个语法<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/new"><code>new constructor[([arguments])]</code></a></p>

<p>我们来具体看看当<code>new Dog('name')</code>时，具体做了哪些事情
1. 一个新实例被创建。它继承自<code>Dog.prototype</code>
2. 构造函数被执行，相应的参数会被传入，同时上下文(<code>this</code>)会指向这个新的实例
3. 除非明确返回值，否则返回新的实例</p>

<p>至此，我们实现了OOP里面的类(Dog)、对象(d1,d2)、和属性(name)的概念，<code>d1</code>和<code>d2</code>有相同的<code>name</code>属性，但是值并不相同,即属性是私有的。</p>

<blockquote><p>注: 新创建的实例，都包含一个<code>constructor</code>属性，改属性指向他们的构造函数<code>Dog</code></p></blockquote>

<h3>原型对象(prototype)</h3>

<p>接下来，我们即将讨论如何定义方法，其实，我们完全可以这样定义我们的方法，如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">Dog</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">bark</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="s2">&quot; bark&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">d1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Dog</span><span class="p">(</span><span class="s2">&quot;dodo&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nx">d1</span><span class="p">.</span><span class="nx">bark</span><span class="p">();</span>
</span><span class='line'><span class="c1">// dodo bark</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是，一般我们不推荐这么做，正如我们所知<code>Dog</code>是一个构造函数，每次实例化时，都会执行这个函数，也就是说，<code>bark</code> 这个方法每次都会被定义, 比较浪费内存。但是我们通常可以用<code>constructor</code>和闭包的方式来实现私有属性，如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">Dog</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// barkCount 是私有属性，因为实例并不知道这个属性</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">barkCount</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">bark</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">barkCount</span> <span class="o">++</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="s2">&quot; bark&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">getBarkCount</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="s2">&quot; has barked &quot;</span> <span class="o">+</span> <span class="nx">barkCount</span> <span class="o">+</span> <span class="s2">&quot; times&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">d1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Dog</span><span class="p">(</span><span class="s2">&quot;dodo&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nx">d1</span><span class="p">.</span><span class="nx">bark</span><span class="p">();</span>
</span><span class='line'><span class="nx">d1</span><span class="p">.</span><span class="nx">bark</span><span class="p">();</span>
</span><span class='line'><span class="nx">d1</span><span class="p">.</span><span class="nx">getBarkCount</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>好像扯得有点远，我们回归我们的主角<code>prototype</code>，函数<code>Dog</code>有一个特殊的属性，这个属性就叫原型，如上所述，当用<code>new</code>运算符创建实例时，会把<code>Dog</code>的原型对象的引用复制到新的实例内部的[[Prototype]]属性，即<code>d1.[[Prototype]] = Dog.prototype</code>，因为所有的实例的[[Prototype]]都指向<code>Dog</code>的原型对象，那么，我们就可以很方便的定义我们的方法了，如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">Dog</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Dog</span><span class="p">.</span><span class="nx">prototype</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">bark</span><span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="s2">&quot; bark&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">d1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Dog</span><span class="p">(</span><span class="s2">&quot;dodo&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nx">d1</span><span class="p">.</span><span class="nx">bark</span><span class="p">();</span>
</span><span class='line'><span class="c1">// dodo bark</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们可以通过<code>d1.__proto__ == Dog.prototype</code>，来验证我们的想法。用原型对象还有一个好处，由于实例化的对象的[[Prototype]]指向<code>Dog</code>的原型对象，那么我们可以通过添加<code>Dog</code>的原型对象的方法，来添加已经实例化后的实例<code>d1</code>的方法。如:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">Dog</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">run</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="s2">&quot; is running!&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">d1</span><span class="p">.</span><span class="nx">run</span><span class="p">();</span>
</span><span class='line'><span class="c1">// dodo is running!</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>注：所有对象的<code>__proto__</code>都指向其构造器的<code>prototype</code></p></blockquote>

<h3>原型链</h3>

<p>上面已经描述如何定义一个<code>类</code>，接下来我们将要了解，如何实现<code>类的继承</code>。在此之前，我们先了解js里一个老生常谈的概念：<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain">原型链</a>：每个对象都有一个指向它的原型（prototype）对象的内部链接。这个原型对象又有自己的原型，直到某个对象的原型为 null 为止（也就是不再有原型指向），组成这条链的最后一环。这种一级一级的链结构就称为原型链</p>

<p>mozilla给出一个挺好的例子：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// 假定有一个对象 o, 其自身的属性（own properties）有 a 和 b：</span>
</span><span class='line'><span class="c1">// {a: 1, b: 2}</span>
</span><span class='line'><span class="c1">// o 的原型 o.[[Prototype]]有属性 b 和 c：</span>
</span><span class='line'><span class="c1">// {b: 3, c: 4}</span>
</span><span class='line'><span class="c1">// 最后, o.[[Prototype]].[[Prototype]] 是 null.</span>
</span><span class='line'><span class="c1">// 这就是原型链的末尾，即 null，</span>
</span><span class='line'><span class="c1">// 根据定义，null 没有[[Prototype]].</span>
</span><span class='line'><span class="c1">// 综上，整个原型链如下: </span>
</span><span class='line'><span class="c1">// {a:1, b:2} ---&gt; {b:3, c:4} ---&gt; null</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span> <span class="c1">// 1</span>
</span><span class='line'><span class="c1">// a是o的自身属性吗？是的，该属性的值为1</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">b</span><span class="p">);</span> <span class="c1">// 2</span>
</span><span class='line'><span class="c1">// b是o的自身属性吗？是的，该属性的值为2</span>
</span><span class='line'><span class="c1">// o.[[Prototype]]上还有一个&#39;b&#39;属性,但是它不会被访问到.这种情况称为&quot;属性遮蔽 (property shadowing)&quot;.</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">c</span><span class="p">);</span> <span class="c1">// 4</span>
</span><span class='line'><span class="c1">// c是o的自身属性吗？不是，那看看o.[[Prototype]]上有没有.</span>
</span><span class='line'><span class="c1">// c是o.[[Prototype]]的自身属性吗？是的,该属性的值为4</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">d</span><span class="p">);</span> <span class="c1">// undefined</span>
</span><span class='line'><span class="c1">// d是o的自身属性吗？不是,那看看o.[[Prototype]]上有没有.</span>
</span><span class='line'><span class="c1">// d是o.[[Prototype]]的自身属性吗？不是，那看看o.[[Prototype]].[[Prototype]]上有没有.</span>
</span><span class='line'><span class="c1">// o.[[Prototype]].[[Prototype]]为null，停止搜索，</span>
</span><span class='line'><span class="c1">// 没有d属性，返回undefined</span>
</span></code></pre></td></tr></table></div></figure>


<p>现在我们可以通过我们理解的构造函数和原型对象来实现继承的概念了，代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">Dog</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 这种写法会修改dog实例的constructor，可以通过Dog.prototype.constructor = Dog来重置</span>
</span><span class='line'><span class="nx">Dog</span><span class="p">.</span><span class="nx">prototype</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">bark</span><span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="s2">&quot; bark&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 重置Dog实例的构造函数为本身</span>
</span><span class='line'><span class="nx">Dog</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">constructor</span> <span class="o">=</span> <span class="nx">Dog</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Haski 的构造函数</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">Haski</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span>
</span><span class='line'>  <span class="c1">// 继承Dog的构造函数</span>
</span><span class='line'>  <span class="nx">Dog</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">name</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">// 可以补充更多Haski的属性</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s2">&quot;Haski&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 1. 设置Haski的prototype为Dog的实例对象</span>
</span><span class='line'><span class="c1">// 2. 此时Haski的原型链是 Haski -&gt; Dog的实例 -&gt; Dog -&gt; Object</span>
</span><span class='line'><span class="c1">// 3. 此时，Haski包含了Dog的所有属性和方法，而且还有一个指针，指向Dog的原型对象</span>
</span><span class='line'><span class="c1">// 4. 这种做法是不推荐的，下面会改进</span>
</span><span class='line'><span class="nx">Haski</span><span class="p">.</span><span class="nx">prototype</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Dog</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 重置Haski实例的构造函数为本身</span>
</span><span class='line'><span class="nx">Haski</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">constructor</span> <span class="o">=</span> <span class="nx">Haski</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 可以为子类添加更多的方法</span>
</span><span class='line'><span class="nx">Haski</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">say</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;I&#39;m &quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">ha</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Haski</span><span class="p">(</span><span class="s2">&quot;Ha&quot;</span><span class="p">);</span>
</span><span class='line'><span class="c1">// Ha bark</span>
</span><span class='line'><span class="nx">ha</span><span class="p">.</span><span class="nx">bark</span><span class="p">();</span>
</span><span class='line'><span class="c1">// Ha bark</span>
</span><span class='line'><span class="nx">ha</span><span class="p">.</span><span class="nx">say</span><span class="p">();</span>
</span><span class='line'><span class="c1">// I&#39;m Ha</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>注： 子类在定义prototype时，不可直接使用<code>Haski.prototype = {}</code>定义，这样会重写Haski的原型链，把Haski的原型当做<code>Object</code>的实例，而非<code>Dog</code>的实例</p></blockquote>

<p>但是，当我想找一下<code>ha</code>的原型链时，会发现<code>ha</code>的原型对象指向的是<code>Dog</code>的实例，而且还有一个值为<code>undefined</code>的<code>name</code>属性，在实例化时，name是没必要的, 如下图：</p>

<p><img src="http://ww4.sinaimg.cn/large/785cd1e3jw1f2bmnt5qn4j20d50a4abw.jpg" alt="" /></p>

<p>所以，我们需要修改一下我们的实现，代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// 修改前</span>
</span><span class='line'><span class="nx">Haski</span><span class="p">.</span><span class="nx">prototype</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Dog</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 修改后</span>
</span><span class='line'><span class="nx">Haski</span><span class="p">.</span><span class="nx">prototype</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">Dog</span><span class="p">.</span><span class="nx">prototype</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://ww1.sinaimg.cn/large/785cd1e3jw1f2bp2gl1sij20qs0iogpa.jpg" alt="" /></p>

<blockquote><p>注: <code>__proto__</code> 方法已弃用，从 ECMAScript 6 开始, [[Prototype]] 可以用Object.getPrototypeOf()和Object.setPrototypeOf()访问器来访问</p></blockquote>

<p>自此，我们已经实现继承的概念，父类有自己的方法，子类继承了父类的属性和方法，而且还可以定义自己的属性和方法。</p>

<h2>ES6 如何实现</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="s1">&#39;use strict&#39;</span><span class="p">;</span>
</span><span class='line'><span class="c1">// 声明 Dog 类</span>
</span><span class='line'><span class="kr">class</span> <span class="nx">Dog</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 构造函数</span>
</span><span class='line'>  <span class="nx">constructor</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 普通方法</span>
</span><span class='line'>  <span class="nx">dark</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="s2">&quot;bark&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 静态方法，也叫类方法</span>
</span><span class='line'>  <span class="kr">static</span> <span class="nx">staticMethod</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;I&#39;m static method!&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 通过`extends`关键字来实现继承</span>
</span><span class='line'><span class="kr">class</span> <span class="nx">Haski</span> <span class="kr">extends</span> <span class="nx">Dog</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">constructor</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span>
</span><span class='line'>    <span class="c1">// 调用父类的构造函数</span>
</span><span class='line'>    <span class="kr">super</span><span class="p">(</span><span class="nx">name</span><span class="p">);</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s2">&quot;Haski&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 定义子类方法</span>
</span><span class='line'>  <span class="nx">say</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;I&#39;m&quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在ES6中，我们只需通过<code>class</code> <code>extends</code> <code>super</code> <code>constructor</code> 即可比较方便的完成原来使用JS比较难理解的实现，我们可以通过babel的解析器，来看看babel是怎么把这些语法糖转成JS的实现的。具体代码可以参考</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="s2">&quot;use strict&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">_createClass</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="kd">function</span> <span class="nx">defineProperties</span><span class="p">(</span><span class="nx">target</span><span class="p">,</span> <span class="nx">props</span><span class="p">)</span> <span class="p">{</span> <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">props</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span> <span class="kd">var</span> <span class="nx">descriptor</span> <span class="o">=</span> <span class="nx">props</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span> <span class="nx">descriptor</span><span class="p">.</span><span class="nx">enumerable</span> <span class="o">=</span> <span class="nx">descriptor</span><span class="p">.</span><span class="nx">enumerable</span> <span class="o">||</span> <span class="kc">false</span><span class="p">;</span> <span class="nx">descriptor</span><span class="p">.</span><span class="nx">configurable</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span> <span class="k">if</span> <span class="p">(</span><span class="s2">&quot;value&quot;</span> <span class="k">in</span> <span class="nx">descriptor</span><span class="p">)</span> <span class="nx">descriptor</span><span class="p">.</span><span class="nx">writable</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">target</span><span class="p">,</span> <span class="nx">descriptor</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span> <span class="nx">descriptor</span><span class="p">);</span> <span class="p">}</span> <span class="p">}</span> <span class="k">return</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">Constructor</span><span class="p">,</span> <span class="nx">protoProps</span><span class="p">,</span> <span class="nx">staticProps</span><span class="p">)</span> <span class="p">{</span> <span class="k">if</span> <span class="p">(</span><span class="nx">protoProps</span><span class="p">)</span> <span class="nx">defineProperties</span><span class="p">(</span><span class="nx">Constructor</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span> <span class="nx">protoProps</span><span class="p">);</span> <span class="k">if</span> <span class="p">(</span><span class="nx">staticProps</span><span class="p">)</span> <span class="nx">defineProperties</span><span class="p">(</span><span class="nx">Constructor</span><span class="p">,</span> <span class="nx">staticProps</span><span class="p">);</span> <span class="k">return</span> <span class="nx">Constructor</span><span class="p">;</span> <span class="p">};</span> <span class="p">}();</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">_possibleConstructorReturn</span><span class="p">(</span><span class="nx">self</span><span class="p">,</span> <span class="nx">call</span><span class="p">)</span> <span class="p">{</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">self</span><span class="p">)</span> <span class="p">{</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">ReferenceError</span><span class="p">(</span><span class="s2">&quot;this hasn&#39;t been initialised - super() hasn&#39;t been called&quot;</span><span class="p">);</span> <span class="p">}</span> <span class="k">return</span> <span class="nx">call</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">call</span> <span class="o">===</span> <span class="s2">&quot;object&quot;</span> <span class="o">||</span> <span class="k">typeof</span> <span class="nx">call</span> <span class="o">===</span> <span class="s2">&quot;function&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="nx">call</span> <span class="o">:</span> <span class="nx">self</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">_inherits</span><span class="p">(</span><span class="nx">subClass</span><span class="p">,</span> <span class="nx">superClass</span><span class="p">)</span> <span class="p">{</span> <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">superClass</span> <span class="o">!==</span> <span class="s2">&quot;function&quot;</span> <span class="o">&amp;&amp;</span> <span class="nx">superClass</span> <span class="o">!==</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;Super expression must either be null or a function, not &quot;</span> <span class="o">+</span> <span class="k">typeof</span> <span class="nx">superClass</span><span class="p">);</span> <span class="p">}</span> <span class="nx">subClass</span><span class="p">.</span><span class="nx">prototype</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">superClass</span> <span class="o">&amp;&amp;</span> <span class="nx">superClass</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span> <span class="p">{</span> <span class="nx">constructor</span><span class="o">:</span> <span class="p">{</span> <span class="nx">value</span><span class="o">:</span> <span class="nx">subClass</span><span class="p">,</span> <span class="nx">enumerable</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span> <span class="nx">writable</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">configurable</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">});</span> <span class="k">if</span> <span class="p">(</span><span class="nx">superClass</span><span class="p">)</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">setPrototypeOf</span> <span class="o">?</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">setPrototypeOf</span><span class="p">(</span><span class="nx">subClass</span><span class="p">,</span> <span class="nx">superClass</span><span class="p">)</span> <span class="o">:</span> <span class="nx">subClass</span><span class="p">.</span><span class="nx">__proto__</span> <span class="o">=</span> <span class="nx">superClass</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">_classCallCheck</span><span class="p">(</span><span class="nx">instance</span><span class="p">,</span> <span class="nx">Constructor</span><span class="p">)</span> <span class="p">{</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">instance</span> <span class="k">instanceof</span> <span class="nx">Constructor</span><span class="p">))</span> <span class="p">{</span> <span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;Cannot call a class as a function&quot;</span><span class="p">);</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 声明 Dog 类</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">Dog</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 构造函数</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">Dog</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">_classCallCheck</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">Dog</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 普通方法</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nx">_createClass</span><span class="p">(</span><span class="nx">Dog</span><span class="p">,</span> <span class="p">[{</span>
</span><span class='line'>    <span class="nx">key</span><span class="o">:</span> <span class="s2">&quot;dark&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">value</span><span class="o">:</span> <span class="kd">function</span> <span class="nx">dark</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="s2">&quot;bark&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 静态方法，也叫类方法</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">}],</span> <span class="p">[{</span>
</span><span class='line'>    <span class="nx">key</span><span class="o">:</span> <span class="s2">&quot;staticMethod&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">value</span><span class="o">:</span> <span class="kd">function</span> <span class="nx">staticMethod</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;I&#39;m static method!&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}]);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">Dog</span><span class="p">;</span>
</span><span class='line'><span class="p">}();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 通过`extends`关键字来实现继承</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">Haski</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">_Dog</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">_inherits</span><span class="p">(</span><span class="nx">Haski</span><span class="p">,</span> <span class="nx">_Dog</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">Haski</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">_classCallCheck</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">Haski</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">_this</span> <span class="o">=</span> <span class="nx">_possibleConstructorReturn</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">getPrototypeOf</span><span class="p">(</span><span class="nx">Haski</span><span class="p">).</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="nx">name</span><span class="p">));</span>
</span><span class='line'>    <span class="c1">// 调用父类的构造函数</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nx">_this</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s2">&quot;Haski&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">_this</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">_createClass</span><span class="p">(</span><span class="nx">Haski</span><span class="p">,</span> <span class="p">[{</span>
</span><span class='line'>    <span class="nx">key</span><span class="o">:</span> <span class="s2">&quot;say&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">value</span><span class="o">:</span> <span class="kd">function</span> <span class="nx">say</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;I&#39;m&quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}]);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">Haski</span><span class="p">;</span>
</span><span class='line'><span class="p">}(</span><span class="nx">Dog</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><code>教是最好的学</code>，我正在尝试把我自己理解的内容分享出来，希望我能讲清楚，如果描述有误，欢迎指正。</p></blockquote>

<h3>参考文献</h3>

<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript">Introduction to Object-Oriented JavaScript</a>
<a href="ttps://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes">Classes</a>
<a href="http://stackoverflow.com/questions/9772307/declaring-javascript-object-method-in-constructor-function-vs-in-prototype">Declaring javascript object method in constructor function vs. in prototype </a>
<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript">Inheritance and the prototype chain</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WebService 简单使用]]></title>
    <link href="http://justin-lu.github.io/blog/2015/11/06/web-service-jian-dan-shi-yong/"/>
    <updated>2015-11-06T12:15:07+08:00</updated>
    <id>http://justin-lu.github.io/blog/2015/11/06/web-service-jian-dan-shi-yong</id>
    <content type="html"><![CDATA[<h2>什么是Web Services？</h2>

<p> Web Services 是独立的（self-contained）并可自我描述
  - Web Services 可通过使用UDDI来发现
  - Web Services 可被其他应用程序使用
  - XML 是 Web Services 的基础</p>

<!-- More -->


<h2>Web services 平台的元素</h2>

<ul>
<li>SOAP (简易对象访问协议)</li>
<li>UDDI (通用描述、发现及整合)</li>
<li>WSDL (Web services 描述语言)</li>
</ul>


<h3>什么是 SOAP？</h3>

<blockquote><p>基本的 Web services 平台是 XML + HTTP。</p></blockquote>

<ul>
<li>SOAP 指简易对象访问协议</li>
<li>SOAP 是一种通信协议</li>
<li>SOAP 用于应用程序之间的通信</li>
<li>SOAP 是一种用于发送消息的格式</li>
<li>SOAP 被设计用来通过因特网进行通信</li>
<li>SOAP 独立于平台</li>
<li>SOAP 独立于语言</li>
<li>SOAP 基于 XML</li>
<li>SOAP 很简单并可扩展</li>
<li>SOAP 允许您绕过防火墙</li>
<li>SOAP 将作为 W3C 标准来发展</li>
</ul>


<h3>什么是 WSDL?</h3>

<blockquote><p>WSDL 是基于 XML 的用于描述 Web Services 以及如何访问 Web Services 的语言。</p></blockquote>

<ul>
<li>WSDL 指网络服务描述语言</li>
<li>WSDL 使用 XML 编写</li>
<li>WSDL 是一种 XML 文档</li>
<li>WSDL 用于描述网络服务</li>
<li>WSDL 也可用于定位网络服务</li>
<li>WSDL 还不是 W3C 标准</li>
<li><a href="http://www.thomas-bayer.com/axis2/services/BLZService?wsdl">wsdl例子</a></li>
</ul>


<h3>什么是UDDI？</h3>

<ul>
<li>UDDI 是一种目录服务，通过它，企业可注册并搜索 Web services。</li>
<li>UDDI 指通用的描述、发现以及整合（Universal Description, Discovery and Integration）。</li>
<li>UDDI 是一种用于存储有关 web services 的信息的目录。</li>
<li>UDDI 是一种由 WSDL 描述的网络服务接口目录。</li>
<li>UDDI 经由 SOAP 进行通迅。</li>
<li>UDDI 被构建于 Microsoft .NET 平台之中。</li>
</ul>


<h3>调试工具</h3>

<ul>
<li><a href="http://www.soapui.org/downloads/soapui/open-source.html">SOAP UI 工具</a></li>
<li><a href="https://docs.awspaas.com/reference-guide/aws-paas-api-guide/soap/cxf.html">使用CXF客户端</a></li>
<li><a href="https://docs.awspaas.com/reference-guide/aws-paas-api-guide/soap/java_client.html">使用JDK客户端</a></li>
</ul>


<h3>SOAP和HTTP区别</h3>

<ul>
<li>请求消息格式不同</li>
<li>响应消息格式不同</li>
<li>安全机制不同</li>
<li>客户端调用方式不同</li>
<li>并发处理能力的不同</li>
</ul>


<h3>在Rails下如何调用SOAP接口</h3>

<p>官方文档</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># create a client for the service</span>
</span><span class='line'><span class="n">client</span> <span class="o">=</span> <span class="no">Savon</span><span class="o">.</span><span class="n">client</span><span class="p">(</span><span class="ss">wsdl</span><span class="p">:</span> <span class="s1">&#39;http://service.example.com?wsdl&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">client</span><span class="o">.</span><span class="n">operations</span>
</span><span class='line'><span class="c1"># =&gt; [:find_user, :list_users]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># call the &#39;findUser&#39; operation</span>
</span><span class='line'><span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="ss">:find_user</span><span class="p">,</span> <span class="ss">message</span><span class="p">:</span> <span class="p">{</span> <span class="nb">id</span><span class="p">:</span> <span class="mi">42</span> <span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="n">response</span><span class="o">.</span><span class="n">body</span>
</span><span class='line'><span class="c1"># =&gt; { find_user_response: { id: 42, name: &#39;Hoff&#39; } }</span>
</span></code></pre></td></tr></table></div></figure>


<p>实际例子</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">SoapWithSavon</span>
</span><span class='line'>  <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
</span><span class='line'>    <span class="c1"># TODO: should use settin</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">client</span>
</span><span class='line'>      <span class="vi">@client</span> <span class="o">||=</span> <span class="no">Savon</span><span class="o">.</span><span class="n">client</span> <span class="k">do</span>
</span><span class='line'>        <span class="c1"># WSDL 接口</span>
</span><span class='line'>        <span class="n">wsdl</span> <span class="s2">&quot;http://192.168.0.22:8000/sap/bc/srt/wsdl/srvc_5618AD468DEB07E0E1008000C0A80016/wsdl11/allinone/ws_policy/document?sap-client=300&quot;</span>
</span><span class='line'>        <span class="c1"># 用户验证</span>
</span><span class='line'>        <span class="n">basic_auth</span> <span class="s2">&quot;CRMINTERFACE&quot;</span><span class="p">,</span> <span class="s2">&quot;123456&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 默认同步昨天的设备数据</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get_devices</span> <span class="p">(</span><span class="n">start_at</span> <span class="o">=</span> <span class="mi">1</span><span class="o">.</span><span class="n">day</span><span class="o">.</span><span class="n">ago</span><span class="p">,</span> <span class="n">end_at</span> <span class="o">=</span> <span class="mi">1</span><span class="o">.</span><span class="n">day</span><span class="o">.</span><span class="n">ago</span><span class="p">)</span>
</span><span class='line'>      <span class="n">start_at_format</span> <span class="o">=</span> <span class="n">start_at</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y-%m-%d&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">end_at_format</span> <span class="o">=</span> <span class="n">end_at</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y-%m-%d&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">response</span> <span class="o">=</span> <span class="n">call_and_fail_gracefully</span><span class="p">(</span><span class="ss">:z_wl_material</span><span class="p">,</span> <span class="ss">:message</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="s2">&quot;EAssetMatnr&quot;</span> <span class="o">=&gt;</span> <span class="p">{},</span> <span class="s2">&quot;ImUdate1&quot;</span> <span class="o">=&gt;</span> <span class="n">start_at_format</span><span class="p">,</span> <span class="s2">&quot;ImUdate2&quot;</span> <span class="o">=&gt;</span> <span class="n">end_at_format</span>  <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="n">response</span><span class="o">.</span><span class="n">body</span><span class="o">[</span><span class="ss">:z_wl_material_response</span><span class="o">][</span><span class="ss">:e_msgty</span><span class="o">]</span> <span class="o">==</span> <span class="s2">&quot;E&quot;</span>
</span><span class='line'>        <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="n">response</span><span class="o">.</span><span class="n">body</span><span class="o">[</span><span class="ss">:z_wl_material_response</span><span class="o">][</span><span class="ss">:e_ermsg</span><span class="o">]</span>
</span><span class='line'>        <span class="o">[]</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="n">response</span><span class="o">.</span><span class="n">body</span><span class="o">[</span><span class="ss">:z_wl_material_response</span><span class="o">][</span><span class="ss">:e_asset_matnr</span><span class="o">][</span><span class="ss">:item</span><span class="o">]</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">logger</span>
</span><span class='line'>      <span class="vc">@@logger</span> <span class="o">||=</span> <span class="no">Logger</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;./log/soap_with_savon.log&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">call_and_fail_gracefully</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="n">client</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="k">rescue</span> <span class="no">Savon</span><span class="o">::</span><span class="no">SOAPFault</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>      <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="n">e</span>
</span><span class='line'>    <span class="k">rescue</span> <span class="no">Savon</span><span class="o">::</span><span class="no">HTTPError</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>      <span class="c1"># HTTP Error</span>
</span><span class='line'>      <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="n">e</span>
</span><span class='line'>    <span class="k">rescue</span> <span class="no">Savon</span><span class="o">::</span><span class="no">InvalidResponseError</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>      <span class="c1"># InvalidResponseError</span>
</span><span class='line'>      <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="n">e</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>参考文档
<a href="https://github.com/savonrb/savon">savon</a>
<a href="https://docs.awspaas.com/reference-guide/aws-paas-api-guide/index.html">AWS PaaS API参考指南</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using alias in linux/mac]]></title>
    <link href="http://justin-lu.github.io/blog/2015/08/22/using-alias-in-linux-slash-mac/"/>
    <updated>2015-08-22T14:00:13+08:00</updated>
    <id>http://justin-lu.github.io/blog/2015/08/22/using-alias-in-linux-slash-mac</id>
    <content type="html"><![CDATA[<p>相信大部分的Linux用户都用过alias去自定义自己的快捷命令,今天整理一下自己常用的alias(原来的alias就是一坨<del>(>_&lt;)</del> )</p>

<!-- More -->


<p>我认为，比较好的alias应该包括</p>

<ul>
<li>符合大部分人的习惯</li>
<li>尽量使用全拼</li>
</ul>


<p>比较好的alias能够极大的加速开发效率</p>

<h1>安装</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">cd</span> <span class="o">~</span>
</span><span class='line'><span class="n">git</span> <span class="n">clone</span> <span class="nl">https</span><span class="p">:</span><span class="c1">//github.com/Justin-lu/alias.git .alias</span>
</span></code></pre></td></tr></table></div></figure>


<h1>使用</h1>

<p>添加以下代码到<code>.zshrc</code>或者<code>.bashrc</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp"># system shortcuts</span>
</span><span class='line'><span class="n">source</span> <span class="o">~/</span><span class="p">.</span><span class="n">alias</span><span class="o">/</span><span class="n">system</span><span class="p">.</span><span class="n">alias</span>
</span><span class='line'><span class="n">alias</span> <span class="n">open</span><span class="o">-</span><span class="n">system</span><span class="o">-</span><span class="n">alias</span><span class="o">=</span><span class="err">&#39;</span><span class="n">vim</span> <span class="o">~/</span><span class="p">.</span><span class="n">alias</span><span class="o">/</span><span class="n">system</span><span class="p">.</span><span class="n">alias</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#file shortcuts</span>
</span><span class='line'><span class="n">source</span> <span class="o">~/</span><span class="p">.</span><span class="n">alias</span><span class="o">/</span><span class="n">file</span><span class="p">.</span><span class="n">alias</span>
</span><span class='line'><span class="n">alias</span> <span class="n">open</span><span class="o">-</span><span class="n">file</span><span class="o">-</span><span class="n">alias</span><span class="o">=</span><span class="err">&#39;</span><span class="n">vim</span> <span class="o">~/</span><span class="p">.</span><span class="n">alias</span><span class="o">/</span><span class="n">file</span><span class="p">.</span><span class="n">alias</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="cp"># rails</span>
</span><span class='line'><span class="n">source</span> <span class="o">~/</span><span class="p">.</span><span class="n">alias</span><span class="o">/</span><span class="n">rails</span><span class="p">.</span><span class="n">alias</span>
</span><span class='line'><span class="n">alias</span> <span class="n">open</span><span class="o">-</span><span class="n">rails</span><span class="o">-</span><span class="n">alias</span><span class="o">=</span><span class="err">&#39;</span><span class="n">vim</span> <span class="o">~/</span><span class="p">.</span><span class="n">alias</span><span class="o">/</span><span class="n">rails</span><span class="p">.</span><span class="n">alias</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="cp"># ssh</span>
</span><span class='line'><span class="n">source</span> <span class="o">~/</span><span class="p">.</span><span class="n">alias</span><span class="o">/</span><span class="n">ssh</span><span class="p">.</span><span class="n">alias</span>
</span><span class='line'><span class="n">alias</span> <span class="n">open</span><span class="o">-</span><span class="n">ssh</span><span class="o">-</span><span class="n">alias</span><span class="o">=</span><span class="err">&#39;</span><span class="n">vim</span> <span class="o">~/</span><span class="p">.</span><span class="n">alias</span><span class="o">/</span><span class="n">ssh</span><span class="p">.</span><span class="n">alias</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="cp"># Heroku alias for ezitask</span>
</span><span class='line'><span class="n">source</span> <span class="o">~/</span><span class="p">.</span><span class="n">alias</span><span class="o">/</span><span class="n">heroku</span><span class="p">.</span><span class="n">alias</span>
</span><span class='line'><span class="n">alias</span> <span class="n">open</span><span class="o">-</span><span class="n">heroku</span><span class="o">-</span><span class="n">alias</span><span class="o">=</span><span class="err">&#39;</span><span class="n">vim</span> <span class="o">~/</span><span class="p">.</span><span class="n">alias</span><span class="o">/</span><span class="n">heroku</span><span class="p">.</span><span class="n">alias</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="cp"># Git alias</span>
</span><span class='line'><span class="n">source</span> <span class="o">~/</span><span class="p">.</span><span class="n">alias</span><span class="o">/</span><span class="n">git</span><span class="p">.</span><span class="n">alias</span>
</span><span class='line'><span class="n">alias</span> <span class="n">open</span><span class="o">-</span><span class="n">git</span><span class="o">-</span><span class="n">alias</span><span class="o">=</span><span class="err">&#39;</span><span class="n">vim</span> <span class="o">~/</span><span class="p">.</span><span class="n">alias</span><span class="o">/</span><span class="n">git</span><span class="p">.</span><span class="n">alias</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building Mobile Applications with Rails and Ionic]]></title>
    <link href="http://justin-lu.github.io/blog/2015/07/21/building-mobile-applications-with-rails-and-ionic/"/>
    <updated>2015-07-21T21:52:21+08:00</updated>
    <id>http://justin-lu.github.io/blog/2015/07/21/building-mobile-applications-with-rails-and-ionic</id>
    <content type="html"><![CDATA[<p>本文介绍如何在rails上面开发ionic.</p>

<!-- More -->


<h1>Rails 关键 Gem 介绍</h1>

<h2><a href="https://github.com/intridea/grape">grape</a></h2>

<blockquote><p>An opinionated micro-framework for creating REST-like APIs in Ruby</p></blockquote>

<ol>
<li>非常轻量，可以脱离Rails，直接运行在Rack服务器之上，速度非常快；</li>
<li>完全符合REST风格；</li>
<li>大量DSL简化API的编写；</li>
<li>提供简单的版本控制；</li>
<li>文件目录结构：</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>├── services
</span><span class='line'>|   ├── api
</span><span class='line'>|   |   ├── entities
</span><span class='line'>|   |   ├── helpers
</span><span class='line'>|   |   |   ├── api_strong_parameters.rb
</span><span class='line'>|   |   |   ├── authorization_helper.rb
</span><span class='line'>|   |   |   └── response_helper.rb
</span><span class='line'>|   |   └── v1
</span><span class='line'>|   |       ├── model.rb
</span><span class='line'>|   |       └── ...
</span><span class='line'>|   ├── api.rb</span></code></pre></td></tr></table></div></figure>


<pre><code>6. 添加配置至application.rb
</code></pre>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">paths</span><span class="o">.</span><span class="n">add</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;app&#39;</span><span class="p">,</span> <span class="s1">&#39;api&#39;</span><span class="p">),</span> <span class="ss">glob</span><span class="p">:</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;**&#39;</span><span class="p">,</span> <span class="s1">&#39;*.rb&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">autoload_paths</span> <span class="o">+=</span> <span class="no">Dir</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">config</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="s2">/app/services/*&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2><a href="https://github.com/intridea/grape-entity">grape-entity</a></h2>

<blockquote><p>Entities - a simple Facade to use with your models and API - extracted from Grape.</p></blockquote>

<pre><code>1. 自定义放回的内容
2. 嵌套返回数据
3. ...
</code></pre>

<h2><a href="https://github.com/BrandyMint/grape-swagger-rails">grape-swagger-rails</a></h2>

<blockquote><p>Integration swagger to grape in rails</p></blockquote>

<pre><code>1. API在线测试工具
</code></pre>

<h2><a href="https://github.com/cyu/rack-cors">rack-cors</a></h2>

<blockquote><p>Rack Middleware for handling Cross-Origin Resource Sharing (CORS), which makes cross-origin AJAX possible.</p></blockquote>

<pre><code>1. 配置服务端允许跨域请求
2. 添加配置至application.rb,以允许所有请求的跨域操作
</code></pre>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">middleware</span><span class="o">.</span><span class="n">insert_before</span> <span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;Rack::Cors&quot;</span><span class="p">,</span> <span class="ss">:debug</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">,</span><span class="ss">:logger</span> <span class="o">=&gt;</span> <span class="p">(</span><span class="o">-&gt;</span> <span class="p">{</span> <span class="no">Rails</span><span class="o">.</span><span class="n">logger</span> <span class="p">})</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">allow</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">origins</span> <span class="s1">&#39;*&#39;</span>
</span><span class='line'>        <span class="n">resource</span> <span class="s1">&#39;*&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:headers</span> <span class="o">=&gt;</span> <span class="ss">:any</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:methods</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:get</span><span class="p">,</span> <span class="ss">:post</span><span class="p">,</span> <span class="ss">:delete</span><span class="p">,</span> <span class="ss">:put</span><span class="p">,</span> <span class="ss">:options</span><span class="p">,</span> <span class="ss">:head</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:max_age</span> <span class="o">=&gt;</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2><a href="https://github.com/jpush/jpush-api-ruby-client">jpush</a></h2>

<blockquote><p>  极光推送官方支持的 Ruby 版本服务器端 SDK</p></blockquote>

<pre><code>1. 通过配置app_key 和 app_secret 即可发推送通知
2. demo 代码
</code></pre>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">PushNotifier</span>
</span><span class='line'>  <span class="k">class</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">client</span>
</span><span class='line'>      <span class="k">return</span> <span class="vi">@client</span> <span class="k">if</span> <span class="vi">@clien</span>
</span><span class='line'>      <span class="n">jpush_configs</span> <span class="o">=</span> <span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">secrets</span><span class="o">[</span><span class="s1">&#39;jpush&#39;</span><span class="o">]</span>
</span><span class='line'>      <span class="vi">@client</span> <span class="o">=</span> <span class="no">JPush</span><span class="o">::</span><span class="no">JPushClient</span><span class="o">.</span><span class="n">new</span> <span class="o">*</span><span class="n">jpush_configs</span><span class="o">.</span><span class="n">values_at</span><span class="p">(</span><span class="s1">&#39;app_key&#39;</span><span class="p">,</span> <span class="s1">&#39;app_secret&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">push</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="n">receiver_credential_ids</span><span class="p">,</span> <span class="n">extras</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>      <span class="c1"># See how to define audience for pushing message, visit:</span>
</span><span class='line'>      <span class="c1"># https://github.com/jpush/jpush-api-ruby-client/blob/master/example/push_example.rb</span>
</span><span class='line'>      <span class="n">receiver_credential_ids</span> <span class="o">=</span> <span class="o">[*</span><span class="n">receiver_credential_ids</span><span class="o">]</span>
</span><span class='line'>      <span class="n">payload</span> <span class="o">=</span> <span class="no">JPush</span><span class="o">::</span><span class="no">PushPayload</span><span class="o">.</span><span class="n">build</span><span class="p">(</span>
</span><span class='line'>        <span class="ss">platform</span><span class="p">:</span> <span class="no">JPush</span><span class="o">::</span><span class="no">Platform</span><span class="o">.</span><span class="n">all</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">audience</span><span class="p">:</span> <span class="no">JPush</span><span class="o">::</span><span class="no">Audience</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="ss">:_alias</span><span class="o">=&gt;</span> <span class="n">receiver_credential_ids</span><span class="p">),</span>
</span><span class='line'>        <span class="ss">notification</span><span class="p">:</span> <span class="no">JPush</span><span class="o">::</span><span class="no">Notification</span><span class="o">.</span><span class="n">build</span><span class="p">(</span>
</span><span class='line'>          <span class="ss">alert</span><span class="p">:</span> <span class="n">message</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">ios</span><span class="p">:</span> <span class="no">JPush</span><span class="o">::</span><span class="no">IOSNotification</span><span class="o">.</span><span class="n">build</span><span class="p">(</span>
</span><span class='line'>            <span class="ss">alert</span><span class="p">:</span> <span class="n">message</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">badge</span><span class="p">:</span> <span class="s2">&quot;+1&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">sound</span><span class="p">:</span> <span class="s2">&quot;happy&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">extras</span><span class="p">:</span> <span class="n">extras</span>
</span><span class='line'>          <span class="p">),</span>
</span><span class='line'>          <span class="ss">android</span><span class="p">:</span> <span class="no">JPush</span><span class="o">::</span><span class="no">AndroidNotification</span><span class="o">.</span><span class="n">build</span><span class="p">(</span>
</span><span class='line'>            <span class="ss">alert</span><span class="p">:</span> <span class="n">message</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">builder_id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">extras</span><span class="p">:</span> <span class="n">extras</span>
</span><span class='line'>          <span class="p">)</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="ss">message</span><span class="p">:</span> <span class="no">JPush</span><span class="o">::</span><span class="no">Message</span><span class="o">.</span><span class="n">build</span><span class="p">(</span>
</span><span class='line'>          <span class="ss">msg_content</span><span class="p">:</span> <span class="s2">&quot;message content test&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">title</span><span class="p">:</span> <span class="s2">&quot;schoolmatch&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">content_type</span><span class="p">:</span> <span class="s2">&quot;message content type test&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">extras</span><span class="p">:</span> <span class="n">extras</span>
</span><span class='line'>        <span class="p">),</span>
</span><span class='line'>        <span class="ss">options</span><span class="p">:</span><span class="no">JPush</span><span class="o">::</span><span class="no">Options</span><span class="o">.</span><span class="n">build</span><span class="p">(</span>
</span><span class='line'>          <span class="ss">sendno</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">apns_production</span><span class="p">:</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">production?</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>      <span class="p">)</span>
</span><span class='line'>      <span class="n">result</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">sendPush</span><span class="p">(</span><span class="n">payload</span><span class="p">)</span>
</span><span class='line'>      <span class="no">Rails</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">debug</span> <span class="s2">&quot;Pushed message: </span><span class="si">#{</span><span class="n">result</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="n">result</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">debug?</span>
</span><span class='line'>      <span class="sx">%w(development test staging)</span><span class="o">.</span><span class="n">include?</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># usage: PushNotifier.push(&#39;test&#39;, 1)</span>
</span></code></pre></td></tr></table></div></figure>


<pre><code>3. 注意`badge: "+1"`配置，该配置是jpush通过维护用户未读消息数，每次推送时，都会自动在当前消息数上做加1操作
</code></pre>

<h2><a href="https://stripe.com/">stripe</a></h2>

<blockquote><p>关于stripe的集成，清参考Marting大神的 <a href="https://ruby-china.org/topics/24897">blog</a></p></blockquote>

<h2><a href="https://github.com/saberma/china_sms">china_sms</a></h2>

<blockquote><p>中国各个短信平台 Ruby 接口，现支持云片网、推立方、亿美软通、短信宝、畅友网络</p></blockquote>

<pre><code>1. 在这里我们使用[云片网](yunpian.com)进行短信验证
2. 添加secret_key
3. 在云片网后台添加服务器IP白名单，签名，模板，等待审核
4. 审核通过，可在Rails Console里面发送短信
  demo code
</code></pre>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">ChinaSMS</span><span class="o">.</span><span class="n">use</span> <span class="ss">:yunpian</span><span class="p">,</span> <span class="ss">password</span><span class="p">:</span> <span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">secrets</span><span class="o">.</span><span class="n">china_sms</span><span class="o">[</span><span class="s2">&quot;password&quot;</span><span class="o">]</span>
</span><span class='line'><span class="no">ChinaSMS</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">debug</span>
</span><span class='line'>    <span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">development?</span> <span class="o">||</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">test?</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">send_to</span><span class="p">(</span><span class="n">phone</span><span class="p">,</span> <span class="n">message</span><span class="p">,</span> <span class="n">debug</span> <span class="o">=</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">debug</span> <span class="o">||</span> <span class="nb">self</span><span class="o">.</span><span class="n">debug</span>
</span><span class='line'>      <span class="no">Rails</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">debug</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="c1"># use sidekiq to send sms asynchronously</span>
</span><span class='line'>      <span class="n">delay</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">phone</span><span class="p">,</span> <span class="n">message</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># &quot;【留学助手】#{3721}（短信验证码，有效期3分钟，请尽快使用）&quot; 该模板必须审核通过</span>
</span><span class='line'><span class="c1"># usage: ChinaSMS.send_to 15820700248, &quot;【留学助手】#{3721}（短信验证码，有效期3分钟，请尽快使用）&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<pre><code>5.在这里，为了配合验证码验证需求，需要在相应model上添加`verification_code`、`verification_expire_at`等字段
</code></pre>

<h1>Iionic</h1>

<h2>Ionic简单介绍</h2>

<ol>
<li>H5 navative app(HTML,CSS,Javascript)</li>
<li>Cordova/PhoneGap + AngularJs + AngularJs

<h2>命令行工具</h2></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>  <span class="nb">alias</span> <span class="s1">&#39;ionic-serve&#39;</span><span class="o">=</span><span class="s1">&#39;ionic serve&#39;</span>
</span><span class='line'>  <span class="nb">alias</span> <span class="s1">&#39;ionic-build-ios&#39;</span><span class="o">=</span><span class="s1">&#39;ionic build ios&#39;</span>
</span><span class='line'>  <span class="nb">alias</span> <span class="s1">&#39;ionic-run-ios&#39;</span><span class="o">=</span><span class="s1">&#39;ionic run ios&#39;</span>
</span><span class='line'>  <span class="nb">alias</span> <span class="s1">&#39;ionic-emulate-ios&#39;</span><span class="o">=</span><span class="s1">&#39;ionic emulate ios --livereload&#39;</span>
</span><span class='line'>  <span class="nb">alias</span> <span class="s1">&#39;ionic-update-ios&#39;</span><span class="o">=</span><span class="s1">&#39;ionic platform update ios&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>构建工具</h2>

<p>  图形化 ionic APP 构建工具 <a href="https://creator.ionic.io/">Ionic Creator</a>，只需要拖拽就能创建基于 ionic 的 APP了</p>

<h2>目录结构</h2>

<p>简单介绍angular的目录结构</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>├── www
</span><span class='line'><span class="p">|</span>   ├── js
</span><span class='line'><span class="p">|</span>   <span class="p">|</span>   ├── app.js
</span><span class='line'><span class="p">|</span>   <span class="p">|</span>   ├── controllers.js
</span><span class='line'><span class="p">|</span>   <span class="p">|</span>   ├── directives.js
</span><span class='line'><span class="p">|</span>   <span class="p">|</span>   ├── helper.js
</span><span class='line'><span class="p">|</span>   <span class="p">|</span>   ├── routes.js
</span><span class='line'><span class="p">|</span>   <span class="p">|</span>   ├── services.js
</span><span class='line'><span class="p">|</span>   <span class="p">|</span>   └── translations.js
</span><span class='line'><span class="p">|</span>   ├── css
</span><span class='line'><span class="p">|</span>   ├── templates
</span><span class='line'><span class="p">|</span>   ├── img
</span><span class='line'><span class="p">|</span>   ├── lib
</span><span class='line'><span class="p">|</span>   └── index.html
</span></code></pre></td></tr></table></div></figure>


<h2>IOS开发证书配置简单介绍</h2>

<ol>
<li>创建App Id</li>
<li>创建 Apns证书</li>
<li>创建 Provisioning Profile 证书</li>
<li>配置Xcode
注意：有时候Provisioning Profile证书在xcode没有生效，重启xcode即可
图文链接清参考：</li>
<li><a href="http://docs.jpush.io/client/ios_tutorials/#ios_1">jpush 官网</a></li>
<li><a href="http://blog.fir.im/how-to-build-adhoc-ipa/">fir 官网</a></li>
</ol>


<h2>调试技巧</h2>

<ol>
<li>Debug using Chrome <a href="https://chrome.google.com/webstore/detail/angularjs-batarang/ighdmehidhipcmcojjgiloacoafjmpfk?hl=en">AngularJS Batarang</a></li>
<li>Debug Using Safari</li>
<li>Using Xcode</li>
<li>Debug with Ionic CLI</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">alias</span> <span class="s1">&#39;ionic-emulate&#39;</span><span class="o">=</span><span class="s1">&#39;ionic emulate ios -l -c -s&#39;</span>
</span><span class='line'>ionic  <span class="o">[</span>run<span class="p">|</span>emulate<span class="o">]</span> &lt;platform&gt; <span class="o">[</span>options<span class="o">]</span>
</span><span class='line'>    <span class="o">[</span>--livereload<span class="p">|</span>-l<span class="o">]</span> .... Live Reload app dev files from the device
</span><span class='line'>    <span class="o">[</span>--consolelogs<span class="p">|</span>-c<span class="o">]</span> ... Print app console logs to Ionic CLI
</span><span class='line'>    <span class="o">[</span>--serverlogs<span class="p">|</span>-s<span class="o">]</span> .... Print dev server logs to Ionic CLI
</span><span class='line'>
</span><span class='line'>1. restart or r to restart the client app from the root
</span><span class='line'>2. goto or g and a url to have the app navigate to the given url
</span><span class='line'>3. consolelogs or c to <span class="nb">enable</span>/disable console log output
</span><span class='line'>4. serverlogs or s to <span class="nb">enable</span>/disable server log output
</span><span class='line'>5. quit or q to shutdown the server and <span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure>


<h2>性能优化</h2>

<ol>
<li>整合 Crosswalk 至 Cordova（一个Web运行环境），替换自带的 Webview。
具体做法，可以参考 ionic 上的链接： <a href="http://forum.ionicframework.com/t/crosswalk-build/5778">Crosswalk Build</a></li>
<li>关闭页面切换动画，即 animation=&ldquo;no-animation&rdquo;</li>
<li>读取模板的时候，显示“加载中”圈圈，避免出现无响应的错觉</li>
<li>使用 <a href="https://github.com/Pasvaz/bindonce">Pasvaz/bindonce</a>，避免 Angular.js 对静态内容绑定所带来的性能消耗</li>
</ol>


<h2>Ionic能做什么？</h2>

<h3>多语言支持</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">translations</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">en</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">students</span><span class="o">:</span> <span class="s1">&#39;Students&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">zh</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">students</span><span class="o">:</span> <span class="s1">&#39;同学&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">config</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">$translateProvider</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//Get system language</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">systemLang</span> <span class="o">=</span> <span class="nx">navigator</span><span class="p">.</span><span class="nx">language</span> <span class="o">||</span> <span class="nx">navigator</span><span class="p">.</span><span class="nx">userLanguage</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="nx">lang</span> <span class="k">in</span> <span class="nx">translations</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">$translateProvider</span><span class="p">.</span><span class="nx">translations</span><span class="p">(</span><span class="nx">lang</span><span class="p">,</span> <span class="nx">translations</span><span class="p">[</span><span class="nx">lang</span><span class="p">]);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">//Set app language</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">appLang</span> <span class="o">=</span> <span class="nx">helper</span><span class="p">.</span><span class="nx">matchLanguageString</span><span class="p">(</span><span class="nx">systemLang</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">$translateProvider</span><span class="p">.</span><span class="nx">preferredLanguage</span><span class="p">(</span><span class="nx">appLang</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3>消息推送</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;xx.services&#39;</span><span class="p">,</span> <span class="p">[])</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">factory</span><span class="p">(</span><span class="s1">&#39;Push&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">push</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">setAlias</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">alias</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">push</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;jpush: set alias&#39;</span><span class="p">,</span> <span class="nx">alias</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">plugins</span><span class="p">.</span><span class="nx">jPushPlugin</span><span class="p">.</span><span class="nx">setAlias</span><span class="p">(</span><span class="nx">alias</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">init</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">notificationCallback</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;jpush: start init-----------------------&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">push</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">plugins</span> <span class="o">&amp;&amp;</span> <span class="nb">window</span><span class="p">.</span><span class="nx">plugins</span><span class="p">.</span><span class="nx">jPushPlugin</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">push</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;jpush: init&#39;</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">plugins</span><span class="p">.</span><span class="nx">jPushPlugin</span><span class="p">.</span><span class="nx">init</span><span class="p">();</span>
</span><span class='line'>          <span class="nx">plugins</span><span class="p">.</span><span class="nx">jPushPlugin</span><span class="p">.</span><span class="nx">setDebugMode</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">plugins</span><span class="p">.</span><span class="nx">jPushPlugin</span><span class="p">.</span><span class="nx">openNotificationInAndroidCallback</span> <span class="o">=</span> <span class="nx">notificationCallback</span><span class="p">;</span>
</span><span class='line'>          <span class="nx">plugins</span><span class="p">.</span><span class="nx">jPushPlugin</span><span class="p">.</span><span class="nx">receiveNotificationIniOSCallback</span> <span class="o">=</span> <span class="nx">notificationCallback</span><span class="p">;</span>
</span><span class='line'>          <span class="nx">plugins</span><span class="p">.</span><span class="nx">jPushPlugin</span><span class="p">.</span><span class="nx">receiveMessageIniOSCallback</span> <span class="o">=</span> <span class="nx">notificationCallback</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Push</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">notificationCallback</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">notificationCallback</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">notification</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">fromJson</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">//app 是否处于正在运行状</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">isActive</span> <span class="o">=</span> <span class="nx">notification</span><span class="p">.</span><span class="nx">notification</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// here add your code</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3><a href="http://ngcordova.com/">ngcordova</a> <a href="http://ngcordova.com/docs/plugins/">Plugin</a></h3>

<blockquote><p>  调用手机摄像头
  IOS指纹识别
  OAuth
  获取地理位置</p></blockquote>

<h2>如何与Rails结合</h2>

<ul>
<li>Rails 负责提供REST API</li>
<li>Ionic 通过ng-resource调用REST API</li>
</ul>


<h2>测试与发布</h2>

<ul>
<li>Android 打包</li>
<li>iOS 打包</li>
<li>发布测试版本 <a href="http://fir.im/">fir.im</a></li>
<li>生成截图 <a href="https://launchkit.io/screenshots/onboard/add-screenshot?layout=below">screenshots</a></li>
<li>提交到 app store</li>
</ul>


<h2>什么时候用Ionic</h2>

<ul>
<li><p>用Ionic开发的优点和缺点</p>

<ul>
<li>优点: 一次开发，多个平台，开发效率高</li>
<li>缺点：
1.对开发人员的要求很高，如果需要编译成native app需要开发人员了解 web、ios、andriod 三种开发技术
2.性能问题
3.不支持较低Android版本（4.1）</li>
</ul>
</li>
<li><p>哪些应用适合用Ionic来开发:</p>

<ul>
<li>不属于游戏之类的APP类型；</li>
<li>想低成本、快速迭代地开发 Android、iOS 平台上的应用；</li>
<li>目标终端的设备性能不算低；</li>
<li><a href="http://ionichina.com/showcase">国内例子</a></li>
<li><a href="http://showcase.ionicframework.com">国外例子</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google map with ionic]]></title>
    <link href="http://justin-lu.github.io/blog/2015/07/06/google-map-with-ionic/"/>
    <updated>2015-07-06T16:03:52+08:00</updated>
    <id>http://justin-lu.github.io/blog/2015/07/06/google-map-with-ionic</id>
    <content type="html"><![CDATA[<p>本文介绍如何在ionic添加google map.</p>

<!-- More -->


<p>初始化ionic项目</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>  ionic start map blank --sass --id com.beansmile.maps
</span><span class='line'>  <span class="nb">cd </span>map
</span><span class='line'>  npm install
</span><span class='line'>  gulp sass
</span></code></pre></td></tr></table></div></figure>


<p>添加以下代码到ionic.project</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="s2">&quot;gulpStartupTasks&quot;</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;sass&quot;</span><span class="p">,</span> <span class="s2">&quot;watch&quot;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>个人建议在初始化ionic项目的时候，<code>id</code>参数是必须的，生成的id将做为ios app 的<code>bundle id</code>和android app的<code>package name</code>
&ndash;sass 参数默认启动sass功能,也可以在以后添加，详见<a href="http://ionicframework.com/docs/cli/sass.html">Using Sass</a></p>

<p>添加定位插件geolocation</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>  ionic plugin add cordova-plugin-geolocation
</span></code></pre></td></tr></table></div></figure>


<p>查看<a href="https://developers.google.com/maps/documentation/javascript/tutorial">Google Maps Javascript SKD</a>并到<a href="https://code.google.com/apis/console/b/0/?pli=1">Google API Console</a>创建一个Google Maps application.</p>

<p>当你拿到你的<code>google api key</code>后，添加到<code>www/index.html</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;!</span><span class="nx">DOCTYPE</span> <span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">meta</span> <span class="nx">charset</span><span class="o">=</span><span class="s2">&quot;utf-8&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">meta</span> <span class="nx">name</span><span class="o">=</span><span class="s2">&quot;viewport&quot;</span> <span class="nx">content</span><span class="o">=</span><span class="s2">&quot;initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">title</span><span class="o">&gt;&lt;</span><span class="err">/title&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">&lt;!--</span> <span class="nx">IF</span> <span class="nx">using</span> <span class="nx">Sass</span> <span class="p">(</span><span class="nx">run</span> <span class="nx">gulp</span> <span class="nx">sass</span> <span class="nx">first</span><span class="p">),</span> <span class="nx">then</span> <span class="nx">uncomment</span> <span class="nx">below</span> <span class="nx">and</span> <span class="nx">remove</span> <span class="nx">the</span> <span class="nx">CSS</span> <span class="nx">includes</span> <span class="nx">above</span> <span class="o">--&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;css/ionic.app.css&quot;</span> <span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">&lt;!--</span> <span class="nx">ionic</span><span class="o">/</span><span class="nx">angularjs</span> <span class="nx">js</span> <span class="o">--&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;lib/ionic/js/ionic.bundle.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;https://maps.googleapis.com/maps/api/js?key=[YOU KEY HERE]&amp;sensor=true&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">&lt;!--</span> <span class="nx">cordova</span> <span class="nx">script</span> <span class="p">(</span><span class="k">this</span> <span class="nx">will</span> <span class="nx">be</span> <span class="nx">a</span> <span class="mi">404</span> <span class="nx">during</span> <span class="nx">development</span><span class="p">)</span> <span class="o">--&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;cordova.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">&lt;!--</span> <span class="nx">your</span> <span class="nx">app</span><span class="err">&#39;</span><span class="nx">s</span> <span class="nx">js</span> <span class="o">--&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;js/app.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;js/controllers.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;js/directives.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/head&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">body</span> <span class="nx">ng</span><span class="o">-</span><span class="nx">app</span><span class="o">=</span><span class="s2">&quot;starter&quot;</span> <span class="nx">ng</span><span class="o">-</span><span class="nx">controller</span><span class="o">=</span><span class="s2">&quot;MapCtrl&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">ion</span><span class="o">-</span><span class="nx">header</span><span class="o">-</span><span class="nx">bar</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;bar-stable&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">h1</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;title&quot;</span><span class="o">&gt;</span><span class="nx">Map</span><span class="o">&lt;</span><span class="err">/h1&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/ion-header-bar&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">ion</span><span class="o">-</span><span class="nx">content</span> <span class="nx">scroll</span><span class="o">=</span><span class="s2">&quot;false&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">a</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;button button-icon icon ion-location map-icon-location active&quot;</span> <span class="nx">ng</span><span class="o">-</span><span class="nx">click</span><span class="o">=</span><span class="s2">&quot;centerOnMe()&quot;</span><span class="o">&gt;&lt;</span><span class="err">/a&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">a</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;button button-icon icon ion-navicon map-icon-menu&quot;</span> <span class="nx">ng</span><span class="o">-</span><span class="nx">click</span><span class="o">=</span><span class="s2">&quot;direction()&quot;</span><span class="o">&gt;&lt;</span><span class="err">/a&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">map</span> <span class="nx">on</span><span class="o">-</span><span class="nx">create</span><span class="o">=</span><span class="s2">&quot;mapCreated(map)&quot;</span><span class="o">&gt;&lt;</span><span class="err">/map&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/ion-content&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">ion</span><span class="o">-</span><span class="nx">footer</span><span class="o">-</span><span class="nx">bar</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;bar-stable&quot;</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">a</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;button button-icon icon ion-woman item-button-left&quot;</span><span class="o">&gt;&lt;</span><span class="err">/a&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">a</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;button button-icon icon ion-chevron-right item-button-right&quot;</span><span class="o">&gt;&lt;</span><span class="err">/a&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/a&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/ion-footer-bar&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/body&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>添加样式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">map</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">display</span><span class="o">:</span> <span class="k">block</span><span class="p">;</span>
</span><span class='line'>  <span class="k">width</span><span class="o">:</span> <span class="m">100%</span><span class="p">;</span>
</span><span class='line'>  <span class="k">height</span><span class="o">:</span> <span class="m">100%</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nc">.scroll</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">height</span><span class="o">:</span> <span class="m">100%</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nc">.map-icon-location</span><span class="p">{</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="m">#fff</span><span class="p">;</span>
</span><span class='line'>  <span class="k">width</span><span class="o">:</span> <span class="m">47px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">47px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">margin-top</span><span class="o">:</span> <span class="m">50px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">margin-left</span><span class="o">:</span> <span class="m">10px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">position</span><span class="o">:</span> <span class="k">fixed</span><span class="p">;</span>
</span><span class='line'>  <span class="k">z-index</span><span class="o">:</span> <span class="m">10000</span><span class="p">;</span>
</span><span class='line'>  <span class="n">box</span><span class="o">-</span><span class="n">shadow</span><span class="o">:</span> <span class="m">1px</span> <span class="m">1px</span> <span class="m">3px</span> <span class="m">2px</span> <span class="m">#C2BDBD</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nc">.map-icon-location.active</span><span class="o">,</span> <span class="nc">.map-icon-menu.active</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="m">#49AEF8</span> <span class="cp">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="k">opacity</span><span class="o">:</span> <span class="m">1</span> <span class="cp">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="m">#fff</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nc">.map-icon-menu</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="m">#fff</span><span class="p">;</span>
</span><span class='line'>  <span class="k">width</span><span class="o">:</span> <span class="m">47px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">47px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">margin-top</span><span class="o">:</span> <span class="m">100px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">margin-left</span><span class="o">:</span> <span class="m">10px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">position</span><span class="o">:</span> <span class="k">fixed</span><span class="p">;</span>
</span><span class='line'>  <span class="k">z-index</span><span class="o">:</span> <span class="m">10000</span><span class="p">;</span>
</span><span class='line'>  <span class="n">box</span><span class="o">-</span><span class="n">shadow</span><span class="o">:</span> <span class="m">1px</span> <span class="m">1px</span> <span class="m">3px</span> <span class="m">2px</span> <span class="m">#C2BDBD</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>添加map的directives</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;starter.directives&#39;</span><span class="p">,</span> <span class="p">[])</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="s1">&#39;map&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">restrict</span><span class="o">:</span> <span class="s1">&#39;E&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">scope</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">onCreate</span><span class="o">:</span> <span class="s1">&#39;&amp;&#39;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">link</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">$element</span><span class="p">,</span> <span class="nx">$attr</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">function</span> <span class="nx">initialize</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">mapOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">center</span><span class="o">:</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">LatLng</span><span class="p">(</span><span class="mf">43.07493</span><span class="p">,</span> <span class="o">-</span><span class="mf">89.381388</span><span class="p">),</span>
</span><span class='line'>          <span class="nx">zoom</span><span class="o">:</span> <span class="mi">16</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">mapTypeId</span><span class="o">:</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">MapTypeId</span><span class="p">.</span><span class="nx">ROADMAP</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">Map</span><span class="p">(</span><span class="nx">$element</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nx">mapOptions</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">$scope</span><span class="p">.</span><span class="nx">onCreate</span><span class="p">({</span><span class="nx">map</span><span class="o">:</span> <span class="nx">map</span><span class="p">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Stop the side bar from dragging when mousedown/tapdown on the map</span>
</span><span class='line'>        <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">addDomListener</span><span class="p">(</span><span class="nx">$element</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="s1">&#39;mousedown&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">===</span> <span class="s2">&quot;complete&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">initialize</span><span class="p">();</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">addDomListener</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span> <span class="s1">&#39;load&#39;</span><span class="p">,</span> <span class="nx">initialize</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>添加对于的controller.js</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;starter.controllers&#39;</span><span class="p">,</span> <span class="p">[])</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;MapCtrl&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">$ionicLoading</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$scope</span><span class="p">.</span><span class="nx">mapCreated</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">map</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">$scope</span><span class="p">.</span><span class="nx">map</span> <span class="o">=</span> <span class="nx">map</span><span class="p">;</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">$scope</span><span class="p">.</span><span class="nx">direction</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$scope</span><span class="p">.</span><span class="nx">map</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">$scope</span><span class="p">.</span><span class="nx">loading</span> <span class="o">=</span> <span class="nx">$ionicLoading</span><span class="p">.</span><span class="nx">show</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">template</span><span class="o">:</span> <span class="s1">&#39;Getting current location...&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">showBackdrop</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">navigator</span><span class="p">.</span><span class="nx">geolocation</span><span class="p">.</span><span class="nx">getCurrentPosition</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">pos</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Got pos&#39;</span><span class="p">,</span> <span class="nx">pos</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">center</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">LatLng</span><span class="p">(</span><span class="mf">37.772323</span><span class="p">,</span> <span class="o">-</span><span class="mf">122.214897</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">target</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">LatLng</span><span class="p">(</span><span class="mf">37.771923</span><span class="p">,</span> <span class="o">-</span><span class="mf">122.219339</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">$scope</span><span class="p">.</span><span class="nx">map</span><span class="p">.</span><span class="nx">setCenter</span><span class="p">(</span><span class="nx">center</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">directionsDisplay</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">DirectionsRenderer</span><span class="p">();</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">directionsService</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">DirectionsService</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">directionsDisplay</span><span class="p">.</span><span class="nx">setMap</span><span class="p">(</span><span class="nx">$scope</span><span class="p">.</span><span class="nx">map</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">request</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">origin</span><span class="o">:</span><span class="nx">center</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">destination</span><span class="o">:</span><span class="nx">target</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">travelMode</span><span class="o">:</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">TravelMode</span><span class="p">.</span><span class="nx">DRIVING</span>
</span><span class='line'>      <span class="p">};</span>
</span><span class='line'>      <span class="nx">directionsService</span><span class="p">.</span><span class="nx">route</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">response</span><span class="p">,</span> <span class="nx">status</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">status</span> <span class="o">==</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">DirectionsStatus</span><span class="p">.</span><span class="nx">OK</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">directionsDisplay</span><span class="p">.</span><span class="nx">setDirections</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">$ionicLoading</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span>
</span><span class='line'>    <span class="p">},</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;Unable to get location: &#39;</span> <span class="o">+</span> <span class="nx">error</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">$scope</span><span class="p">.</span><span class="nx">centerOnMe</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Centering&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">$scope</span><span class="p">.</span><span class="nx">map</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">$scope</span><span class="p">.</span><span class="nx">loading</span> <span class="o">=</span> <span class="nx">$ionicLoading</span><span class="p">.</span><span class="nx">show</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">template</span><span class="o">:</span> <span class="s1">&#39;Getting current location...&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">showBackdrop</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">navigator</span><span class="p">.</span><span class="nx">geolocation</span><span class="p">.</span><span class="nx">getCurrentPosition</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">pos</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Got pos&#39;</span><span class="p">,</span> <span class="nx">pos</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">center</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">LatLng</span><span class="p">(</span><span class="nx">pos</span><span class="p">.</span><span class="nx">coords</span><span class="p">.</span><span class="nx">latitude</span><span class="p">,</span> <span class="nx">pos</span><span class="p">.</span><span class="nx">coords</span><span class="p">.</span><span class="nx">longitude</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">$scope</span><span class="p">.</span><span class="nx">map</span><span class="p">.</span><span class="nx">setCenter</span><span class="p">(</span><span class="nx">center</span><span class="p">);</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">marker</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">Marker</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">position</span><span class="o">:</span> <span class="nx">center</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">map</span><span class="o">:</span> <span class="nx">$scope</span><span class="p">.</span><span class="nx">map</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;Hello World!&#39;</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>      <span class="nx">$ionicLoading</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span>
</span><span class='line'>    <span class="p">},</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;Unable to get location: &#39;</span> <span class="o">+</span> <span class="nx">error</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>打开app.js，注入controllers directives</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;starter&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;ionic&#39;</span><span class="p">,</span><span class="s1">&#39;starter.controllers&#39;</span><span class="p">,</span> <span class="s1">&#39;starter.directives&#39;</span><span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上根据google api, 添加了定位功能;两个地点的路线规划功能,为了演示方便，A地点和B地点的经纬度是固定的，可以随意更改。</p>

<p>最后，执行以下命令，即可在你的手机使用这个app了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>  ionic build ios
</span><span class='line'>  ionic run ios --devise
</span></code></pre></td></tr></table></div></figure>


<p>更多google map api，请看 <a href="https://developers.google.com/maps/documentation/javascript/examples/">example</a></p>

<p>附上效果图一张</p>

<p><img src="http://justin-lu.github.io/images/blog/google-map.jpg" alt="google map" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[理解 ActiveSupport::Concern ]]></title>
    <link href="http://justin-lu.github.io/blog/2015/07/05/li-jie-activesupport-concern/"/>
    <updated>2015-07-05T21:49:00+08:00</updated>
    <id>http://justin-lu.github.io/blog/2015/07/05/li-jie-activesupport-concern</id>
    <content type="html"><![CDATA[<p>分享一下自己阅读ActiveSupport::Concern源码的过程，希望和大家一起学习，错误之处，还请指出</p>

<!-- More -->


<p>在查看ActiveSupport::Concern <a href="https://github.com/rails/rails/blob/master/activesupport/lib/active_support/concern.rb">源码</a>之前，我们先理解几个概念</p>

<h2>class_eval and instance_eval</h2>

<h3>instance_eval</h3>

<p>首先从名字可以得到的信息是，<code>instance_eval</code>的调用者<code>receiver</code>必须是一个实例<code>instance</code>，而在<code>instance_eval</code> block的内部，self即为receiver实例本身。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 例子一</span>
</span><span class='line'><span class="n">obj_instance</span><span class="o">.</span><span class="n">instance_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">self</span>  <span class="c1"># =&gt; obj_instance</span>
</span><span class='line'>  <span class="c1"># current class =&gt; obj_instance&#39;s singleton class</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>根据这个定义，如果在一个实例上调用了<code>instance_eval</code>，就可以在其中定义该实例的单态函数<code>singleton_method</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 例子二</span>
</span><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="n">A</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">instance_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="nb">self</span>  <span class="c1"># =&gt; a</span>
</span><span class='line'>  <span class="c1"># current class =&gt; a&#39;s singleton class</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method1</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;this is a singleton method of instance a&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">method1</span>
</span><span class='line'><span class="c1">#=&gt; this is a singleton method of instance a</span>
</span><span class='line'>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="n">A</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">b</span><span class="o">.</span><span class="n">method1</span>
</span><span class='line'><span class="c1">#=&gt; NoMethodError: undefined method `method1&#39; for #&lt;A:0x007fbc2ced9550&gt;</span>
</span><span class='line'><span class="n">from</span> <span class="p">(</span><span class="n">pry</span><span class="p">):</span><span class="mi">13</span><span class="ss">:in</span> <span class="sb">`&lt;main&gt;&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>如我们所知，因为类本身也是Class类的一个实例，instance_eval也可以用在类上，这个时候就可以在其中定义该类的singleton_method，即为该类的类方法.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 例子三</span>
</span><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">instance_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="nb">self</span>  <span class="c1"># =&gt; A</span>
</span><span class='line'>  <span class="c1"># current class =&gt; A&#39;s singleton class</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method1</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;this is a singleton method of class A&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">method1</span>
</span><span class='line'><span class="c1"># this is a singleton method of class A</span>
</span><span class='line'><span class="c1">#=&gt;  nil</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#=&gt; NoMethodError: undefined method `method1&#39; for #&lt;A:0x007fbc3009e180&gt;</span>
</span><span class='line'><span class="n">from</span> <span class="p">(</span><span class="n">pry</span><span class="p">):</span><span class="mi">11</span><span class="ss">:in</span> <span class="sb">`&lt;main&gt;&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>class_eval</h3>

<p>再来看<code>class_eval</code>，首先从名字可以得到的信息是，class_eval的调用者receiver必须是一个类，而在<code>class_eval</code> <code>block</code>的内部，<code>self</code>即为receiver类本身。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 例子四</span>
</span><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="nb">self</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># =&gt; A</span>
</span></code></pre></td></tr></table></div></figure>


<p>根据这个定义，如果在一个类上调用了class_eval，就可以在其中定义该类的实例方法(instance_method)，例如</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 例子五</span>
</span><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="n">A</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">method1</span>
</span><span class='line'><span class="c1">#=&gt; NoMethodError: undefined method `method1&#39; for &lt;A:0x007fbc29a826f8&gt; from (pry):21:in `&lt;main&gt;&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method1</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;this is a instance method of class A&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">method1</span>
</span><span class='line'><span class="c1">#=&gt; this is a instance method of class A</span>
</span></code></pre></td></tr></table></div></figure>


<p>综合上面例子，我们可得出</p>

<pre><code>1. `instance_eval`必须由instance来调用，可以用来定义单例函数（`singleton_methods`)
2. `class_eval`必须是由class来调用，可以用来定义类的实例方法(`instance_methods`)
</code></pre>

<h2>include and extend</h2>

<p>废话不多说，先看代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 例子六</span>
</span><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;foo method with include...&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Bar</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">foo</span>
</span><span class='line'><span class="c1"># foo method with include...</span>
</span><span class='line'><span class="c1"># =&gt; nil</span>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">foo</span>
</span><span class='line'><span class="c1"># NoMethodError: undefined method `foo&#39; for Bar:Class</span>
</span><span class='line'><span class="c1"># from (pry):75:in `&lt;main&gt;&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Baz</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">foo</span>
</span><span class='line'><span class="c1"># foo method with include...</span>
</span><span class='line'><span class="c1"># =&gt; nil</span>
</span><span class='line'>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">foo</span>
</span><span class='line'><span class="c1"># NoMethodError: undefined method `foo&#39; for #&lt;Baz:0x007f8061dec068&gt;</span>
</span><span class='line'><span class="c1"># from (pry):80:in `&lt;main&gt;&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>由例子我们可以看出，<code>include</code>会把<code>module</code>的方法变成实例方法，<code>extend</code> 会把方法变成类方法。
但是，大多时候我们也可以用<code>include</code>来实现类方法和实例方法，请看以下例子：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 例子七</span>
</span><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="no">ClassMethods</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">bar</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s1">&#39;class method&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s1">&#39;instance method&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Baz</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">bar</span>
</span><span class='line'><span class="c1"># class method</span>
</span><span class='line'><span class="c1"># =&gt; nil</span>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">foo</span>
</span><span class='line'><span class="c1"># instance method</span>
</span><span class='line'><span class="c1"># =&gt; nil</span>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">foo</span>
</span><span class='line'><span class="c1"># NoMethodError: undefined method `foo&#39; for Baz:Class</span>
</span><span class='line'><span class="no">Baz</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">bar</span>
</span><span class='line'><span class="c1"># NoMethodError: undefined method `bar&#39; for #&lt;Baz:0x007fbc30274ab8&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>从例子我们可以看出，<code>include</code>有一个叫<code>included</code>的钩子，正是通过这个钩子，我们可以用<code>include</code>实现添加类方法和实例方法
我们来看看<code>included</code>这个钩子到底做了什么？</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">module</span> <span class="nn">A</span>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">mod</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="nb">self</span><span class="si">}</span><span class="s2"> included in </span><span class="si">#{</span><span class="n">mod</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Enumerable</span>
</span><span class='line'>    <span class="kp">include</span> <span class="n">A</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># A included in Enumerable</span>
</span><span class='line'>  <span class="c1"># =&gt; Enumerable</span>
</span></code></pre></td></tr></table></div></figure>


<p>从代码我们的输出我们可以知道，<code>included</code>类方法作用域<code>self</code>为<code>Module A</code>，并传入<code>include A</code>的<code>receiver Enumerable</code>。然后我们再看看例子七，结合<code>extend</code>与<code>include</code>的理解，就能明白其中的原理所在。</p>

<p>再来看看ActiveSupport::Concern的实现：</p>

<ol>
<li>在没有引入<code>ActiveSupport::Concern</code>之前，我们可以这样进行模块分离</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">module</span> <span class="nn">M</span>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>      <span class="n">base</span><span class="o">.</span><span class="n">extend</span> <span class="no">ClassMethods</span>
</span><span class='line'>      <span class="n">base</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">scope</span> <span class="ss">:disabled</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">disabled</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="kp">include</span> <span class="no">InstanceMethods</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">say_hello</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;say hello&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">module</span> <span class="nn">InstanceMethods</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">say_no</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;say no&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>从代码可知，通过<code>extend</code>和<code>class_eval</code>为<code>base</code>定义了<code>ClassMethods</code>里面的类方法，通过<code>include</code> 为<code>base</code>定义了<code>InstanceMethods</code>里面的实力方法。</p>

<p>当我们引入<code>ActiveSupport::Concern</code>之后，以上例子我们可以这样写:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;active_support/concern&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">M</span>
</span><span class='line'>    <span class="kp">extend</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Concern</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">included</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">scope</span> <span class="ss">:disabled</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">disabled</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="kp">include</span> <span class="no">InstanceMethods</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">say_hello</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;say hello&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">module</span> <span class="nn">InstanceMethods</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">say_no</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="s2">&quot;say no&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>最后，我们再来看看[ActiveSupport::Concern] (<a href="https://github.com/rails/rails/blob/master/activesupport/lib/active_support/concern.rb">https://github.com/rails/rails/blob/master/activesupport/lib/active_support/concern.rb</a>),是不是就很好理解了？</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Concern</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">MultipleIncludedBlocks</span> <span class="o">&lt;</span> <span class="no">StandardError</span> <span class="c1">#:nodoc:</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>        <span class="k">super</span> <span class="s2">&quot;Cannot define multiple &#39;included&#39; blocks for a Concern&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">extended</span><span class="p">(</span><span class="n">base</span><span class="p">)</span> <span class="c1">#:nodoc:</span>
</span><span class='line'>      <span class="n">base</span><span class="o">.</span><span class="n">instance_variable_set</span><span class="p">(</span><span class="ss">:@_dependencies</span><span class="p">,</span> <span class="o">[]</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">append_features</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">base</span><span class="o">.</span><span class="n">instance_variable_defined?</span><span class="p">(</span><span class="ss">:@_dependencies</span><span class="p">)</span>
</span><span class='line'>        <span class="n">base</span><span class="o">.</span><span class="n">instance_variable_get</span><span class="p">(</span><span class="ss">:@_dependencies</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
</span><span class='line'>        <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="k">return</span> <span class="kp">false</span> <span class="k">if</span> <span class="n">base</span> <span class="o">&lt;</span> <span class="nb">self</span>
</span><span class='line'>        <span class="vi">@_dependencies</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">dep</span><span class="o">|</span> <span class="n">base</span><span class="o">.</span><span class="n">include</span><span class="p">(</span><span class="n">dep</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>        <span class="k">super</span>
</span><span class='line'>        <span class="n">base</span><span class="o">.</span><span class="n">extend</span> <span class="nb">const_get</span><span class="p">(</span><span class="ss">:ClassMethods</span><span class="p">)</span> <span class="k">if</span> <span class="nb">const_defined?</span><span class="p">(</span><span class="ss">:ClassMethods</span><span class="p">)</span>
</span><span class='line'>        <span class="n">base</span><span class="o">.</span><span class="n">class_eval</span><span class="p">(</span><span class="o">&amp;</span><span class="vi">@_included_block</span><span class="p">)</span> <span class="k">if</span> <span class="n">instance_variable_defined?</span><span class="p">(</span><span class="ss">:@_included_block</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">included</span><span class="p">(</span><span class="n">base</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">base</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>        <span class="k">raise</span> <span class="no">MultipleIncludedBlocks</span> <span class="k">if</span> <span class="n">instance_variable_defined?</span><span class="p">(</span><span class="ss">:@_included_block</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="vi">@_included_block</span> <span class="o">=</span> <span class="n">block</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="k">super</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">class_methods</span><span class="p">(</span><span class="o">&amp;</span><span class="n">class_methods_module_definition</span><span class="p">)</span>
</span><span class='line'>      <span class="n">mod</span> <span class="o">=</span> <span class="nb">const_defined?</span><span class="p">(</span><span class="ss">:ClassMethods</span><span class="p">,</span> <span class="kp">false</span><span class="p">)</span> <span class="p">?</span>
</span><span class='line'>        <span class="nb">const_get</span><span class="p">(</span><span class="ss">:ClassMethods</span><span class="p">)</span> <span class="p">:</span>
</span><span class='line'>        <span class="nb">const_set</span><span class="p">(</span><span class="ss">:ClassMethods</span><span class="p">,</span> <span class="no">Module</span><span class="o">.</span><span class="n">new</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">mod</span><span class="o">.</span><span class="n">module_eval</span><span class="p">(</span><span class="o">&amp;</span><span class="n">class_methods_module_definition</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Rails4.1 之后，Module还加入了<a href="http://api.rubyonrails.org/v4.1.0/classes/Module/Concerning.html">Concerning</a>方法</p>

<h2>Concerning</h2>

<p>我们先来看看细化concern的几种方法</p>

<ul>
<li>通过注释</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Todo</span>
</span><span class='line'>  <span class="c1"># Other todo implementation</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">## Event tracking</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:events</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before_create</span> <span class="ss">:track_creation</span>
</span><span class='line'>  <span class="n">after_destroy</span> <span class="ss">:track_deletion</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">track_creation</span>
</span><span class='line'>      <span class="c1"># ...</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>通过<code>ActiveSupport::Concern</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Todo</span>
</span><span class='line'>  <span class="c1"># Other todo implementation</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">EventTracking</span>
</span><span class='line'>    <span class="kp">extend</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Concern</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">included</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">has_many</span> <span class="ss">:events</span>
</span><span class='line'>      <span class="n">before_create</span> <span class="ss">:track_creation</span>
</span><span class='line'>      <span class="n">after_destroy</span> <span class="ss">:track_deletion</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="kp">private</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">track_creation</span>
</span><span class='line'>        <span class="c1"># ...</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">EventTracking</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>通过<code>concerning</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Todo</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="c1"># Other todo implementation</span>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">concerning</span> <span class="ss">:EventTracking</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">included</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">has_many</span> <span class="ss">:events</span>
</span><span class='line'>      <span class="n">before_create</span> <span class="ss">:track_creation</span>
</span><span class='line'>      <span class="n">after_destroy</span> <span class="ss">:track_deletion</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="kp">private</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">track_creation</span>
</span><span class='line'>        <span class="c1"># ...</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Todo</span><span class="o">.</span><span class="n">ancestors</span>
</span><span class='line'><span class="c1"># [Todo,Todo::EventTracking,...]</span>
</span></code></pre></td></tr></table></div></figure>


<p>总得来说，<code>concerning</code>主要用于切分比较小的model
另外，还有还提供了类似的<code>concern</code>等方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">concern</span> <span class="ss">:EventTracking</span> <span class="k">do</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">is</span> <span class="n">equivalent</span> <span class="n">to</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">EventTracking</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">Concern</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>最后贴上自用 <a href="https://gist.github.com/Justin-lu/156bd4a1cba1c507e485">sublime snippet</a>,但是我是Vim党.</p>

<p>Reference:
<a href="http://www.railstips.org/blog/archives/2009/05/15/include-vs-extend-in-ruby/">http://www.railstips.org/blog/archives/2009/05/15/include-vs-extend-in-ruby/</a>
<a href="https://github.com/rails/rails/blob/master/activesupport/lib/active_support/concern.rb">https://github.com/rails/rails/blob/master/activesupport/lib/active_support/concern.rb</a>
<a href="https://github.com/rails/rails/blob/master/activesupport/lib/active_support/concern.rb">https://github.com/rails/rails/blob/master/activesupport/lib/active_support/concern.rb</a></p>

<hr />

<p>补充：</p>

<h2>ActiveSupport::Concern#append_features</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">append_features</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">base</span><span class="o">.</span><span class="n">instance_variable_defined?</span><span class="p">(</span><span class="ss">:@_dependencies</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">instance_variable_get</span><span class="p">(</span><span class="ss">:@_dependencies</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="nb">self</span>
</span><span class='line'>    <span class="k">return</span> <span class="kp">false</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="k">return</span> <span class="kp">false</span> <span class="k">if</span> <span class="n">base</span> <span class="o">&lt;</span> <span class="nb">self</span>
</span><span class='line'>    <span class="vi">@_dependencies</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">dep</span><span class="o">|</span> <span class="n">base</span><span class="o">.</span><span class="n">include</span><span class="p">(</span><span class="n">dep</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">super</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">extend</span> <span class="nb">const_get</span><span class="p">(</span><span class="ss">:ClassMethods</span><span class="p">)</span> <span class="k">if</span> <span class="nb">const_defined?</span><span class="p">(</span><span class="ss">:ClassMethods</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">class_eval</span><span class="p">(</span><span class="o">&amp;</span><span class="vi">@_included_block</span><span class="p">)</span> <span class="k">if</span> <span class="n">instance_variable_defined?</span><span class="p">(</span><span class="ss">:@_included_block</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>append_features</code>也是module的一个callback，会在include之后，为当前class添加module的变量，常量，方法等。append_features 会先与included 被调用，详见：<a href="http://apidock.com/ruby/Module/append_features">append_features</a>
上面的代码中，如@neverlandxy_naix所说的一样，正是通过递归的方法处理多重嵌套</p>

<p>首先看到一个<code>if</code>判断,这里判断当前类(base)是否定义了<code>@_dependencies</code>，如果被定义，则把当前module加入<code>@_dependencies</code>。怎么说呢？我们再来看看</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">extended</span><span class="p">(</span><span class="n">base</span><span class="p">)</span> <span class="c1">#:nodoc:</span>
</span><span class='line'>  <span class="n">base</span><span class="o">.</span><span class="n">instance_variable_set</span><span class="p">(</span><span class="ss">:@_dependencies</span><span class="p">,</span> <span class="o">[]</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>extended</code>类似于<code>included</code>,具体用法见<a href="http://ruby-doc.org/core-2.2.0/Module.html#method-i-extended">extended</a>
看完<code>extended</code>的用法，我们知道，如果当前类<code>extend</code>了<code>ActiveSupport::Concern</code>,则<code>@_dependencies</code>会被定义。</p>

<p>第二个if判断，判断当前类是否继承于当前模块，如果是，则不需要做其他操作，如果不是，则说明当前类既不是当前模块的子类，也没有<code>extend</code> <code>ActiveSupport::Concern</code>。也就是我们最终要<code>include</code>当前模块的类，此时，当前类<code>include</code>当前模块所有依赖<code>@_dependencies</code>,并定义<code>ClassMethods</code>和<code>included</code>block里面的方法。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Scopes 预加载]]></title>
    <link href="http://justin-lu.github.io/blog/2015/07/05/rails-scopes-yu-jia-zai/"/>
    <updated>2015-07-05T21:48:00+08:00</updated>
    <id>http://justin-lu.github.io/blog/2015/07/05/rails-scopes-yu-jia-zai</id>
    <content type="html"><![CDATA[<p>前几天在<a href="http://rubyweekly.com/">rubyweekly</a>里面看到一篇文章，感觉写得不错。拿出来分享一下。<a href="http://www.justinweiss.com/%0Ablog/2015/06/23/how-to-preload-rails-scopes/?utm_source=rubyweekly&amp;utm_medium=email">原文</a>更精彩</p>

<!-- More -->


<h1>scope 会造成N+1查询</h1>

<p>作为一个Rails开发者，我们经常使用<a href="http://guides.rubyonrails.org/active_record_querying.html#scopes">scope</a>来做查询，以简化你的代码，如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Review</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:restaurant</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:positive</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="s2">&quot;rating &gt; 3.0&quot;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">001</span><span class="p">:</span><span class="mi">0</span><span class="o">&gt;</span> <span class="no">Restaurant</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">reviews</span><span class="o">.</span><span class="n">positive</span><span class="o">.</span><span class="n">count</span>
</span><span class='line'>  <span class="no">Restaurant</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">4</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span>  <span class="sb">`restaurants`</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="sb">`restaurants`</span>  <span class="no">ORDER</span> <span class="no">BY</span> <span class="sb">`restaurants`</span><span class="o">.</span><span class="n">`</span><span class="nb">id</span><span class="sb">` ASC LIMIT 1</span>
</span><span class='line'><span class="sb">   (0.6ms)  SELECT COUNT(*) FROM `</span><span class="n">reviews</span><span class="sb">` WHERE `</span><span class="n">reviews</span><span class="sb">`.`</span><span class="n">restaurant_id</span><span class="sb">` = 1 AND (rating &gt; 3.0)</span>
</span><span class='line'><span class="sb">=&gt; 5</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是，当你一不小心，这将严重的影响你应用的性能。
为什么呢？因为使用<code>scope</code>进行定义的查询并不会被预加载。
假设你要查询一些<code>restaurants</code>所有<code>positive reviews</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">001</span><span class="p">:</span><span class="mi">0</span><span class="o">&gt;</span> <span class="n">restauraunts</span> <span class="o">=</span> <span class="no">Restaurant</span><span class="o">.</span><span class="n">first</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">002</span><span class="p">:</span><span class="mi">0</span><span class="o">&gt;</span> <span class="n">restauraunts</span><span class="o">.</span><span class="n">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">restaurant</span><span class="o">|</span>
</span><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">003</span><span class="p">:</span><span class="mi">1</span><span class="o">*</span>   <span class="s2">&quot;</span><span class="si">#{</span><span class="n">restaurant</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2">: </span><span class="si">#{</span><span class="n">restaurant</span><span class="o">.</span><span class="n">reviews</span><span class="o">.</span><span class="n">positive</span><span class="o">.</span><span class="n">length</span><span class="si">}</span><span class="s2"> positive reviews.&quot;</span>
</span><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">004</span><span class="p">:</span><span class="mi">1</span><span class="o">&gt;</span> <span class="k">end</span>
</span><span class='line'>  <span class="no">Review</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">6</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span> <span class="sb">`reviews`</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="sb">`reviews`</span> <span class="no">WHERE</span> <span class="sb">`reviews`</span><span class="o">.</span><span class="n">`restaurant_id</span><span class="sb">` = 1 AND (rating &gt; 3.0)</span>
</span><span class='line'><span class="sb">  Review Load (0.5ms)  SELECT `</span><span class="n">reviews</span><span class="sb">`.* FROM `</span><span class="n">reviews</span><span class="sb">` WHERE `</span><span class="n">reviews</span><span class="sb">`.`</span><span class="n">restaurant_id</span><span class="sb">` = 2 AND (rating &gt; 3.0)</span>
</span><span class='line'><span class="sb">  Review Load (0.7ms)  SELECT `</span><span class="n">reviews</span><span class="sb">`.* FROM `</span><span class="n">reviews</span><span class="sb">` WHERE `</span><span class="n">reviews</span><span class="sb">`.`</span><span class="n">restaurant_id</span><span class="sb">` = 3 AND (rating &gt; 3.0)</span>
</span><span class='line'><span class="sb">  Review Load (0.7ms)  SELECT `</span><span class="n">reviews</span><span class="sb">`.* FROM `</span><span class="n">reviews</span><span class="sb">` WHERE `</span><span class="n">reviews</span><span class="sb">`.`</span><span class="n">restaurant_id</span><span class="sb">` = 4 AND (rating &gt; 3.0)</span>
</span><span class='line'><span class="sb">  Review Load (0.7ms)  SELECT `</span><span class="n">reviews</span><span class="sb">`.* FROM `</span><span class="n">reviews</span><span class="sb">` WHERE `</span><span class="n">reviews</span><span class="sb">`.`</span><span class="n">restaurant_id</span><span class="sb">` = 5 AND (rating &gt; 3.0)</span>
</span><span class='line'><span class="sb">=&gt; [&quot;Judd&#39;s Pub: 5 positive reviews.&quot;, &quot;Felix&#39;s Nightclub: 6 positive reviews.&quot;, &quot;Mabel&#39;s Burrito Shack: 7 positive reviews.&quot;, &quot;Kendall&#39;s Burrito Shack: 2 positive reviews.&quot;, &quot;Elisabeth&#39;s Deli: 15 positive reviews.&quot;]</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们可以看到，<code>scope:positive</code>并没有被缓存起来，这明显的是一个<code>N+1</code>查询。</p>

<h1>用associations代替scopes</h1>

<p>我们可以通过用associations代替scopes，来避免这个问题。请看下面例子：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Restaurant</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:reviews</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>当我们查看这个<a href="http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html">文档</a>时,我们可以看到，<code>has_many</code>允许我们添加自定义查询</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Restaurant</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:reviews</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:positive_reviews</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="s2">&quot;rating &gt; 3.0&quot;</span><span class="p">)</span> <span class="p">},</span> <span class="ss">class_name</span><span class="p">:</span> <span class="s2">&quot;Review&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>但我们可以这样子获取一个<code>restaurant</code>的所有<code>positive_reviews</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">001</span><span class="p">:</span><span class="mi">0</span><span class="o">&gt;</span> <span class="no">Restaurant</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">positive_reviews</span><span class="o">.</span><span class="n">count</span>
</span><span class='line'>  <span class="no">Restaurant</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span>  <span class="sb">`restaurants`</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="sb">`restaurants`</span>  <span class="no">ORDER</span> <span class="no">BY</span> <span class="sb">`restaurants`</span><span class="o">.</span><span class="n">`</span><span class="nb">id</span><span class="sb">` ASC LIMIT 1</span>
</span><span class='line'><span class="sb">   (0.4ms)  SELECT COUNT(*) FROM `</span><span class="n">reviews</span><span class="sb">` WHERE `</span><span class="n">reviews</span><span class="sb">`.`</span><span class="n">restaurant_id</span><span class="sb">` = 1 AND (rating &gt; 3.0)</span>
</span><span class='line'><span class="sb">=&gt; 5</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后我们就可以通过<code>include</code>来预加载这个关联关系了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">001</span><span class="p">:</span><span class="mi">0</span><span class="o">&gt;</span> <span class="n">restauraunts</span> <span class="o">=</span> <span class="no">Restaurant</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:positive_reviews</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Restaurant</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span>  <span class="no">SELECT</span>  <span class="sb">`restaurants`</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="sb">`restaurants`</span>  <span class="no">ORDER</span> <span class="no">BY</span> <span class="sb">`restaurants`</span><span class="o">.</span><span class="n">`</span><span class="nb">id</span><span class="sb">` ASC LIMIT 5</span>
</span><span class='line'><span class="sb">  Review Load (1.2ms)  SELECT `</span><span class="n">reviews</span><span class="sb">`.* FROM `</span><span class="n">reviews</span><span class="sb">` WHERE (rating &gt; 3.0) AND `</span><span class="n">reviews</span><span class="sb">`.`</span><span class="n">restaurant_id</span><span class="sb">` IN (1, 2, 3, 4, 5)</span>
</span><span class='line'><span class="sb">irb(main):002:0&gt; restauraunts.map do |restaurant|</span>
</span><span class='line'><span class="sb">irb(main):003:1*   &quot;</span><span class="si">#{</span><span class="n">restaurant</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="sb">: </span><span class="si">#{</span><span class="n">restaurant</span><span class="o">.</span><span class="n">positive_reviews</span><span class="o">.</span><span class="n">length</span><span class="si">}</span><span class="sb"> positive reviews.&quot;</span>
</span><span class='line'><span class="sb">irb(main):004:1&gt; end</span>
</span><span class='line'><span class="sb">=&gt; [&quot;Judd&#39;s Pub: 5 positive reviews.&quot;, &quot;Felix&#39;s Nightclub: 6 positive reviews.&quot;, &quot;Mabel&#39;s Burrito Shack: 7 positive reviews.&quot;, &quot;Kendall&#39;s Burrito Shack: 2 positive reviews.&quot;, &quot;Elisabeth&#39;s Deli: 15 positive reviews.&quot;]</span>
</span></code></pre></td></tr></table></div></figure>


<p>至此，6个Sql查询变成2个</p>

<h1>消除重复</h1>

<p>现在我们定义了一个<code>scope:positive</code>和一个关系<code>has_many :positive_reviews</code>，我们可以看到，它们是重复的。我们可以简单的消除这个DRY.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Review</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:restaurant</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:positive</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="s2">&quot;rating &gt; 3.0&quot;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Restaurant</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:reviews</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:positive_reviews</span><span class="p">,</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="n">positive</span> <span class="p">},</span> <span class="ss">class_name</span><span class="p">:</span> <span class="s2">&quot;Review&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>至此，我们可以知道<code>scope</code>虽然好用，但是当你发现的代码出现以上问题时，简单的修改，能减少许多<code>sql</code>查询</p>

<p>文章没有逐字翻译，如有问题，麻烦指出。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Oauth2.0]]></title>
    <link href="http://justin-lu.github.io/blog/2014/05/30/oauth2-dot-0-shi-yong-ji-qiao/"/>
    <updated>2014-05-30T15:13:00+08:00</updated>
    <id>http://justin-lu.github.io/blog/2014/05/30/oauth2-dot-0-shi-yong-ji-qiao</id>
    <content type="html"><![CDATA[<p>Oauth2.0 验证流程简单介绍(使用doorkeeper)</p>

<!-- More -->


<h1>Oauth 2.0</h1>

<ol>
<li><p>client 获取 provider 提供的资源</p></li>
<li><p>流程:</p></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>+----------+
</span><span class='line'>| Resource |
</span><span class='line'>|   Owner  |
</span><span class='line'>|          |
</span><span class='line'>+----------+
</span><span class='line'>     ^
</span><span class='line'>     |
</span><span class='line'>    (B)
</span><span class='line'>+----|-----+          Client Identifier      +---------------+
</span><span class='line'>|         -+----(A)-- & Redirection URI ----&gt;|               |
</span><span class='line'>|  User-   |                                 | Authorization |
</span><span class='line'>|  Agent  -+----(B)-- User authenticates ---&gt;|     Server    |
</span><span class='line'>|          |                                 |               |
</span><span class='line'>|         -+----(C)-- Authorization Code ---&lt;|               |
</span><span class='line'>+-|----|---+                                 +---------------+
</span><span class='line'>  |    |                                         ^      v
</span><span class='line'> (A)  (C)                                        |      |
</span><span class='line'>  |    |                                         |      |
</span><span class='line'>  ^    v                                         |      |
</span><span class='line'>+---------+                                      |      |
</span><span class='line'>|         |&gt;---(D)-- Authorization Code ---------'      |
</span><span class='line'>|  Client |          & Redirection URI                  |
</span><span class='line'>|         |                                             |
</span><span class='line'>|         |&lt;---(E)----- Access Token -------------------'
</span><span class='line'>+---------+       ( Optional Refresh Token)</span></code></pre></td></tr></table></div></figure>


<p>A）用户访问客户端，后者将前者导向认证服务器。
B）用户选择是否给予客户端授权。
C）假设用户给予授权，认证服务器将用户导向客户端事先指定的"重定向URI"（redirection URI），同时附上一个授权码。
D）客户端收到授权码，附上早先的"重定向URI"，向认证服务器申请令牌。这一步是在客户端的后台的服务器上完成的，对用户不可见。
E）认证服务器核对了授权码和重定向URI，确认无误后，向客户端发送访问令牌（access token）和更新令牌（refresh token）。</p>

<ol>
<li>Resource Owner -> devise</li>
<li>API -> Grape</li>
<li>Provider -> doorkeeper</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">doorkeeper_for</span> <span class="ss">:all</span>                 <span class="c1"># Require access token for all actions</span>
</span><span class='line'>  <span class="n">doorkeeper_for</span> <span class="ss">:all</span><span class="p">,</span> <span class="ss">except</span><span class="p">:</span> <span class="ss">:index</span> <span class="c1"># All actions except index</span>
</span><span class='line'>  <span class="n">doorkeeper_for</span> <span class="ss">:index</span><span class="p">,</span> <span class="ss">:show</span>        <span class="c1"># Only for index and show action</span>
</span><span class='line'>  <span class="n">doorkeeper_for</span> <span class="ss">:create</span><span class="p">,</span> <span class="ss">:scopes</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="ss">:write</span><span class="o">]</span> <span class="c1">#Only for create action and writable</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>client</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">OmniAuth</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Strategies</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">Doorkeeper</span> <span class="o">&lt;</span> <span class="no">OmniAuth</span><span class="o">::</span><span class="no">Strategies</span><span class="o">::</span><span class="no">OAuth2</span>
</span><span class='line'>      <span class="n">option</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:doorkeeper</span>
</span><span class='line'>      <span class="n">option</span> <span class="ss">:client_options</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>        <span class="ss">:site</span> <span class="o">=&gt;</span> <span class="s2">&quot;http://localhost:8090/&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="ss">:authorize_path</span> <span class="o">=&gt;</span> <span class="s2">&quot;/oauth/authorize&quot;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">uid</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">raw_info</span><span class="o">[</span><span class="s2">&quot;id&quot;</span><span class="o">]</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">info</span> <span class="k">do</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>          <span class="ss">:email</span> <span class="o">=&gt;</span> <span class="n">raw_info</span><span class="o">[</span><span class="s2">&quot;email&quot;</span><span class="o">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">raw_info</span>
</span><span class='line'>        <span class="vi">@raw_info</span> <span class="o">||=</span> <span class="n">access_token</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;/api/v1/me.json&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">parsed</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>生成client和access_token</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1"># get or create an client with OAuth2</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">doorkeeper_oauth_client</span>
</span><span class='line'>    <span class="vi">@client</span> <span class="o">||=</span> <span class="no">OAuth2</span><span class="o">::</span><span class="no">Client</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">DOORKEEPER_APP_ID</span><span class="p">,</span> <span class="no">DOORKEEPER_APP_SECRET</span><span class="p">,</span> <span class="ss">:site</span> <span class="o">=&gt;</span> <span class="no">DOORKEEPER_APP_URL</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># get or create an AccessToken</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">doorkeeper_access_token</span>
</span><span class='line'>    <span class="vi">@token</span> <span class="o">||=</span> <span class="no">OAuth2</span><span class="o">::</span><span class="no">AccessToken</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">doorkeeper_oauth_client</span><span class="p">,</span> <span class="n">current_user</span><span class="o">.</span><span class="n">doorkeeper_access_token</span><span class="p">)</span> <span class="k">if</span> <span class="n">current_user</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过<code>access_token</code>来获取api数据</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@order</span> <span class="o">=</span> <span class="n">doorkeeper_access_token</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&quot;/api/v1/orders&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">parsed</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[让zsh为你的Terminal带来不一样的感觉]]></title>
    <link href="http://justin-lu.github.io/blog/2013/10/27/rang-zshwei-ni-de-terminaldai-lai-bu-%5B%3F%5D-yang-de-gan-jue/"/>
    <updated>2013-10-27T15:28:00+08:00</updated>
    <id>http://justin-lu.github.io/blog/2013/10/27/rang-zshwei-ni-de-terminaldai-lai-bu-[?]-yang-de-gan-jue</id>
    <content type="html"><![CDATA[<p>刚接触Mac,发现有zsh这一神器</p>

<!-- More -->


<blockquote><p>使用Git并且在多个分支下开发的同学可能知道，当我们老是在不同分支下切换的时候，有时候会忘记自己在哪个分支，导致我们提交的内容混乱，以前在Ubuntu下，是直接修改<code>.bashrc</code>，让其显示分支名称
本打算用同样的方法修改OS X系统，让其显示分支名，却让我发现了Zsh</p></blockquote>

<hr />

<h2>使用<code>oh-my-zsh</code></h2>

<h3>使用<code>oh-my-zsh</code>的优点</h3>

<ul>
<li>各种补全

<ul>
<li>目录补全可以只输入目录的中间部分进行补全</li>
<li>命令可以补全参数,并且可以显示参数对应的说明</li>
</ul>
</li>
<li>各种主题</li>
<li>目录切换:

<ul>
<li>d : 显示最近使用过的几个目录,按1-9可以直接切换过去</li>
<li>1-9 : 切换至最近使用过的前n个目录</li>
<li>.. 等于 cd ..</li>
<li>… 等于 cd ../..</li>
<li>mcd xxx 等于 mkdir xxx &amp; cd xxx</li>
<li>使用~xxx快捷目录来通过 cd ~xxx 甚至是 ~xxx 快速进入对应的目录</li>
</ul>
</li>
<li>各种插件:

<ul>
<li>extract 直接extract filename ,支持各种tar.gz, bz2, 7z等各种压缩格式</li>
<li>terminalapp 让OS X Lion下的Terminal 启动时打开上次的目录</li>
</ul>
</li>
<li>osx

<ul>
<li>pfd 打印finder的当前路径</li>
<li>cdf cd到finder的当前路径</li>
<li>pushdf pushd 到finder的当前路径</li>
</ul>
</li>
</ul>


<h3>安装<code>oh-my-zsh</code></h3>

<h4>自动安装：</h4>

<blockquote><p>当然，如果你信任这个开源项目作者的话你可以尝试使用自动安装的方法。</p></blockquote>

<p><code>wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</code></p>

<h4>手动安装：</h4>

<ul>
<li>克隆这个项目到本地(前提是你得有装git)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="nb">clone</span> <span class="ss">git</span><span class="p">:</span><span class="sr">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">robbyrussell</span><span class="o">/</span><span class="n">oh</span><span class="o">-</span><span class="n">my</span><span class="o">-</span><span class="n">zsh</span><span class="o">.</span><span class="n">git</span> <span class="o">~</span><span class="sr">/.oh-my-zsh</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>创建一个zsh的配置文件
注意:如果你已经有一个~/.zshrc文件的话，建议你先做备份。使用以下命令</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cp</span> <span class="o">~</span><span class="sr">/.zshrc ~/</span><span class="o">.</span><span class="n">zshrc</span><span class="o">.</span><span class="n">orig</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后开始创建zsh的配置文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cp</span> <span class="o">~</span><span class="sr">/.oh-my-zsh/</span><span class="n">templates</span><span class="o">/</span><span class="n">zshrc</span><span class="o">.</span><span class="n">zsh</span><span class="o">-</span><span class="n">template</span> <span class="o">~</span><span class="sr">/.zshrc</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>设置zsh为你的默认的shell</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">chsh</span> <span class="o">-</span><span class="n">s</span> <span class="sr">/bin/</span><span class="n">zsh</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>因为zsh和bash是兼容的，所以，你可以把你<code>.bashrc</code>或者<code>.bashrc_profile</code>里面的内容直接黏贴到<code>.zshrc</code>里面</p></blockquote>

<ul>
<li><a href="https://github.com/robbyrussell/oh-my-zsh">github网址</a></li>
<li><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/themes">各种主题</a></li>
</ul>


<h4>可能遇到的问题</h4>

<blockquote><p>习惯了<code>UTF-8</code>编码的同学，可能需要在<code>.zshrc</code>里面添加如下代码：</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">export</span> <span class="no">LANG</span><span class="o">=</span><span class="n">en_US</span><span class="o">.</span><span class="n">UTF</span><span class="o">-</span><span class="mi">8</span> <span class="n">export</span> <span class="no">LC_ALL</span><span class="o">=</span><span class="n">en_US</span><span class="o">.</span><span class="n">UTF</span><span class="o">-</span><span class="mi">8</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从Vim到Sublime Text]]></title>
    <link href="http://justin-lu.github.io/blog/2013/10/26/cong-vimdao-sublime-text/"/>
    <updated>2013-10-26T19:32:00+08:00</updated>
    <id>http://justin-lu.github.io/blog/2013/10/26/cong-vimdao-sublime-text</id>
    <content type="html"><![CDATA[<p>讲述我从vim转化到sublime text的过程</p>

<!-- More -->


<h3>为什么选择Sublime Text</h3>

<blockquote><p>使用Gvim已经三年了，一直很喜欢Vim里面的hjkl等快捷键和多种模式，以致于在Chrome上安装Vimium插件，让我能够永远的脱离鼠标，很喜欢这种感觉。
但是，最近，由于工作需要，在Mac上进行开发，于是装上了MacVim，但是，以前一直用的好好地Vim出现bug了，无法直接双击打开文件（后来发下在终端下打开gvim就可以）加上之前一直听师兄说Sublime Text很好用，所以，我试着Google些资料，然后开始各种尝试&hellip;</p></blockquote>

<h3>Sublime Text 下开启Vim模式</h3>

<blockquote><p>对于一个习惯了Vim操作方式的程序员，这无疑是一个很好的消息，一下是配置方式</p></blockquote>

<ul>
<li>按下<code>Shift + Command + P</code>,调出命令面板</li>
<li>输入<code>setting user</code>,打开用户配置文件</li>
<li>如果之前对配置过，此时应该是一个空文件，把一下代码贴入</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;ignored_packages&quot;</span><span class="o">:</span> <span class="p">[]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>保存这个文件，按下ESC键，这时候，你熟悉的Vim命令就回来啦&hellip;</li>
</ul>


<h3>最新版Sublime Text 3 ,点击<a href="http://www.sublimetext.com/3">这里</a>下载</h3>

<h3>Sublime Text 常用快捷键</h3>

<h4>打开/前往</h4>

<ul>
<li>⌘T   前往文件(和⌘P一样）</li>
<li>⌘⌃P  前往项目</li>
<li>⌘R   前往 method(markdown下，跳转至标题)</li>
<li>⌘⇧P  命令提示</li>
<li>⌃G   前往行</li>
<li>⌘KB  开关侧栏</li>
<li>⌃ `  python 控制台</li>
<li>⌘⇧N  新建窗口</li>
</ul>


<h4>编辑(会用Vim的同学，可以开启Vim模式，和以前一样)</h4>

<ul>
<li>⌘L   选择行 (重复按下将下一行加入选择)</li>
<li>⌘D   选择词 (重复按下时多重选择相同的词进行多重编辑)</li>
<li>⌃⇧M  选择括号内的内容</li>
<li>⌘⇧↩  在当前行前插入新行</li>
<li>⌘↩   在当前行后插入新行</li>
<li>⌃⇧K  删除行</li>
<li>⌘KK  从光标处删除至行尾</li>
<li>⌘K⌫  从光标处删除至行首</li>
<li>⌘⇧D  复制(多)行</li>
<li>⌘J   合并(多)行</li>
<li>⌘KU  改为大写</li>
<li>⌘KL  改为小写</li>
<li>⌘ /  注释</li>
<li>⌘⌥ /   块注释</li>
<li>⌘Y   恢复或重复</li>
<li>⌘⇧V  粘贴并自动缩进</li>
<li>⌃ space  自动完成(重复按下选择下一个提示)</li>
<li>⌃M   跳转至对应的括号</li>
<li>⌘U   软撤销（可撤销光标移动）</li>
<li>⌘⇧U  软重做（可重做光标移动）</li>
</ul>


<h4>XML/HTML</h4>

<ul>
<li>⌘⇧A  选择标签内的内容</li>
<li>⌘⌥ .   闭合当前标签</li>
</ul>


<h4>查找/替换</h4>

<ul>
<li>⌘F   查找</li>
<li>⌘⌥F  替换</li>
<li>⌘⌥G  查找下一个符合当前所选的内容</li>
<li>⌘⌃G  查找所有符合当前所选的内容进行多重编辑</li>
<li>⌘⇧F  在所有打开的文件中进行查找</li>
</ul>


<h4>拆分窗口/标签页</h4>

<ul>
<li>⌘⌥1  单列</li>
<li>⌘⌥2  双列</li>
<li>⌘⌥5  网格 (4组)</li>
<li>⌃[1,2,3,4]   焦点移动至相应组</li>
<li>⌃⇧[1,2,3,4]  将当前文件移动至相应组</li>
<li>⌘[1,2,3…]  选择相应标签页</li>
</ul>


<h4>书签</h4>

<ul>
<li>⌘F2  添加/去除书签</li>
<li>F2   下一个书签</li>
<li>⇧F2  前一个书签</li>
<li>⌘⇧F2   清除书签</li>
</ul>


<h4>标记</h4>

<ul>
<li>⌘K space   设置标记</li>
<li>⌘KW  从光标位置删除至标记</li>
<li>⌘KA  从光标位置选择至标记</li>
<li>⌘KG  清除标记</li>
</ul>


<hr />

<blockquote><blockquote><p>你也可以通过按住<code>command+shift+p</code>,输入<code>keybinding user</code>，往里面添加自定义快捷键。例如：</p></blockquote></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">[</span>
</span><span class='line'>    <span class="p">{</span> <span class="s2">&quot;keys&quot;</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;ctrl+alt+p&quot;</span><span class="p">],</span> <span class="s2">&quot;command&quot;</span><span class="o">:</span> <span class="s2">&quot;markdown_preview&quot;</span><span class="p">,</span> <span class="s2">&quot;args&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;target&quot;</span><span class="o">:</span> <span class="s2">&quot;browser&quot;</span><span class="p">}</span> <span class="p">}</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>安装包控制(Package Control)</h3>

<blockquote><p>我么可以通过Sublime Package Control来进行插件的安装，卸载，升级
安装方法如下：</p>

<blockquote><ol>
<li>打开Sublime Text ，按住 ctrl + `，打开Console，通常这个快捷加可能会冲突，需要重新修改</li>
<li>将以下代码粘贴至控制台</li>
</ol>
</blockquote></blockquote>

<p>  import urllib.request,os; pf = &lsquo;Package Control.sublime-package&rsquo;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &lsquo;wb&rsquo;).write(urllib.request.urlopen( &lsquo;<a href="http://sublime.wbond.net/">http://sublime.wbond.net/</a>&rsquo; + pf.replace(&lsquo; &rsquo;,&lsquo;%20&rsquo;)).read())</p>

<blockquote><blockquote><ol>
<li>重启Sbulime,如果在Preferences -> Package Settings中见到Package Control这一项，就说明安装成功了。

<h3>Sublime Text 常用插件</h3>

<h4>MarkdownEditing</h4>

<p>如果安装了 Package Control，可以通过添加 repository，输入<code>http://github.com/ttscoff/MarkdownEditing</code> 然后在 Install Package 里找到 MarkdownEditing。
当然也可以手动 Clone 这个 repo 到 ~/Library/Application Support/Sublime Text 3/Packages。</p></li>
</ol>
</blockquote>

<p>MarkdownEditing 从视觉和便捷性上针对 Markdown 文档的编辑进行了一系列的优化</p></blockquote>

<pre><code>*  安装后针对 md\mdown\mmd\txt 格式文件启用插件。颜色方案仿 Byword 及 iA writer。
*  自动匹配星号（*）、下划线（_）及反引号（`），选中文本按下以上符号能自动在所选文本前后添加配对的符号，方便粗体、斜体和代码框的输入。
*  直接输入配对的符号后按下退格键（backspace），则两个符号都会被删除；直接输入配对的符号后按下空格键，则会自动删除后一个。
*  对“选中文字后输入左括号”这一动作进行了调整，以便插入 markdown 链接。
*  拷贝一个链接，选中文本后按下 ⌘⌥V 会自动插入内联链接。
*  拷贝一个链接，选中文本后按下 ⌘⌥R 会自动插入引用链接。
*  ⌘K 插入链接；⌘⇧K 插入图片。
*  ⌘B 和 ⌘I 分别用于加粗体和斜体。
*  选中文本后按下 # 会自动在文本前后进行配对，可重复按下来定义标题级别，还可用 ⌘⇧空格 来增加 # 与所选文本之间的空格（也是自动配对的）。
</code></pre>

<blockquote><p>有些快捷键可能与系统的一些发生冲突，可以跟之前一样，通过修改自定义快捷键文件</p></blockquote>

<h4>JsFormat</h4>

<blockquote><p>功能类似之前Vim使用的Js beautiful插件，美化你的Js代码，可以通过Package Control 直接安装。按住<code>shift + cmd + p</code>输入js format可以对js文件进行美化。</p></blockquote>

<h4>Git</h4>

<blockquote><p>你可以通过按住<code>shift + cmd + p</code>然后输入几乎所有<code>git</code>命令,个人很喜欢里面的<code>git blame</code>命令,在当前文件下，输入<code>git blame</code>命令后，会打开一个文件,直接看到当前文件的修改内容，这些是谁修改的就一清二楚啦&hellip;</p></blockquote>

<h4>Alignment</h4>

<blockquote><p>这个插件对于有强迫症的同学，简直就是福音啊。例如一下代码</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">clothPartInfoGrid</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">createGridPanel</span><span class="p">();</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">yarnGrid</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">createYarnGrid</span><span class="p">();</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">indexPanel</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">createIndexPanel</span><span class="p">();</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">mainPanel</span> <span class="o">=</span>  <span class="k">this</span><span class="p">.</span><span class="nx">createMainPanel</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>简单通过选择，<code>ctrl+command+a</code>,即可美化</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">clothPartInfoGrid</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">createGridPanel</span><span class="p">();</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">yarnGrid</span>          <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">createYarnGrid</span><span class="p">();</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">indexPanel</span>        <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">createIndexPanel</span><span class="p">();</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">mainPanel</span>         <span class="o">=</span>  <span class="k">this</span><span class="p">.</span><span class="nx">createMainPanel</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<h3>为Sublime Text 添加主题</h3>

<blockquote><p>可以通过Package Control 安装搜索,按住<code>cmd+shift+p</code>,输入<code>install package</code>,然后输入相应主题名，然后在<code>user setting</code>那里激活主题</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;color_scheme&quot;</span><span class="o">:</span> <span class="s2">&quot;Packages/Theme - Flatland/Flatland Dark.tmTheme&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;theme&quot;</span><span class="o">:</span> <span class="s2">&quot;Flatland Dark.sublime-theme&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://www.masnun.com/2013/07/08/beautiful-themes-for-sublime-text-3.html">推荐主题列表</a></p>

<h3>Sublime Text 小技巧</h3>

<ol>
<li>防止自动更新: 找到Preferences -> Settings-User,然后在里面添加<code>"update_check":false</code></li>
<li>为了能够在终端直接打开Sublime,你可以建立一个软连接,在终端输入
<code>sudo ln -s "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl" /bin/subl</code>，然后就可以运行<code>subl --help</code>来查看命令帮助</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">使用</span><span class="p">:</span>  <span class="n">subl</span> <span class="o">[</span><span class="err">参数</span><span class="o">]</span> <span class="o">[</span><span class="err">文件</span><span class="o">]</span>         <span class="err">编辑指定文件</span>
</span><span class='line'>   <span class="err">或</span><span class="p">:</span> <span class="n">subl</span> <span class="o">[</span><span class="err">参数</span><span class="o">]</span> <span class="o">[</span><span class="err">目录</span><span class="o">]</span>            <span class="err">打开指定目录</span>
</span><span class='line'>   <span class="err">或</span><span class="p">:</span> <span class="n">subl</span> <span class="o">[</span><span class="err">参数</span><span class="o">]</span> <span class="o">-</span>             <span class="err">编辑</span> <span class="n">stdin</span>
</span><span class='line'><span class="err">可用参数</span><span class="p">:</span>
</span><span class='line'>  <span class="o">--</span><span class="n">project</span> <span class="o">&lt;</span><span class="err">项目</span><span class="o">&gt;</span><span class="p">:</span> <span class="err">读取指定项目</span>
</span><span class='line'>  <span class="o">--</span><span class="n">command</span> <span class="o">&lt;</span><span class="err">命令</span><span class="o">&gt;</span><span class="p">:</span> <span class="err">运行指定命令</span>
</span><span class='line'>  <span class="o">-</span><span class="n">n</span> <span class="err">或</span> <span class="o">--</span><span class="kp">new</span><span class="o">-</span><span class="ss">window</span><span class="p">:</span>  <span class="err">打开新窗口</span>
</span><span class='line'>  <span class="o">-</span><span class="n">a</span> <span class="err">或</span> <span class="o">--</span><span class="ss">add</span><span class="p">:</span>         <span class="err">向当前窗口中添加文件夹</span>
</span><span class='line'>  <span class="o">-</span><span class="n">w</span> <span class="err">或</span> <span class="o">--</span><span class="ss">wait</span><span class="p">:</span>        <span class="err">等待文件关闭后再返回</span>
</span><span class='line'>  <span class="o">-</span><span class="n">b</span> <span class="err">或</span> <span class="o">--</span><span class="ss">background</span><span class="p">:</span>  <span class="err">不激活程序窗口</span>
</span><span class='line'>  <span class="o">-</span><span class="n">s</span> <span class="err">或</span> <span class="o">--</span><span class="ss">stay</span><span class="p">:</span>        <span class="err">关闭文件后保持程序窗口激活</span>
</span><span class='line'>  <span class="o">-</span><span class="n">h</span> <span class="err">或</span> <span class="o">--</span><span class="ss">help</span><span class="p">:</span>        <span class="err">显示此帮助</span>
</span><span class='line'>  <span class="o">-</span><span class="n">v</span> <span class="err">或</span> <span class="o">--</span><span class="ss">version</span><span class="p">:</span>     <span class="err">显示版本号</span>
</span><span class='line'><span class="err">读取</span> <span class="n">stdin</span> <span class="err">时会使用</span> <span class="o">--</span><span class="n">wait</span> <span class="err">参数。通过</span> <span class="o">--</span><span class="n">stay</span> <span class="err">可以在文件关闭后不返回终端（仅针对单个文件）。</span>
</span><span class='line'><span class="err">可以通过向文件名添加</span> <span class="sb">`:行号`</span> <span class="err">或</span> <span class="sb">`:行号:列号`</span> <span class="err">后缀来打开到更具体的位置。</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li><p>开启自动换行：按住<code>command+shift+p</code>,输入<code>setting user</code>，往里面添加<code>"word_wrap" : true</code></p></li>
<li><p>最后的配置是这样的：</p></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;color_scheme&quot;</span><span class="p">:</span> <span class="s2">&quot;Packages/Theme - Flatland/Flatland Dark.tmTheme&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;font_size&quot;</span><span class="p">:</span> <span class="mi">13</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;ignored_packages&quot;</span><span class="p">:</span> <span class="o">[]</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;theme&quot;</span><span class="p">:</span> <span class="s2">&quot;Flatland Dark.sublime-theme&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;update_check&quot;</span><span class="p">:</span> <span class="kp">false</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;word_wrap&quot;</span> <span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby中的block]]></title>
    <link href="http://justin-lu.github.io/blog/2013/10/24/rubyzhong-de-block/"/>
    <updated>2013-10-24T18:16:00+08:00</updated>
    <id>http://justin-lu.github.io/blog/2013/10/24/rubyzhong-de-block</id>
    <content type="html"><![CDATA[<p>ruby编程中的block简单介绍</p>

<!-- More -->



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby中的instance_eavl和class_eval]]></title>
    <link href="http://justin-lu.github.io/blog/2013/09/26/rubyzhong-de-instance-eavlhe-class-eval/"/>
    <updated>2013-09-26T12:27:00+08:00</updated>
    <id>http://justin-lu.github.io/blog/2013/09/26/rubyzhong-de-instance-eavlhe-class-eval</id>
    <content type="html"><![CDATA[<p>ruby元编程中的instance_eavl和class_eval简单介绍</p>

<!-- More -->


<p>第二次看Ruby元编程这本书，感觉里面能学到的东西很多，但是很容易忘记，所以把一些想法写下来，以备后用。</p>

<h1>instance_eval</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">My</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="vi">@v</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">obj</span> <span class="o">=</span> <span class="no">My</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">v</span> <span class="o">=</span> <span class="mi">3</span>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">instance_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="nb">self</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="vi">@v</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">v</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">one_method</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;I&#39;m one_method&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1">#=&gt; #&lt;My:0xa2b76a4&gt;</span>
</span><span class='line'><span class="c1">#=&gt; 1</span>
</span><span class='line'><span class="c1">#=&gt; 3</span>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">one_method</span>
</span><span class='line'><span class="c1">#=&gt; I&#39;m one_method</span>
</span><span class='line'><span class="n">obj2</span> <span class="o">=</span> <span class="no">My</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">obj2</span><span class="o">.</span><span class="n">one_method</span>
</span><span class='line'><span class="c1">#=&gt; NoMethodError: undefined method `one_method&#39; for #&lt;My:0xa2f3f14 @v=1&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>首先，我们分析上面代码：</p>

<ul>
<li>当我们实例化一个类时，我们可以通过instance_eval来访问到该类的实例方法，所以我们可以看到<code>self</code>返回一个对象，<code>@v</code>返回1</li>
<li>由于block是一个闭包，所以在运行的时候，可以访问局部变量<code>v</code>，而且能访问局部变量@v，这种情况，我们把他叫做<code>上下文探针</code>，它就像是一个深入到对象中的代码片段，对其进行操作。</li>
<li>当我们在instance_eval块里面定义方法是，由于self为当前对象，所以 <code>def</code>关键子打开的作用域门为self，即定义的方法只有obj可以访问，我们称它为单件方法。</li>
</ul>
</li>
<li><p>然后，我们总结instance_eval的作用：</p>

<ul>
<li>instance_eval的调用者必须是一个实例</li>
<li>改变当前block的接受者为self，因此它可以访问接受者的私有方法和实例变量</li>
<li>可以在block内使用单件方法</li>
</ul>
</li>
<li><p>最后，我们还发现，可以用instance_eavl来定义类方法</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">A</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">instance_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">a_method</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;I&#39;m class method&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">A</span><span class="o">.</span><span class="n">a_method</span>
</span><span class='line'><span class="c1">#=&gt;I&#39;m class method</span>
</span></code></pre></td></tr></table></div></figure>


<h1>class_eval(又名module_eval)</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">add_method_to</span><span class="p">(</span><span class="n">a_class</span><span class="p">)</span>
</span><span class='line'>  <span class="n">a_class</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="nb">self</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">m</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s1">&#39;hello&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1">#=&gt; String</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;abc&quot;</span><span class="o">.</span><span class="n">m</span>
</span><span class='line'><span class="n">add_method_to</span> <span class="nb">String</span>
</span><span class='line'><span class="s1">&#39;abc&#39;</span><span class="o">.</span><span class="n">m</span>
</span><span class='line'><span class="c1">#=&gt; NoMethodError: undefined method `m&#39; for &quot;abc&quot;:String</span>
</span><span class='line'><span class="c1">#=&gt; &quot;hello&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>分析上面代码，我们可以发现<code>class_eval</code>和<code>instance_eval</code>的区别：
  <em><code>class_eval</code>的调用对象必须是一个类
  </em><code>class_eval</code>block里面的self为类本身(实际上是重新打开了该类，相当于关键字<code>class</code>)
  *<code>class_eval</code>定义的方法为类的实例方法（instance_eval是单件方法）</li>
</ul>


<h1>总结：什么时候用<code>class_eval</code>和<code>instance_eval</code></h1>

<p>  <em>如果打开的对象不是类，则使用<code>instance_eval</code>,如果想打开一个类定义并且用<code>def</code>定义实例方法，则选择<code>class_eval</code>
  </em>根据调用者来决定
  *根据你的意图来决定</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Asset pipeline 理解]]></title>
    <link href="http://justin-lu.github.io/blog/2013/08/10/asset-pipeline-li-jie/"/>
    <updated>2013-08-10T16:46:00+08:00</updated>
    <id>http://justin-lu.github.io/blog/2013/08/10/asset-pipeline-li-jie</id>
    <content type="html"><![CDATA[<p>简单介绍个人对Asset pipeline的理解</p>

<!-- More -->


<h3>Asset Pipeline 是什么</h3>

<blockquote><p>asset pipline 是一个提供连结缩小或者压缩 JavaScript 和 CSS 资源的框架。它也添加了用其它语言编写这些资源的功能, 如 CoffeeScript, Sass 和 ERB。</p>

<p>对于新手来说，Asset Pipeline无疑是一个比较难掌握的内容，特别是当Production模式之后，可能遇到的问题会更多，我们只有理解它，才能更好的使用它。</p></blockquote>

<ol>
<li>Rails 3.1 之后，<code>asset pipeline</code>是自动打开的，你有两种方式不使用它:</li>
<li>在<code>config/application.rb</code>里面添加：<code>config.assets.enabled = false</code></li>
<li>也可以在新建App的时候通过参数来关闭:<code>rails new appname --skip-sprockets</code></li>
<li>目录结构</li>
<li><code>app/assets</code>存放应用程序本身所使用的JS、CSS和Image</li>
<li><code>lib/assets</code>存放自己拓展的JS、CSS和Image</li>
<li><code>vendor/assets</code>存放第三方拓展JS、CSS和Image，例如Jquery、Extjs等一些类库</li>
<li>搜索路径</li>
<li>在<code>config/application.rb</code>里面<code>config.assets.paths &lt;&lt; Rails.root.join("app", "assets")</code>里面可以添加到预编译列表</li>
<li>例如，需要加载这个文件<code>app/assets/javascripts/home.js</code>,这只需要在<code>application.js</code>里面添加<code>=// require home</code>即可</li>
<li>注意：如果引用资源清单外的文件，必须加载到预编译列表，否知producion环境不可用</li>
</ol>


<hr />

<p>更多详细资料，请参阅</p>

<ul>
<li><a href="http://guides.ruby-china.org/asset_pipeline.html">Asset Pipline 中文版</a></li>
<li><a href="http://guides.rubyonrails.org/asset_pipeline.html">Asset Pipline 英文版</a></li>
<li>如果需要，可在<code>config/application.rb</code>添加<code>config.assets.enabled = false</code>关闭<code>asset pipeline</code>功能</li>
</ul>


<h3>如何管理数据</h3>

<ol>
<li>一个新的<code>Rails</code>应用程序包含了一个默认的<code>app/assets/javascripts/application.js</code>文件，这个文件包含了一些行:</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// ...</span>
</span><span class='line'><span class="c1">//= require jquery</span>
</span><span class='line'><span class="c1">//= require jquery_ujs</span>
</span><span class='line'><span class="c1">//= require_tree .</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>require_tree</code>指令告诉<code>Sprockets</code>递归地去包含在指定目录下<code>所有</code>的 JavaScript 文件到输出里</li>
<li><code>require_directory</code>它会将在某个特定目录下所有的 JavaScript 文件包含进去，但不递归.</li>
<li><code>include</code>与require 一样，差别在于即使是被加载过的文件，也会被再次加载</li>
<li><code>require_self</code> 告訴<code>Sprockets</code>在载入其他的文件时，先将自己的内容</li>
<li><code>stub</code>将路径中得assets加入黑名单，所有其他的require都不会将它载入</li>
<li>注意：引用时不需要显示提供拓展名,<code>require_tree</code>包含的文件是没有顺序的。</li>
<li>关掉<code>require_tree .</code>,它会递归加载当前文件下得所有文件，对于小系统来说，可能没多大影响，系统复杂了，每次都加载那么多文件，访问就会变慢了。</li>
<li>根据需求，组织你自己的加载方式，一下根据做ERP系统，写出我的加载方式</li>
<li>去掉<code>require_tree .</code></li>
<li>在三个<code>appliction.js</code>文件中，添加项目工用的JS和CSS代码，默认都会编译</li>
<li>通过修改<code>config.assets.precompile += %w( other.js , another.js)</code>，增加除了<code>application.js</code>外的文件）</li>
<li>在<code>/app/application_controller.rb</code>里面添加<code>&lt;%= javascript_include_tag params[:controller]/params[:action] %&gt;</code>或者<code>&lt;%= stylesheet_link_tag params[:controller]/params[:action] %&gt;</code>加载每个页面所使用到的Js和CSS文件</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rspec测试(Grurd+spork+capybara)]]></title>
    <link href="http://justin-lu.github.io/blog/2013/08/10/rspecce-shi-grurd-plus-sporcapybara/"/>
    <updated>2013-08-10T16:45:00+08:00</updated>
    <id>http://justin-lu.github.io/blog/2013/08/10/rspecce-shi-grurd-plus-sporcapybara</id>
    <content type="html"><![CDATA[<p>Rspec测试框架介绍
时间不够，过后补上</p>

<!-- More -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[chanceEasy Summary]]></title>
    <link href="http://justin-lu.github.io/blog/2013/07/15/chanceeasy-summary/"/>
    <updated>2013-07-15T08:39:00+08:00</updated>
    <id>http://justin-lu.github.io/blog/2013/07/15/chanceeasy-summary</id>
    <content type="html"><![CDATA[<p>chanceEasy 项目总结</p>

<!-- More -->




<!--* 文档：文档规范化问题-->


<!--* 业务：业务不熟练-->


<!--    * 监控-->


<!--* 时间不够、状态不佳-->




<!--* 成员分工不明确、责职明确、目标不明确-->


<!--* 目标不明确、为完成任务而做任务、导致不思考、没动力、没状态-->


<!--* 文档描述不清、没有尽到该有的效果 、没有检查、监督文档-->


<!--* 决策有误-->


<!--* 开发气氛（头脑风暴、技术研究）-->


<!--* 责任心不强-->


<!--* 心里压力-->


<!--* 进度把控-->


<!--* 培养方案改革-->




<!--软件工程过程（需求文档、数据库设计、规范文档、代码封装文档）-->


<!--开发工具-->


<!--计划与进度把控-->


<!--团队面临问题-->


<h2>讲课内容</h2>

<!--偏向管理-->


<blockquote><p>今天分享的内容，主要是总结ChanceEasy第一阶段从需求分析到系统部署的整一个软件开发过程，每一个阶段所使用的工具、方法、和面临的问题和解决方法。</p>

<blockquote><ul>
<li>需求分析</li>
<li>数据库设计</li>
<li>开发过程</li>
<li>系统测试</li>
<li>系统部署</li>
<li>个人总结</li>
<li>讲课过程中，希望大家积极参与讨论</li>
</ul>
</blockquote></blockquote>

<h2>需求分析</h2>

<ul>
<li>方法：通过口头交流获取需求，分析单据信息，形成需求，实现页面原型，供用户确认；每次调研前的计划文档、调研后的总结文档；经过多次修改，形成确认版本，针对每个页面做详细开发注释文档</li>
<li>产物：流程图+页面原型+调研文档</li>
<li>优点：由于界面清晰可见，可以跟用户很好的进行沟通</li>
<li>缺点：文档规范性、可读性、可修改性、准确性、完整性（哪些要填哪些不要填）</li>
<li>经验总结：

<ul>
<li>流程图：必须准确无误、添加必要注释、能准确无误描述需求、（并需要和客户确认）</li>
<li>静态页面：尽量能够让这些前台代码能够在开发时使用，减少开发时间</li>
<li>开发文档：必须有非开发者检查、保证文档的准确性、可读性、无二义性</li>
<li>调研文档：由于需求跟改较快、文档过多、维护艰难</li>
<li>没站在客户的角度看问题、没形成数据流图</li>
</ul>
</li>
</ul>


<h2>数据库设计</h2>

<ul>
<li>方法：由每个模块的负责人提前设计好各自模块的数据库关系，根据页面原型，统一讨论各个模块的设计，并完成数据库关系图和Google文档、页面注释</li>
<li>产物：系统数据库关系图+Google文档+页面注释+状态文档</li>
<li>优点：能够清楚的知道数据库表间关系、数据库表字段定义可以直接导入</li>
<li>缺点：由于多人讨论，数据库表间关系、字段准确性很难确定；没进入实际开发，有些设计不合理</li>
<li>经验总结：

<ul>
<li>必须有人检查该过程所形成文档、确保文档的准确性、不然实际开发时，该文档并没有起到很好的作用</li>
<li>比较特殊的字段，必须写清楚为何这样设计</li>
<li>字段必须统一</li>
<li>充分考虑数据库的拓展性，为需求添加做准备</li>
</ul>
</li>
</ul>


<h2>代码封装</h2>

<ul>
<li>方法：根据之前开发经验，统一讨论需要封装的内容，并落实给每一个人。并完成相关文档</li>
<li>产物：Ruby+Js的API文档</li>
<li>优点：加快开发速度、有利于技术的提高</li>
<li>缺点：无</li>
<li>经验总结：

<ul>
<li>缺少代码质量监控，不能保证封装的代码已在使用->Redmine代码监控、Yammer通知</li>
<li>不能一味符合功能需求->果断摒弃不适合功能</li>
<li>代码封装应该交给经验较为丰富的开发者</li>
<li>在实际开发之前，必须把代码封装任务完成->待封装代码文档</li>
<li>共用性代码、文档准确性，详细性</li>
</ul>
</li>
</ul>


<h2>开发过程</h2>

<ul>
<li>方法：先大概讲下业务流程，开发者通过流程图、页面注释、数据库设计进行开发</li>
<li>产物：页面原型（每个页面的页面注释、所用到的数据库关系、表字段、单据）</li>
<li>优点：开发者能够明确获得开发时所需要的所有信息</li>
<li>缺点：维护这份文档比较困难、需要耗费时间长</li>
<li>开发总结：

<ul>
<li> 每天的三分钟会议无法获取进度且浪费时间，通过使用Yammer汇报进度、一周总的进度汇报</li>
<li> 代码质量->使用Redmine代码评审功能</li>
<li> 开发结果与需求不符、目标不明确</li>
<li> 由于实现的需要，有些问题已经跟原来需求相符->开发时间太长、再确认比较麻烦</li>
</ul>
</li>
</ul>


<h2>系统测试</h2>

<ul>
<li>方法： 各自负责页面进行测试、各自负责模块测试、负责人集成测试、用户验收测试</li>
<li>产物：测试文档</li>
<li>优点：</li>
<li>缺点： 需要大量的人工测试</li>
<li>经验总结：

<ul>
<li>经验不足，无法确定测试需要时间、没有明确的测试目标</li>
<li>没有自动化测试（测试驱动开发）</li>
</ul>
</li>
</ul>


<h2>系统部署</h2>

<ul>
<li>方法：配置待部署服务器、部署前准备工作、每一个人的培训安排</li>
<li>产物：部署计划、部署文档</li>
<li>优点：</li>
<li>缺点：</li>
</ul>


<h2>个人总结</h2>

<ul>
<li>计划的安排合理性->先试用、看是否安排合理</li>
<li>进度的把控</li>
<li>代码质量监控</li>
<li>任务完成情况把控</li>
<li>状态调整</li>
<li>解决问题->发现问题转变</li>
<li>目标不明确->为了完成任务而做任务、导致不思考、没动力、没状态</li>
<li>如何兼顾技术提高和项目进度合理（头脑风暴、技术讨论会）</li>
<li>实验室可以形成自己的代码库</li>
<li>决策失误</li>
<li>技术提升的三个阶段暑假培训、培训师弟、项目管理</li>
</ul>


<h2>实验室面临的问题</h2>

<ul>
<li>培训方案</li>
<li>项目压着我们，变成开发工具、学习不到东西</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails配置]]></title>
    <link href="http://justin-lu.github.io/blog/2013/07/12/ruby-on-railspei-zhi/"/>
    <updated>2013-07-12T11:32:00+08:00</updated>
    <id>http://justin-lu.github.io/blog/2013/07/12/ruby-on-railspei-zhi</id>
    <content type="html"><![CDATA[<p>安装Ruby On Rails 脚本.</p>

<!-- More -->


<ul>
<li><p>把下面内容复制到一个后缀为<code>RVM配置ROR.sh</code>新文件</p></li>
<li><p><code>chmod +x RVM配置ROR.sh</code> #变为可执行文件</p></li>
<li><p><code>./RVM配置ROR.sh</code>  执行文件</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">echo</span> <span class="s">&quot;==========  安装函数库 =================&quot;</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">curl</span> <span class="n">bison</span> <span class="n">build</span><span class="o">-</span><span class="n">essential</span> <span class="n">git</span><span class="o">-</span><span class="n">core</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">zlib1g</span><span class="o">-</span><span class="n">dev</span> <span class="n">libssl</span><span class="o">-</span><span class="n">dev</span> <span class="n">libreadline5</span><span class="o">-</span><span class="n">dev</span> <span class="n">libxml2</span><span class="o">-</span><span class="n">dev</span>
</span><span class='line'>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;========== 安装rvm ===================&quot;</span>
</span><span class='line'><span class="n">mkdir</span> <span class="o">-</span><span class="n">p</span> <span class="o">~/</span><span class="p">.</span><span class="n">rvm</span><span class="o">/</span><span class="n">src</span><span class="o">/</span> <span class="o">&amp;&amp;</span> <span class="n">cd</span> <span class="o">~/</span><span class="p">.</span><span class="n">rvm</span><span class="o">/</span><span class="n">src</span> <span class="o">&amp;&amp;</span> <span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="p">.</span><span class="o">/</span><span class="n">rvm</span><span class="o">/</span> <span class="o">&amp;&amp;</span> <span class="n">git</span> <span class="n">clone</span> <span class="nl">git</span><span class="p">:</span><span class="c1">//github.com/wayneeseguin/rvm.git &amp;&amp; cd rvm &amp;&amp; ./install</span>
</span><span class='line'>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;========== 打开另一个终端，执行 vim ~/.bashrc =================&quot;</span>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;========== 并且将下面内容复制到.bashrc最后 ===========&quot;</span>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot; if [[ -s &quot;</span><span class="err">$</span><span class="n">HOME</span><span class="o">/</span><span class="p">.</span><span class="n">rvm</span><span class="o">/</span><span class="n">scripts</span><span class="o">/</span><span class="n">rvm</span><span class="s">&quot; ]] ; then</span>
</span><span class='line'><span class="n">source</span> <span class="s">&quot;$HOME/.rvm/scripts/rvm&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">fi</span>
</span><span class='line'><span class="p">[[</span> <span class="o">-</span><span class="n">s</span> <span class="s">&quot;$HOME/.rvm/scripts/rvm&quot;</span> <span class="p">]]</span> <span class="o">&amp;&amp;</span> <span class="n">source</span> <span class="s">&quot;$HOME/.rvm/scripts/rvm&quot;</span>
</span><span class='line'><span class="s">&quot;</span>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;========== 修改完后请按回车键继续: ==========&quot;</span>
</span><span class='line'><span class="n">read</span> <span class="n">var</span>
</span><span class='line'>
</span><span class='line'><span class="n">type</span> <span class="n">rvm</span> <span class="o">|</span> <span class="n">head</span> <span class="o">-</span><span class="mi">1</span>
</span><span class='line'>
</span><span class='line'><span class="n">rvm</span> <span class="n">requirements</span>
</span><span class='line'>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">build</span><span class="o">-</span><span class="n">essential</span> <span class="n">openssl</span> <span class="n">libreadline6</span> <span class="n">libreadline6</span><span class="o">-</span><span class="n">dev</span> <span class="n">curl</span> <span class="n">git</span><span class="o">-</span><span class="n">core</span> <span class="n">zlib1g</span> <span class="n">zlib1g</span><span class="o">-</span><span class="n">dev</span> <span class="n">libssl</span><span class="o">-</span><span class="n">dev</span> <span class="n">libyaml</span><span class="o">-</span><span class="n">dev</span> <span class="n">libsqlite3</span><span class="o">-</span><span class="mi">0</span> <span class="n">libsqlite3</span><span class="o">-</span><span class="n">dev</span> <span class="n">sqlite3</span> <span class="n">libxml2</span><span class="o">-</span><span class="n">dev</span> <span class="n">libxslt</span><span class="o">-</span><span class="n">dev</span> <span class="n">autoconf</span> <span class="n">libc6</span><span class="o">-</span><span class="n">dev</span> <span class="n">ncurses</span><span class="o">-</span><span class="n">dev</span> <span class="n">automake</span> <span class="n">libtool</span> <span class="n">bison</span> <span class="n">subversion</span>
</span><span class='line'>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;==================================&quot;</span>
</span><span class='line'><span class="n">source</span> <span class="o">~/</span><span class="p">.</span><span class="n">bashrc</span>
</span><span class='line'>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;===================================&quot;</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">rubygems</span>
</span><span class='line'>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;========= 安装ruby1.9.2 ===========&quot;</span>
</span><span class='line'><span class="n">rvm</span> <span class="n">install</span> <span class="mf">1.9.2</span><span class="o">-</span><span class="n">p290</span>
</span><span class='line'>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;======== 安装rails3.0.3 ===========&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">rails</span> <span class="o">-</span><span class="n">v</span><span class="o">=</span><span class="mf">3.0.3</span>
</span><span class='line'>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;========= 安装ruby ===========&quot;</span>
</span><span class='line'><span class="n">rvm</span> <span class="n">install</span> <span class="mf">1.8.7</span>
</span><span class='line'>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;======== 安装rails ===========&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">rails</span> <span class="o">-</span><span class="n">v</span><span class="o">=</span><span class="mf">2.3.5</span>
</span><span class='line'>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;======= 安装mysql ============&quot;</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">mysql</span><span class="o">-</span><span class="n">server</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">mysql</span><span class="o">-</span><span class="n">client</span>
</span><span class='line'>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;====== 安装mysql驱动 =========&quot;</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">libmysqlclient</span><span class="o">-</span><span class="n">dev</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">gem</span> <span class="n">install</span> <span class="n">mysql2</span>
</span><span class='line'>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;======设置默认版本==========&quot;</span>
</span><span class='line'><span class="n">rvm</span> <span class="n">use</span> <span class="o">--</span><span class="k">default</span> <span class="mf">1.8.7</span>
</span><span class='line'>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;============更新使用于2.3.5的rubygem=========&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="n">update</span> <span class="o">--</span><span class="n">system</span> <span class="mf">1.5.3</span>
</span><span class='line'>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;========== 打开另一个终端，执行 vim ~/.bash_profile =================&quot;</span>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;========== 并且将下面内容复制到.bash_profile最后 ===========&quot;</span>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot; </span>
</span><span class='line'><span class="n">source</span> <span class="o">~/</span><span class="p">.</span><span class="n">bashrc</span>
</span><span class='line'><span class="s">&quot;</span>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;========== 修改完后请按回车键继续: ==========&quot;</span>
</span><span class='line'><span class="n">read</span> <span class="n">var</span>
</span><span class='line'>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;===== 如果在此过程中，没有错误，那么Ruby on rails 环境搭配成功(Justin-lu)!! ======== &quot;</span>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;=====   QQ：448426851 ========================== &quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu常用软件]]></title>
    <link href="http://justin-lu.github.io/blog/2013/07/12/ubuntuchang-yong-ruan-jian/"/>
    <updated>2013-07-12T10:00:00+08:00</updated>
    <id>http://justin-lu.github.io/blog/2013/07/12/ubuntuchang-yong-ruan-jian</id>
    <content type="html"><![CDATA[<p>Ubuntu常用软件收集。</p>

<!-- More -->


<ol>
<li><p><code>gnome do</code> 功能：能够快速查找文件，包括文件夹，文件名，程序。。。</p></li>
<li><p><code>Cairo-dock</code> 功能：美化桌面，导航等。</p></li>
<li><p><code>Gvim</code> 功能：一个功能强大的文本编辑器。特别适合用来编辑ruby文件。<a href="https://github.com/Justin-lu/.vim">vimrc配置文档</a></p></li>
<li><p><code>Filezila</code> 功能：FileZilla是一个免费开源的FTP客户端软件，分为客户端版本和服务器版本，具备所有的FTP软件功能。可控性、有条理的界面和管理多站点的简化方式使得Filezilla客户端版成为一个方便高效的FTP客户端工具，而FileZilla Server则是一个小巧并且可靠的支持FTP&amp;SFTP的FTP服务器软件</p></li>
<li><p><code>CompizConfig</code> 功能：美化。</p></li>
<li><p><code>Guake Terminal</code> linux下的一种终端，比较方便</p></li>
<li><p><code>hromium浏览器</code>：简洁快速的网际浏览器 (推荐使用)</p></li>
<li><p><code>亦歌</code>：在线音乐播放器</p></li>
<li><p>右键管理员和终端打开（推荐使用，不是软件，baidu百度该关键字）</p></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">nautilus</span><span class="o">-</span><span class="n">open</span><span class="o">-</span><span class="n">terminal</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">nautilus</span><span class="o">-</span><span class="n">gksu</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>ubuntu11.04右键管理员失效解决</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">sudo</span> <span class="n">cp</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">nautilus</span><span class="o">/</span><span class="n">extensions</span><span class="o">-</span><span class="mf">2.0</span><span class="o">/</span><span class="n">libnautilus</span><span class="o">-</span><span class="n">gksu</span><span class="p">.</span><span class="n">so</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">nautilus</span><span class="o">/</span><span class="n">extensions</span><span class="o">-</span><span class="mf">3.0</span><span class="o">/</span>
</span><span class='line'><span class="n">killall</span> <span class="n">nautilus</span>
</span></code></pre></td></tr></table></div></figure>


<p>10.<code>ssh</code>的安装</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">ssh</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<ol>
<li><p>安装rails</p></li>
<li><p>安装rvm</p></li>
<li><p><code>diagram</code></p></li>
<li><p><code>wakoopa</code></p></li>
<li><p><code>mysqlworkbench</code></p></li>
<li><p><a href="http://justin-lu.github.io/blog/blog/2013/07/12/ubuntu12-dot-10yi-shang-an-zhuang-gu-ge-shu-ru-fa-%2C-sou-gou-shu-ru-deng/">小企鹅输入法安装</a></p></li>
<li><p><code>VirtualBox</code> ubuntu下比较好的虚拟机(怀念window的，可以装一个winxp)</p></li>
<li><p><code>Adobe AIR</code> ubuntu下，AIR软件安装所需软件，如微博AIR等</p></li>
<li><p><code>Dia Diagram Editor</code> ubuntu下类似visio的画图软件</p></li>
<li><p><code>dropbox</code> &amp;&amp; <code>Yunio</code>跨平台的云端软件</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu12.10以上安装谷歌输入法、搜狗输入等]]></title>
    <link href="http://justin-lu.github.io/blog/2013/07/12/ubuntu12-dot-10yi-shang-an-zhuang-gu-ge-shu-ru-fa-,-sou-gou-shu-ru-deng/"/>
    <updated>2013-07-12T09:47:00+08:00</updated>
    <id>http://justin-lu.github.io/blog/2013/07/12/ubuntu12-dot-10yi-shang-an-zhuang-gu-ge-shu-ru-fa-,-sou-gou-shu-ru-deng</id>
    <content type="html"><![CDATA[<p>Ubuntu12.10以上安装谷歌输入法、搜狗输入等</p>

<!-- More -->


<p>1.卸载Ibus本地输入法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">remove</span> <span class="n">ibus</span>
</span></code></pre></td></tr></table></div></figure>


<p>2.为系统添加Fcitx源</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">sudo</span> <span class="n">add</span><span class="o">-</span><span class="n">apt</span><span class="o">-</span><span class="n">repository</span> <span class="nl">ppa</span><span class="p">:</span><span class="n">fcitx</span><span class="o">-</span><span class="n">team</span><span class="o">/</span><span class="n">nightly</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.更新源</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>
</span></code></pre></td></tr></table></div></figure>


<p>4.安装fcitx，双拼，google拼音，云拼音，搜狗拼音（选择需要的安装）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">fcitx</span> <span class="n">fcitx</span><span class="o">-</span><span class="n">config</span><span class="o">-</span><span class="n">gtk</span> <span class="n">fcitx</span><span class="o">-</span><span class="n">sunpinyin</span> <span class="n">fcitx</span><span class="o">-</span><span class="n">googlepinyin</span> <span class="n">fcitx</span><span class="o">-</span><span class="n">module</span><span class="o">-</span><span class="n">cloudpinyin</span>  <span class="n">fcitx</span><span class="o">-</span><span class="n">sogoupinyin</span>
</span></code></pre></td></tr></table></div></figure>


<p>5.安装fcitx默认的所有输入法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">fcitx</span><span class="o">-</span><span class="n">table</span><span class="o">-</span><span class="n">all</span>
</span></code></pre></td></tr></table></div></figure>


<p>6.设置默认fcitx</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">im</span><span class="o">-</span><span class="k">switch</span> <span class="o">-</span><span class="n">s</span> <span class="n">fcitx</span> <span class="o">-</span><span class="n">z</span> <span class="k">default</span>
</span></code></pre></td></tr></table></div></figure>


<p>7.注销系统，通过Ctrl+空格可以切换输入法，右击图标选择输入法，可以选择不同输入法。1.卸载Ibus本地输入法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">remove</span> <span class="n">ibus</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu常用指令]]></title>
    <link href="http://justin-lu.github.io/blog/2013/07/12/ubuntuchang-yong-zhi-ling/"/>
    <updated>2013-07-12T09:19:00+08:00</updated>
    <id>http://justin-lu.github.io/blog/2013/07/12/ubuntuchang-yong-zhi-ling</id>
    <content type="html"><![CDATA[<p>基本的Ubuntu指令的使用介绍</p>

<!-- More -->


<h3>基本的Ubuntu指令</h3>

<hr />

<p><code>sudo apt－get install</code> 软件名 安装软件命令</p>

<p><code>sudo apt-get autoremove</code> 软件名 卸载软件命令</p>

<p><code>sudo nautilus</code>打开文件（有root权限）</p>

<p><code>su root</code> 切换到“root”</p>

<p><code>ls</code> 列出当前目录文件（不包括隐含文件）</p>

<p><code>ls -a</code> 列出当前目录文件（包括隐含文件）</p>

<p><code>ls -l</code> 列出当前目录下文件的详细信息</p>

<p><code>cd ..</code> 回当前目录的上一级目录</p>

<p><code>cd -</code> 回上一次所在的目录</p>

<p><code>cd ~</code>或 <code>cd</code> 回当前用户的宿主目录</p>

<p><code>mkdir</code> 目录名 创建一个目录</p>

<p><code>rmdir</code> 空目录名 删除一个空目录</p>

<p><code>rm</code> 文件名 文件名 删除一个文件或多个文件</p>

<p><code>rm -rf</code> 非空目录名 删除一个非空目录下的一切</p>

<p><code>mv 路经/文件 /经/文件</code>移动相对路经下的文件到绝对路经下</p>

<p><code>mv 文件名 新名称</code> 在当前目录下改名</p>

<p><code>find 路经 -name “字符串”</code>查找路经所在范围内满足字符串匹配的文件和目录</p>

<p><code>ack-grep 字符串</code> 同上</p>

<p><code>fdisk fdisk -l</code> 查看系统分区信息</p>

<p><code>fdisk fdisk /dev/sdb</code> 为一块新的SCSI硬盘进行分区</p>

<p><code>chown chown root /home</code> 把/home的属主改成root用户</p>

<p><code>chgrp chgrp root /home</code> 把/home的属组改成root组</p>

<p><code>Useradd</code> 创建一个新的用户</p>

<p><code>Groupadd 组名</code> 创建一个新的组</p>

<p><code>Passwd 用户名</code>为用户创建密码</p>

<p><code>Passwd -d用户名</code> 删除用户密码也能登陆</p>

<p><code>Passwd -S用户名</code> 查询账号密码</p>

<p><code>Usermod -l</code> 新用户名 老用户名 为用户改名</p>

<p><code>Userdel–r</code> 用户名 删除用户一切</p>

<p><code>tar -c 创建包 –x 释放包 -v 显示命令过程 –z 代表压缩包</code></p>

<p><code>tar –cvf benet.tar /home/benet</code> 把/home/benet目录打包</p>

<p><code>tar –zcvf benet.tar.gz /mnt</code> 把目录打包并压缩</p>

<p><code>tar –zxvf benet.tar.gz</code> 压缩包的文件解压恢复</p>

<p><code>tar –jxvf benet.tar.bz2</code> 解压缩</p>

<p><code>make</code>编译</p>

<p><code>make install</code> 安装编译好的源码包</p>

<p><code>reboot Init 6</code>重启LINUX系统</p>

<p><code>Halt Init 0 Shutdown –h now</code> 关闭LINUX系统</p>

<p><code>uname -a</code> 查看内核版本</p>

<p><code>cat /etc/issue</code>查看ubuntu版本</p>

<p><code>lsusb</code> 查看usb设备</p>

<p><code>sudo ethtool eth0</code> 查看网卡状态</p>

<p><code>cat /proc/cpuinfo</code> 查看cpu信息</p>

<p><code>lshw</code> 查看当前硬件信息</p>

<p><code>sudo fdisk -l</code>查看磁盘信息</p>

<p><code>df -h</code>查看硬盘剩余空间</p>

<p><code>free -m</code>查看当前的内存使用情况</p>

<p><code>ps -A</code> 查看当前有哪些进程</p>

<p>kill 进程号(就是ps -A中的第一列的数字)或者 killall 进程名( 杀死一个进程)</p>

<p><code>kill -9 进程号</code>强制杀死一个进程</p>

<h3>常用apt命令：</h3>

<p><code>apt-cache search package</code> 搜索包</p>

<p><code>apt-cache show package</code> 获取包的相关信息，如说明、大小、版本等</p>

<p><code>sudo apt-get install package</code>安装包</p>

<p><code>sudo apt-get install package - - reinstall</code> 重新安装包</p>

<p><code>sudo apt-get -f install</code> 修复安装”-f = –fix-missing”</p>

<p><code>sudo apt-get remove package</code> 删除包</p>

<p><code>sudo apt-get remove package - - purge</code> 删除包，包括删除配置文件等</p>

<p><code>sudo apt-get update</code> 更新源</p>

<p><code>sudo apt-get upgrade</code> 更新已安装的包</p>

<p><code>sudo apt-get dist-upgrade</code> 升级系统</p>

<p><code>sudo apt-get dselect-upgrade</code> 使用 dselect 升级</p>

<p><code>apt-cache depends package</code> 了解使用依赖</p>

<p><code>apt-cache rdepends package</code> 是查看该包被哪些包依赖</p>

<p><code>sudo apt-get build-dep package</code> 安装相关的编译环境</p>

<p><code>apt-get source package</code> 下载该包的源代码</p>

<p><code>sudo apt-get clean</code> &amp;&amp; sudo apt-get autoclean 清理无用的包</p>

<p><code>sudo apt-get check</code> 检查是否有损坏的依赖</p>

<p><code>sudo apt-get clean</code> 清理所有软件缓存（即缓存在/var/cache/apt/archives目录里的deb包）</p>

<h3>wget下载工具</h3>

<blockquote><p>wget是一种非交互式的网络文件下载工具，在linux下可以使用该工具快速地从网络上下载
所需要的文件而不需要经由本</p></blockquote>

<p>wget[参数列表]URL</p>

<p>最简单的用法:</p>

<p><code>wgethttp://targetdomain.com/file.tar</code></p>

<p>wget的常用参数：</p>

<p><code>-t[nuberoftimes]</code> 尝试次数，当wget无法与服务器建立连接时，尝试连接多少次。</p>

<p>比如”-t120″表示尝试120次。当这一项为”0″的时候，指定尝试无穷多次直到连接成功为止，这个设置非常有用，当对方服务器突然关机或者网络突然中断的时候，可以在恢复正常后继续下载没有传完的文件；</p>

<p><code>-c</code>：断点续传，这也是个非常有用的设置，特别当下载比较大的文件的时候，如果中途意外中断，那么连接恢复的时候会从上次没传完的地方接着传，而不是又从头开始，使用这一项需要远程服务器也支持断点续传，一般UNIX/linux的Web/FTP服务器都支持断点续传；</p>

<p><code>-T[numberofseconds]</code>：超时时间，指定多长时间远程服务器没有响应就中断连接，开始下一次尝试。比如”-T120″表示如果120秒以后远程服务器没有发过来数据，就重新尝试连接。如果网络速度比较快，这个时间可以设置的短些，相反，可以设置的长一些，一般最多不超过900，通常也不少于60，一般120左右比较合适；</p>

<p><code>w[numberofseconds]</code>：在两次尝试之间等待多少秒，比如”-w100″表示两次尝试之间等待100秒；</p>

<p><code>-nd</code>：不下载目录结构，把从服务器所有指定目录下载的文件都堆到当前目录里；-x：与”-nd”设置刚好相反，创建完整的目录结构，例如
<code>wget-ndhttp://www.gnu.org/</code>
实际的目录结构一级一级建下去，直到所有的文件都传完为止；</p>

<p><code>-nH</code>：不创建以目标主机域名为目录名的目录，将目标主机的目录结构直接下到当前目录下；</p>

<p><code>-r</code>：递归下载，在本录结构；-l[depth]：下载远程服务器目录结构的深度，例如”-l5″下载目录深度小于或者等于5以内的目录结构或者文件；</p>

<p><code>-m</code>：做站点镜像时的选项，如果你想做一个站点的镜像，使用这个选项，它将自动设定其他合适的选项以便于站点镜像；</p>

<p><code>-np</code>：只下载目标站点指定目录及其子目录的内容。这也是一个非常有用的选项，我们假设某个人的个人主页里面有一个指向这个站点其他人个人主页的连接，而我们只想下载这个人的个人主页，如果不设置这个选项，甚至-有可能把整个站点给抓下来，这显然是我们通常不希望的；-http-user=username-http-passwd=password：</p>

<p>如果Web服务器需要指定用户名和口令，用这两项来设定；-O将数据写入文件中。</p>

<h3>常用的tar命令</h3>

<p>tar命令的使用方法如下：
tar[参数列表][文件名]
参数列表：</p>

<blockquote><p>-c生成新的备份，并同时覆盖旧的备份文件</p>

<p>-x从备份文件中解压缩</p>

<p>-t列出备份文件内的文件目录</p>

<p>-v显示所有被操作文件列表</p>

<p>-f在指定位置生成备份</p>

<p>-u将不存在于备份中的文件，或将已经被更改的文件加入该备份中。
举例说明：</p></blockquote>

<p><code>tar cvf filename.tar</code> /<em>制作备份</em>/</p>

<p><code>tar cvf tarfile.tar</code> ./filename /<em>将filename的文件备份到tarfile.tar里面</em>/</p>

<p><code>tar tvf filename.tar</code> /<em>列出tar文档的内容</em>/</p>

<p><code>tar xvf filename.tar</code>/<em>从tar文档中导出文件</em>/</p>

<p><code>tar zxpvf filename.tar.gz</code> /<em>从tar.gz文档中导出文件</em>/</p>

<p><code>tar zxvf filename.tar.gz</code>/<em>同上</em>/</p>

<p><code>tar xvf tarfile.tar ./filename /</code><em>导出tar文件中的单个文件</em>/</p>

<p><code>tar -xzf filename.tar.gz</code> 解压</p>

<p>打包文件供下载 将目录./www打包到文件www.tar.gz</p>

<p><code>tar czvf www.tar.gz ./www</code></p>

<p>或者直接更简单的 <code>zip ./www</code></p>

<hr />
]]></content>
  </entry>
  
</feed>
